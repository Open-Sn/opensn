name: Nightly Builds

on:
  schedule:
    - cron: "0 2 * * *"
  workflow_dispatch:

jobs:
  build:
    name: "${{ matrix.compiler }}"
    runs-on: [self-hosted]
    strategy:
      fail-fast: false
      matrix:
        compiler:
          - gcc/13
          - gcc/14
          - clang/17
          - clang/18
          - clang/19
          - intel/oneapi
    steps:
      - uses: actions/checkout@v4
      - name: build
        shell: bash
        run: |
          module load python3/3.12.3 opensn/${{ matrix.compiler }}
          mkdir build && cd build && cmake -DOPENSN_WITH_PYTHON_MODULE=ON .. && make -j && cd ..
      - name: test
        shell: bash
        run: |
          module load python3/3.12.3 opensn/${{ matrix.compiler }}
          test/run_tests -d test/python -j 32 -v 1 -w 3
      - name: test tutorials
        shell: bash
        run: |
          module load python3/3.12.3 opensn/${{ matrix.compiler }}
          export PYTHONPATH=$PWD/build
          test/run_tests -d doc/source/tutorials -j 32 -v 1 -w 3 --engine=jupyter
      - name: test unit
        shell: bash
        run: |
          module load python3/3.12.3 opensn/${{ matrix.compiler }}
          build/test/opensn-unit

  cuda:
    name: "${{ matrix.compiler }}"
    runs-on: [self-hosted, cuda]
    strategy:
      fail-fast: false
      matrix:
        compiler:
          - gcc/14
          - clang/19
    steps:
      - uses: actions/checkout@v4
      - name: build
        shell: bash
        run: |
          module load cuda/12.9 python3/3.12.3 opensn/${{ matrix.compiler }}
          mkdir build && cd build && cmake -DOPENSN_WITH_CUDA=ON -DCMAKE_CUDA_ARCHITECTURES=89 -DOPENSN_WITH_PYTHON_MODULE=ON .. && make -j && cd ..
      - name: test
        shell: bash
        run: |
          module load cuda/12.9 python3/3.12.3 opensn/${{ matrix.compiler }}
          test/run_tests --gpu -d test/python -j 32 -v 1

  sanitize:
    runs-on: [self-hosted]
    steps:
      - uses: actions/checkout@v4
      - name: build
        shell: bash
        run: |
          module load python3/3.12.3 opensn/clang/17
          cmake -DOPENSN_WITH_PYTHON_MODULE=ON --preset clang+debug+sanitizer
          cmake --build --preset clang+debug+sanitizer -j64
      - name: test
        shell: bash
        run: |
          module load python3/3.12.3 opensn/clang/17
          export LSAN_OPTIONS=suppressions=$PWD/tools/developer/lsan.supp
          test/run_tests -d test/python -j 32 -v 1 -w 3 --exe build-debug-sanitizer/test/python/opensn-test

  coverage:
    runs-on: [self-hosted]
    steps:
      - uses: actions/checkout@v4
      - name: build
        shell: bash
        run: |
          module load python3/3.12.3 opensn/gcc/14
          cmake -DOPENSN_WITH_PYTHON_MODULE=ON --preset coverage
          cmake --build --preset coverage -j64
      - name: test
        shell: bash
        run: |
          module load python3/3.12.3 opensn/gcc/14
          test/run_tests -d test/python -j 32 -v 1 -w 3 --exe build-coverage/test/python/opensn-test
      - name: unit tests
        shell: bash
        run: |
          module load python3/3.12.3 opensn/gcc/14
          ./build-coverage/test/opensn-unit
      - name: test tutorials
        shell: bash
        run: |
          module load python3/3.12.3 opensn/gcc/14
          export PYTHONPATH=$PWD/build-coverage
          test/run_tests -d doc/source/tutorials -j 32 -v 1 -w 3 --exe build-coverage/test/python/opensn-test --engine=jupyter
      - name: coveralls
        shell: bash
        run: |
          module load python3/3.12.3 opensn/gcc/14
          gcovr --gcov-suspicious-hits-threshold=2000000000000 -r . --filter '^(framework|python|modules)/' --coveralls coverage.json
          /opt/local/opensn/coveralls/bin/coveralls -c /opt/local/opensn/coveralls/.coveralls.yml -f coverage.json
