
.. _program_listing_file_framework_mesh_logical_volume_logical_volume_interface.h:

Program Listing for File logical_volume_interface.h
===================================================

|exhale_lsh| :ref:`Return to documentation for file <file_framework_mesh_logical_volume_logical_volume_interface.h>` (``framework/mesh/logical_volume/logical_volume_interface.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   // SPDX-FileCopyrightText: 2024 The OpenSn Authors <https://open-sn.github.io/opensn/>
   // SPDX-License-Identifier: MIT
   
   #pragma once
   
   #include "framework/parameters/input_parameters.h"
   
   namespace opensn
   {
   
   class LogicalVolume;
   
   /**
    * Interface class to add a dependency on a logical volume. Two things need to be done to use this
    * interface. 1) Derive from it. 2) Add its parameters to the child class. Now it will require a
    * handle to logical volume in the input language.
    */
   class LogicalVolumeInterface
   {
   protected:
     static InputParameters GetInputParameters();
   
     explicit LogicalVolumeInterface(const InputParameters& params);
   
     std::shared_ptr<LogicalVolume> GetLogicalVolume() const;
   
   private:
     const std::shared_ptr<LogicalVolume> logical_volume_;
   };
   
   } // namespace opensn
