
.. _program_listing_file_modules_linear_boltzmann_solvers_discrete_ordinates_problem_sweep_spds_cbc.h:

Program Listing for File cbc.h
==============================

|exhale_lsh| :ref:`Return to documentation for file <file_modules_linear_boltzmann_solvers_discrete_ordinates_problem_sweep_spds_cbc.h>` (``modules/linear_boltzmann_solvers/discrete_ordinates_problem/sweep/spds/cbc.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   // SPDX-FileCopyrightText: 2024 The OpenSn Authors <https://open-sn.github.io/opensn/>
   // SPDX-License-Identifier: MIT
   
   #pragma once
   
   #include "modules/linear_boltzmann_solvers/discrete_ordinates_problem/sweep/spds/spds.h"
   #include "modules/linear_boltzmann_solvers/discrete_ordinates_problem/sweep/sweep.h"
   
   namespace opensn
   {
   
   class CBC_SPDS : public SPDS
   {
   public:
     /**
      * Constructs a cell-by-cell sweep-plane data strcture (SPDS) with the given direction and grid.
      *
      * \param omega The angular direction vector.
      * \param grid Reference to the grid.
      * \param allow_cycles Whether cycles are allowed in the local sweep dependency graph.
      */
     CBC_SPDS(const Vector3& omega, const std::shared_ptr<MeshContinuum>& grid, bool allow_cycles);
   
     /// Returns the cell-by-cell task list.
     const std::vector<Task>& GetTaskList() const;
   
   protected:
     /// Cell-by-cell task list.
     std::vector<Task> task_list_;
   };
   
   } // namespace opensn
