
.. _program_listing_file_modules_linear_boltzmann_solvers_lbs_problem_acceleration_wgdsa.h:

Program Listing for File wgdsa.h
================================

|exhale_lsh| :ref:`Return to documentation for file <file_modules_linear_boltzmann_solvers_lbs_problem_acceleration_wgdsa.h>` (``modules/linear_boltzmann_solvers/lbs_problem/acceleration/wgdsa.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   // SPDX-FileCopyrightText: 2025 The OpenSn Authors <https://open-sn.github.io/opensn/>
   // SPDX-License-Identifier: MIT
   
   #pragma once
   
   #include "modules/linear_boltzmann_solvers/lbs_problem/groupset/lbs_groupset.h"
   #include <vector>
   
   namespace opensn
   {
   
   class DiscreteOrdinatesProblem;
   class SpatialDiscretization;
   
   class WGDSA
   {
   public:
     /// Initializes the Within-Group DSA solver.
     static void Init(DiscreteOrdinatesProblem& do_problem,
                      LBSGroupset& groupset,
                      bool vaccum_bcs_are_dirichlet = true);
   
     /// Assembles a delta-phi vector on the first moment.
     static void AssembleDeltaPhiVector(DiscreteOrdinatesProblem& do_problem,
                                        const LBSGroupset& groupset,
                                        const std::vector<double>& phi_in,
                                        std::vector<double>& delta_phi_local);
   
     /// Disassembles a delta-phi vector on the first moment.
     static void DisassembleDeltaPhiVector(DiscreteOrdinatesProblem& do_problem,
                                           const LBSGroupset& groupset,
                                           const std::vector<double>& delta_phi_local,
                                           std::vector<double>& ref_phi_new);
   
     /// Cleans up memory consuming items.
     static void CleanUp(LBSGroupset& groupset);
   
     /**
      * Creates a vector from a lbs primary stl vector where only the scalar moments are mapped to the
      * DOFs needed by WGDSA.
      */
     static std::vector<double> WGSCopyOnlyPhi0(DiscreteOrdinatesProblem& do_problem,
                                                const LBSGroupset& groupset,
                                                const std::vector<double>& phi_in);
   
     /// From the WGDSA DOFs, projects the scalar moments back into a primary STL vector.
     static void GSProjectBackPhi0(DiscreteOrdinatesProblem& do_problem,
                                   const LBSGroupset& groupset,
                                   const std::vector<double>& input,
                                   std::vector<double>& output);
   };
   
   } // namespace opensn
