
.. _program_listing_file_framework_mesh_mesh_continuum_grid_face_histogram.h:

Program Listing for File grid_face_histogram.h
==============================================

|exhale_lsh| :ref:`Return to documentation for file <file_framework_mesh_mesh_continuum_grid_face_histogram.h>` (``framework/mesh/mesh_continuum/grid_face_histogram.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   // SPDX-FileCopyrightText: 2024 The OpenSn Authors <https://open-sn.github.io/opensn/>
   // SPDX-License-Identifier: MIT
   
   #pragma once
   
   #include <cstddef>
   #include <vector>
   
   namespace opensn
   {
   
   /// Utility class for handling face categorizations based on number of vertices.
   class GridFaceHistogram
   {
   private:
     std::vector<std::pair<size_t, size_t>> face_categories_;
   
   public:
     explicit GridFaceHistogram(const std::vector<std::pair<size_t, size_t>>& face_categories)
       : face_categories_(face_categories)
     {
     }
   
     /// Returns the number of bins.
     size_t GetNumberOfFaceHistogramBins() const;
   
     /// Finds which bin holds the given number of vertices
     size_t MapFaceHistogramBins(size_t num_face_verts) const;
   
     /// Finds the amount of vertices per face for the given bin.
     size_t GetFaceHistogramBinDOFSize(size_t bin_number) const;
   };
   
   } // namespace opensn
