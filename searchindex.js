Search.setIndex({"alltitles": {"1. Capable of sweeps on Polyhedral meshes": [[5, "capable-of-sweeps-on-polyhedral-meshes"]], "2. C5G7 Criticality Benchmark with 768 processors": [[5, "c5g7-criticality-benchmark-with-768-processors"]], "2. Real world simulations": [[5, "real-world-simulations"]], "2D Orthogonal Grid Generation": [[99, null]], "3D Orthogonal Grid Generation": [[100, null]], "3D Orthogonal Grid Generation with multiple block IDs": [[101, null]], "A First Example": [[94, null]], "Acceleration of Power Iterations": [[86, "acceleration-of-power-iterations"]], "Adjoint Flux Formalism": [[81, null]], "Aggregation": [[88, "aggregation"]], "Angle Discretization (the Sn method)": [[84, "angle-discretization-the-sn-method"]], "Angle-sets": [[88, "angle-sets"]], "Angular Quadrature": [[89, null], [94, "Angular-Quadrature"]], "Angular quadrature": [[80, "angular-quadrature"]], "Argument vector": [[80, "argument-vector"]], "Attention": [[4, null], [4, null]], "Background on the Linear Boltzmann Equation": [[82, null]], "Base class": [[80, "base-class"], [80, "id1"], [80, "id3"], [80, "id4"], [80, "id5"]], "Binding C++ classes to Lua": [[2, null]], "Binding C++ classes to Python": [[3, null]], "Boolean operators": [[0, "boolean-operators"]], "Boundary Conditions": [[82, "boundary-conditions"]], "Built-in method for 1-group cross sections": [[107, null]], "C++ conventions": [[0, "c-conventions"]], "Caliper configuration": [[80, "caliper-configuration"]], "Call OpenMC cross-section reader": [[111, "Call-OpenMC-cross-section-reader"]], "Call built-in method": [[107, "Call-built-in-method"]], "Call cross-section reader": [[106, "Call-cross-section-reader"], [110, "Call-cross-section-reader"]], "Classes": [[2, "classes"], [3, "classes"]], "Classes and Structs": [[0, "classes-and-structs"]], "Classes as Parameters": [[2, "classes-as-parameters"]], "Coding Standards": [[0, null]], "Command-line parameters": [[0, "command-line-parameters"]], "Comments": [[0, "comments"]], "Compilation for developers": [[3, "compilation-for-developers"]], "Conditionals": [[0, "conditionals"]], "Contents": [[6, "contents"]], "Converting and Running this Notebook from the Terminal": [[94, "Converting-and-Running-this-Notebook-from-the-Terminal"]], "Create a Branch": [[4, "create-a-branch"]], "Create a Commit": [[4, "create-a-commit"]], "Create a function to plot the quadrature": [[91, "Create-a-function-to-plot-the-quadrature"]], "Cross Sections": [[94, "Cross-Sections"], [108, null]], "Cross section": [[80, "cross-section"]], "Definitions": [[82, "definitions"]], "Developer Workflow": [[4, null]], "Developer\u2019s Guide": [[1, null]], "Diffusion solver": [[80, "diffusion-solver"]], "Easy Install on Linux Machines": [[9, null]], "Easy Install on macOS": [[11, null]], "Energy Discretization": [[84, "energy-discretization"]], "Enums": [[0, "enums"], [2, "enums"]], "Example-1: sLDFE Quadrature parameters": [[92, "Example-1:-sLDFE-Quadrature-parameters"], [92, "id1"]], "Example-2: sLDFE Quadrature parameters": [[92, "Example-2:-sLDFE-Quadrature-parameters"]], "Example: List of target blocks, where each entry is a tuple: ((i, j, k), material_id)": [[101, "Example:-List-of-target-blocks,-where-each-entry-is-a-tuple:-((i,-j,-k),-material_id)"]], "Expansion of the Angle Redistribution Term": [[82, "expansion-of-the-angle-redistribution-term"]], "Export the mesh": [[99, "Export-the-mesh"], [99, "id1"], [100, "Export-the-mesh"], [100, "id1"], [101, "Export-the-mesh"]], "Field functions": [[80, "field-functions"]], "File names": [[0, "file-names"]], "Finalize (for Jupyter Notebook only)": [[91, "Finalize-(for-Jupyter-Notebook-only)"], [92, "Finalize-(for-Jupyter-Notebook-only)"], [94, "Finalize-(for-Jupyter-Notebook-only)"], [98, "Finalize-(for-Jupyter-Notebook-only)"], [99, "Finalize-(for-Jupyter-Notebook-only)"], [100, "Finalize-(for-Jupyter-Notebook-only)"], [101, "Finalize-(for-Jupyter-Notebook-only)"], [102, "Finalize-(for-Jupyter-Notebook-only)"], [103, "Finalize-(for-Jupyter-Notebook-only)"], [104, "Finalize-(for-Jupyter-Notebook-only)"], [105, "Finalize-(for-Jupyter-Notebook-only)"], [106, "Finalize-(for-Jupyter-Notebook-only)"], [107, "Finalize-(for-Jupyter-Notebook-only)"], [110, "Finalize-(for-Jupyter-Notebook-only)"], [111, "Finalize-(for-Jupyter-Notebook-only)"]], "Fixing your branch": [[4, "fixing-your-branch"]], "Formating": [[4, "formating"]], "Function wrappers": [[80, "function-wrappers"]], "Gallery": [[5, null]], "Getters and Setters": [[0, "getters-and-setters"]], "Graph partitioner": [[80, "graph-partitioner"]], "Grid-based": [[80, "grid-based"]], "Group-sets": [[88, "group-sets"]], "Import Requirements": [[94, "Import-Requirements"]], "Include directives": [[0, "include-directives"]], "Initial Conditions": [[82, "initial-conditions"]], "Install on Linux Machines": [[8, null]], "Install on macOS": [[10, null]], "Interpolation": [[80, "interpolation"]], "Introduction": [[88, "introduction"]], "Introduction to Angular Quadratures": [[90, null]], "Introduction to Cross Sections": [[109, null]], "Introduction to Meshing and Partitioning": [[97, null]], "Iterative Solution Algorithms": [[86, null]], "Krylov Subspace Method:": [[86, "krylov-subspace-method"]], "Linear Boltzmann Solver": [[94, "Linear-Boltzmann-Solver"], [95, null]], "Linear Boltzmann solver": [[80, "linear-boltzmann-solver"]], "List of Nodes": [[94, "List-of-Nodes"], [99, "List-of-Nodes"], [100, "List-of-Nodes"]], "List of Nodes, Mesh GGeneration and Partition": [[101, "List-of-Nodes,-Mesh-GGeneration-and-Partition"]], "Logical volume": [[80, "logical-volume"]], "Logical volume types": [[80, "logical-volume-types"]], "Logs": [[80, "logs"]], "Lua interface": [[8, "lua-interface"], [9, "lua-interface"], [10, "lua-interface"], [11, "lua-interface"]], "Macros": [[0, "macros"]], "Material IDs": [[94, "Material-IDs"], [99, "Material-IDs"], [100, "Material-IDs"], [101, "Material-IDs"]], "Math": [[80, "math"]], "Member functions": [[2, "member-functions"]], "Member variables": [[2, "member-variables"]], "Mesh": [[80, "mesh"], [80, "id2"], [94, "Mesh"]], "Mesh (again) and Parmetis partition": [[99, "Mesh-(again)-and-Parmetis-partition"], [100, "Mesh-(again)-and-Parmetis-partition"]], "Mesh and KBA Partition": [[99, "Mesh-and-KBA-Partition"], [100, "Mesh-and-KBA-Partition"]], "Mesh and Partition": [[98, "Mesh-and-Partition"], [102, "Mesh-and-Partition"], [103, "Mesh-and-Partition"], [104, "Mesh-and-Partition"], [105, "Mesh-and-Partition"]], "Mesh generator": [[80, "mesh-generator"]], "Meshing": [[97, "meshing"]], "Meshing and Partitioning": [[96, null]], "More details": [[2, "more-details"]], "Multigroup Cross-Section Data": [[83, null]], "Multigroup Solution Process: Background": [[86, "multigroup-solution-process-background"]], "Namespaces": [[0, "namespaces"], [2, "namespaces"], [3, "namespaces"]], "Naming Conventions": [[0, "naming-conventions"]], "Non-linear k-eigen": [[80, "non-linear-k-eigen"]], "Numbers": [[0, "numbers"]], "Options for the Linear Boltzmann Problem (LBS)": [[94, "Options-for-the-Linear-Boltzmann-Problem-(LBS)"]], "Orthogonal Mesh Generation": [[94, "Orthogonal-Mesh-Generation"]], "Outcome of a Simulation: Particle Distribution, Reaction Rates, and Leakage Rates": [[87, null]], "Parallel Sweeps": [[88, null]], "Partitioning": [[97, "partitioning"]], "Partitioning and Scheduling": [[88, "partitioning-and-scheduling"]], "Phase-space Discretization": [[84, null]], "Plot the resulting quadrature": [[92, "Plot-the-resulting-quadrature"], [92, "id2"]], "Point": [[80, "point"]], "Point kinetic trnasient solver": [[80, "point-kinetic-trnasient-solver"]], "Pointers": [[0, "pointers"]], "Possible Extensions": [[94, "Possible-Extensions"]], "Post-Processing via Field Functions": [[94, "Post-Processing-via-Field-Functions"]], "Post-processor": [[80, "post-processor"]], "Post-processors": [[80, "post-processors"]], "Power Iterations": [[86, "power-iterations"]], "Power iteration solver": [[80, "power-iteration-solver"]], "Printer": [[80, "printer"]], "Product Quadrature": [[91, null]], "Product quadratures": [[80, "product-quadratures"]], "Pure Python plug-ins (future development)": [[3, "pure-python-plug-ins-future-development"]], "Putting the Linear Boltzmann Solver Together": [[94, "Putting-the-Linear-Boltzmann-Solver-Together"]], "Python API": [[80, null]], "Python console/interface": [[8, "python-console-interface"], [9, "python-console-interface"], [10, "python-console-interface"], [11, "python-console-interface"]], "Quadrature parameters": [[91, "Quadrature-parameters"]], "Quick Install Guide": [[7, null]], "Read ASCII file for 1-group cross sections": [[106, null]], "Read ASCII file for multi-group cross sections": [[110, null]], "Read HDF5 file from OpenMC to load multi-group cross sections": [[111, null]], "Reading a 2D gmsh file": [[102, null]], "Reading a 2D mesh file and extruding it": [[98, null]], "Reading a 2D obj file": [[104, null]], "Reading a 3D VTU file": [[105, null]], "Reading a 3D gmsh file": [[103, null]], "Recommended publication for citing": [[6, null]], "References": [[0, "references"], [82, "references"], [84, "references"], [86, "references"], [88, "references"]], "Response evaluator": [[80, "response-evaluator"]], "Retrieve directions": [[91, "Retrieve-directions"]], "Sending a Pull Request": [[4, "sending-a-pull-request"]], "Settings": [[80, "settings"]], "Short summary of Transport Equations Solved in OpenSn": [[82, "short-summary-of-transport-equations-solved-in-opensn"]], "Simplified LDFES quadrature": [[80, "simplified-ldfes-quadrature"]], "Simplified Linear Discontinuous Finite Element (LDFE) Quadrature": [[92, null]], "Solver": [[80, "solver"]], "Some cross-section data can be retrieved in Python": [[106, "Some-cross-section-data-can-be-retrieved-in-Python"], [107, "Some-cross-section-data-can-be-retrieved-in-Python"], [110, "Some-cross-section-data-can-be-retrieved-in-Python"], [111, "Some-cross-section-data-can-be-retrieved-in-Python"]], "Source": [[80, "source"]], "Source Iteration and Krylov Solvers": [[86, "source-iteration-and-krylov-solvers"]], "Source Iteration:": [[86, "source-iteration"]], "Spatial Discretization": [[84, "spatial-discretization"]], "Spherical harmonics": [[80, "spherical-harmonics"]], "Squashing Commits": [[4, "squashing-commits"]], "Static constants": [[0, "static-constants"]], "Steady state solver": [[80, "steady-state-solver"]], "Step 1 - Install Development Tools": [[8, "step-1-install-development-tools"], [9, "step-1-install-development-tools"], [11, "step-1-install-development-tools"]], "Step 1 - Install GCC": [[10, "step-1-install-gcc"]], "Step 10 - Build the OpenSn Documentation": [[8, "step-10-build-the-opensn-documentation"]], "Step 10 - OpenSn Documentation": [[10, "step-10-opensn-documentation"]], "Step 2 - Clone OpenSn": [[9, "step-2-clone-opensn"]], "Step 2 - Install MPICH": [[10, "step-2-install-mpich"], [11, "step-2-install-mpich"]], "Step 2 - Install PETSc": [[8, "step-2-install-petsc"]], "Step 3 - Clone OpenSn": [[11, "step-3-clone-opensn"]], "Step 3 - Install PETSc": [[10, "step-3-install-petsc"]], "Step 3 - Install Third-Party Libraries": [[9, "step-3-install-third-party-libraries"]], "Step 3 - Install the Visualization Tool Kit (VTK)": [[8, "step-3-install-the-visualization-tool-kit-vtk"]], "Step 4 - Configure Environment": [[9, "step-4-configure-environment"]], "Step 4 - Install Lua": [[8, "step-4-install-lua"]], "Step 4 - Install the Visualization Tool Kit": [[10, "step-4-install-the-visualization-tool-kit"]], "Step 4 - Set Up the Environment": [[11, "step-4-set-up-the-environment"]], "Step 5 - Build OpenSn": [[9, "step-5-build-opensn"]], "Step 5 - Configure and Build OpenSn": [[11, "step-5-configure-and-build-opensn"]], "Step 5 - Install Caliper": [[8, "step-5-install-caliper"]], "Step 5 - Install Lua": [[10, "step-5-install-lua"]], "Step 6 - Configure Environment": [[8, "step-6-configure-environment"]], "Step 6 - Install Caliper": [[10, "step-6-install-caliper"]], "Step 6 - Run Regression Tests": [[9, "step-6-run-regression-tests"], [11, "step-6-run-regression-tests"]], "Step 7 - Build the OpenSn Documentation": [[9, "step-7-build-the-opensn-documentation"]], "Step 7 - Clone OpenSn": [[8, "step-7-clone-opensn"], [10, "step-7-clone-opensn"]], "Step 7 - OpenSn Documentation": [[11, "step-7-opensn-documentation"]], "Step 8 - Build OpenSn": [[8, "step-8-build-opensn"]], "Step 8 - Configure and Build OpenSn": [[10, "step-8-configure-and-build-opensn"]], "Step 9 - Run Regression Tests": [[8, "step-9-run-regression-tests"], [10, "step-9-run-regression-tests"]], "Streaming Term in Cartesian and Curvilinear Coordinate Systems": [[82, "streaming-term-in-cartesian-and-curvilinear-coordinate-systems"]], "Surface mesh": [[80, "surface-mesh"]], "The Linear Boltzmann Equation": [[82, "the-linear-boltzmann-equation"]], "The OpenSn Discrete-Ordinates Code": [[6, null]], "Theory Manual": [[85, null]], "Thermal Upscattering Acceleration": [[86, "thermal-upscattering-acceleration"]], "Tutorials": [[93, null]], "Uncollided-flux Treatment": [[86, "uncollided-flux-treatment"]], "Updating Your Branch": [[4, "updating-your-branch"]], "Using this Notebook": [[94, "Using-this-Notebook"]], "Visualization": [[98, "Visualization"], [102, "Visualization"], [103, "Visualization"], [104, "Visualization"], [105, "Visualization"]], "Volumetric Source": [[94, "Volumetric-Source"]], "Within-group Acceleration": [[86, "within-group-acceleration"]], "pyopensn.aquad.AngularQuadrature": [[12, null]], "pyopensn.aquad.CurvilinearQuadrature": [[13, null]], "pyopensn.aquad.GLCProductQuadrature2DRZ": [[14, null]], "pyopensn.aquad.GLCProductQuadrature2DXY": [[15, null]], "pyopensn.aquad.GLCProductQuadrature3DXYZ": [[16, null]], "pyopensn.aquad.GLProductQuadrature1DSlab": [[17, null]], "pyopensn.aquad.ProductQuadrature": [[18, null]], "pyopensn.aquad.SLDFESQuadrature": [[19, null]], "pyopensn.context.EnableCaliper": [[20, null]], "pyopensn.context.EnablePETScErrorHandler": [[21, null]], "pyopensn.context.Finalize": [[22, null]], "pyopensn.context.InitializeWithArgv": [[23, null]], "pyopensn.context.SetCaliperConfig": [[24, null]], "pyopensn.context.SetVerbosityLevel": [[25, null]], "pyopensn.context.UseColor": [[26, null]], "pyopensn.diffusion.CFEMDiffusionSolver": [[27, null]], "pyopensn.diffusion.DFEMDiffusionSolver": [[28, null]], "pyopensn.diffusion.DiffusionSolverBase": [[29, null]], "pyopensn.fieldfunc.FieldFunction": [[30, null]], "pyopensn.fieldfunc.FieldFunctionGridBased": [[31, null]], "pyopensn.fieldfunc.FieldFunctionInterpolationLine": [[32, null]], "pyopensn.fieldfunc.FieldFunctionInterpolationPoint": [[33, null]], "pyopensn.fieldfunc.FieldFunctionInterpolationVolume": [[34, null]], "pyopensn.logvol.BooleanLogicalVolume": [[35, null]], "pyopensn.logvol.LogicalVolume": [[36, null]], "pyopensn.logvol.RCCLogicalVolume": [[37, null]], "pyopensn.logvol.RPPLogicalVolume": [[38, null]], "pyopensn.logvol.SphereLogicalVolume": [[39, null]], "pyopensn.logvol.SurfaceMeshLogicalVolume": [[40, null]], "pyopensn.math.Function": [[41, null]], "pyopensn.math.ScalarMaterialFunction": [[42, null]], "pyopensn.math.ScalarSpatialFunction": [[43, null]], "pyopensn.math.ScalarSpatialMaterialFunction": [[44, null]], "pyopensn.math.Vector3": [[45, null]], "pyopensn.math.VectorSpatialFunction": [[46, null]], "pyopensn.math.Ylm": [[47, null]], "pyopensn.mesh.DistributedMeshGenerator": [[48, null]], "pyopensn.mesh.ExtruderMeshGenerator": [[49, null]], "pyopensn.mesh.FromFileMeshGenerator": [[50, null]], "pyopensn.mesh.GraphPartitioner": [[51, null]], "pyopensn.mesh.KBAGraphPartitioner": [[52, null]], "pyopensn.mesh.LinearGraphPartitioner": [[53, null]], "pyopensn.mesh.MeshContinuum": [[54, null]], "pyopensn.mesh.MeshGenerator": [[55, null]], "pyopensn.mesh.OrthogonalMeshGenerator": [[56, null]], "pyopensn.mesh.PETScGraphPartitioner": [[57, null]], "pyopensn.mesh.SplitFileMeshGenerator": [[58, null]], "pyopensn.mesh.SurfaceMesh": [[59, null]], "pyopensn.post.AggregateNodalValuePostProcessor": [[60, null]], "pyopensn.post.CellVolumeIntegralPostProcessor": [[61, null]], "pyopensn.post.PostProcessor": [[62, null]], "pyopensn.post.Print": [[63, null]], "pyopensn.post.SetPrinterOptions": [[64, null]], "pyopensn.post.SolverInfoPostProcessor": [[65, null]], "pyopensn.response.ResponseEvaluator": [[66, null]], "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem": [[67, null]], "pyopensn.solver.DiscreteOrdinatesProblem": [[68, null]], "pyopensn.solver.LBSProblem": [[69, null]], "pyopensn.solver.NonLinearKEigenSolver": [[70, null]], "pyopensn.solver.PRKSolver": [[71, null]], "pyopensn.solver.PowerIterationKEigenSCDSASolver": [[72, null]], "pyopensn.solver.PowerIterationKEigenSMMSolver": [[73, null]], "pyopensn.solver.PowerIterationKEigenSolver": [[74, null]], "pyopensn.solver.Solver": [[75, null]], "pyopensn.solver.SteadyStateSolver": [[76, null]], "pyopensn.source.PointSource": [[77, null]], "pyopensn.source.VolumetricSource": [[78, null]], "pyopensn.xs.MultiGroupXS": [[79, null]]}, "docnames": ["devguide/coding_standard", "devguide/index", "devguide/lua_bindings", "devguide/py_bindings", "devguide/workflow", "gallery", "index", "install/index", "install/install_linux", "install/install_linux_easy", "install/install_macos", "install/install_macos_easy", "pyapi/generated/pyopensn.aquad.AngularQuadrature", "pyapi/generated/pyopensn.aquad.CurvilinearQuadrature", "pyapi/generated/pyopensn.aquad.GLCProductQuadrature2DRZ", "pyapi/generated/pyopensn.aquad.GLCProductQuadrature2DXY", "pyapi/generated/pyopensn.aquad.GLCProductQuadrature3DXYZ", "pyapi/generated/pyopensn.aquad.GLProductQuadrature1DSlab", "pyapi/generated/pyopensn.aquad.ProductQuadrature", "pyapi/generated/pyopensn.aquad.SLDFESQuadrature", "pyapi/generated/pyopensn.context.EnableCaliper", "pyapi/generated/pyopensn.context.EnablePETScErrorHandler", "pyapi/generated/pyopensn.context.Finalize", "pyapi/generated/pyopensn.context.InitializeWithArgv", "pyapi/generated/pyopensn.context.SetCaliperConfig", "pyapi/generated/pyopensn.context.SetVerbosityLevel", "pyapi/generated/pyopensn.context.UseColor", "pyapi/generated/pyopensn.diffusion.CFEMDiffusionSolver", "pyapi/generated/pyopensn.diffusion.DFEMDiffusionSolver", "pyapi/generated/pyopensn.diffusion.DiffusionSolverBase", "pyapi/generated/pyopensn.fieldfunc.FieldFunction", "pyapi/generated/pyopensn.fieldfunc.FieldFunctionGridBased", "pyapi/generated/pyopensn.fieldfunc.FieldFunctionInterpolationLine", "pyapi/generated/pyopensn.fieldfunc.FieldFunctionInterpolationPoint", "pyapi/generated/pyopensn.fieldfunc.FieldFunctionInterpolationVolume", "pyapi/generated/pyopensn.logvol.BooleanLogicalVolume", "pyapi/generated/pyopensn.logvol.LogicalVolume", "pyapi/generated/pyopensn.logvol.RCCLogicalVolume", "pyapi/generated/pyopensn.logvol.RPPLogicalVolume", "pyapi/generated/pyopensn.logvol.SphereLogicalVolume", "pyapi/generated/pyopensn.logvol.SurfaceMeshLogicalVolume", "pyapi/generated/pyopensn.math.Function", "pyapi/generated/pyopensn.math.ScalarMaterialFunction", "pyapi/generated/pyopensn.math.ScalarSpatialFunction", "pyapi/generated/pyopensn.math.ScalarSpatialMaterialFunction", "pyapi/generated/pyopensn.math.Vector3", "pyapi/generated/pyopensn.math.VectorSpatialFunction", "pyapi/generated/pyopensn.math.Ylm", "pyapi/generated/pyopensn.mesh.DistributedMeshGenerator", "pyapi/generated/pyopensn.mesh.ExtruderMeshGenerator", "pyapi/generated/pyopensn.mesh.FromFileMeshGenerator", "pyapi/generated/pyopensn.mesh.GraphPartitioner", "pyapi/generated/pyopensn.mesh.KBAGraphPartitioner", "pyapi/generated/pyopensn.mesh.LinearGraphPartitioner", "pyapi/generated/pyopensn.mesh.MeshContinuum", "pyapi/generated/pyopensn.mesh.MeshGenerator", "pyapi/generated/pyopensn.mesh.OrthogonalMeshGenerator", "pyapi/generated/pyopensn.mesh.PETScGraphPartitioner", "pyapi/generated/pyopensn.mesh.SplitFileMeshGenerator", "pyapi/generated/pyopensn.mesh.SurfaceMesh", "pyapi/generated/pyopensn.post.AggregateNodalValuePostProcessor", "pyapi/generated/pyopensn.post.CellVolumeIntegralPostProcessor", "pyapi/generated/pyopensn.post.PostProcessor", "pyapi/generated/pyopensn.post.Print", "pyapi/generated/pyopensn.post.SetPrinterOptions", "pyapi/generated/pyopensn.post.SolverInfoPostProcessor", "pyapi/generated/pyopensn.response.ResponseEvaluator", "pyapi/generated/pyopensn.solver.DiscreteOrdinatesCurvilinearProblem", "pyapi/generated/pyopensn.solver.DiscreteOrdinatesProblem", "pyapi/generated/pyopensn.solver.LBSProblem", "pyapi/generated/pyopensn.solver.NonLinearKEigenSolver", "pyapi/generated/pyopensn.solver.PRKSolver", "pyapi/generated/pyopensn.solver.PowerIterationKEigenSCDSASolver", "pyapi/generated/pyopensn.solver.PowerIterationKEigenSMMSolver", "pyapi/generated/pyopensn.solver.PowerIterationKEigenSolver", "pyapi/generated/pyopensn.solver.Solver", "pyapi/generated/pyopensn.solver.SteadyStateSolver", "pyapi/generated/pyopensn.source.PointSource", "pyapi/generated/pyopensn.source.VolumetricSource", "pyapi/generated/pyopensn.xs.MultiGroupXS", "pyapi/index", "theory/adjoint", "theory/background", "theory/cross_sections", "theory/discretization", "theory/index", "theory/iterative", "theory/outcome", "theory/parallelization", "tutorials/aquad/index", "tutorials/aquad/introduction", "tutorials/aquad/product_GLC", "tutorials/aquad/sLDFE", "tutorials/index", "tutorials/lbs/first/first_example", "tutorials/lbs/index", "tutorials/mesh/index", "tutorials/mesh/introduction", "tutorials/mesh/mesh_extrude", "tutorials/mesh/mesh_ortho_2D", "tutorials/mesh/mesh_ortho_3D", "tutorials/mesh/mesh_ortho_3D_blockIDs", "tutorials/mesh/mesh_read_gmsh_2D", "tutorials/mesh/mesh_read_gmsh_3D", "tutorials/mesh/mesh_read_obj_2D", "tutorials/mesh/mesh_read_vtu_3D", "tutorials/xs/1g_xs_read_file", "tutorials/xs/1g_xs_simple", "tutorials/xs/index", "tutorials/xs/introduction", "tutorials/xs/mg_xs_read_file", "tutorials/xs/mg_xs_read_openmc"], "envversion": {"nbsphinx": 4, "sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinxcontrib.bibtex": 9}, "filenames": ["devguide/coding_standard.md", "devguide/index.rst", "devguide/lua_bindings.md", "devguide/py_bindings.rst", "devguide/workflow.md", "gallery.md", "index.rst", "install/index.rst", "install/install_linux.rst", "install/install_linux_easy.rst", "install/install_macos.rst", "install/install_macos_easy.rst", "pyapi/generated/pyopensn.aquad.AngularQuadrature.rst", "pyapi/generated/pyopensn.aquad.CurvilinearQuadrature.rst", "pyapi/generated/pyopensn.aquad.GLCProductQuadrature2DRZ.rst", "pyapi/generated/pyopensn.aquad.GLCProductQuadrature2DXY.rst", "pyapi/generated/pyopensn.aquad.GLCProductQuadrature3DXYZ.rst", "pyapi/generated/pyopensn.aquad.GLProductQuadrature1DSlab.rst", "pyapi/generated/pyopensn.aquad.ProductQuadrature.rst", "pyapi/generated/pyopensn.aquad.SLDFESQuadrature.rst", "pyapi/generated/pyopensn.context.EnableCaliper.rst", "pyapi/generated/pyopensn.context.EnablePETScErrorHandler.rst", "pyapi/generated/pyopensn.context.Finalize.rst", "pyapi/generated/pyopensn.context.InitializeWithArgv.rst", "pyapi/generated/pyopensn.context.SetCaliperConfig.rst", "pyapi/generated/pyopensn.context.SetVerbosityLevel.rst", "pyapi/generated/pyopensn.context.UseColor.rst", "pyapi/generated/pyopensn.diffusion.CFEMDiffusionSolver.rst", "pyapi/generated/pyopensn.diffusion.DFEMDiffusionSolver.rst", "pyapi/generated/pyopensn.diffusion.DiffusionSolverBase.rst", "pyapi/generated/pyopensn.fieldfunc.FieldFunction.rst", "pyapi/generated/pyopensn.fieldfunc.FieldFunctionGridBased.rst", "pyapi/generated/pyopensn.fieldfunc.FieldFunctionInterpolationLine.rst", "pyapi/generated/pyopensn.fieldfunc.FieldFunctionInterpolationPoint.rst", "pyapi/generated/pyopensn.fieldfunc.FieldFunctionInterpolationVolume.rst", "pyapi/generated/pyopensn.logvol.BooleanLogicalVolume.rst", "pyapi/generated/pyopensn.logvol.LogicalVolume.rst", "pyapi/generated/pyopensn.logvol.RCCLogicalVolume.rst", "pyapi/generated/pyopensn.logvol.RPPLogicalVolume.rst", "pyapi/generated/pyopensn.logvol.SphereLogicalVolume.rst", "pyapi/generated/pyopensn.logvol.SurfaceMeshLogicalVolume.rst", "pyapi/generated/pyopensn.math.Function.rst", "pyapi/generated/pyopensn.math.ScalarMaterialFunction.rst", "pyapi/generated/pyopensn.math.ScalarSpatialFunction.rst", "pyapi/generated/pyopensn.math.ScalarSpatialMaterialFunction.rst", "pyapi/generated/pyopensn.math.Vector3.rst", "pyapi/generated/pyopensn.math.VectorSpatialFunction.rst", "pyapi/generated/pyopensn.math.Ylm.rst", "pyapi/generated/pyopensn.mesh.DistributedMeshGenerator.rst", "pyapi/generated/pyopensn.mesh.ExtruderMeshGenerator.rst", "pyapi/generated/pyopensn.mesh.FromFileMeshGenerator.rst", "pyapi/generated/pyopensn.mesh.GraphPartitioner.rst", "pyapi/generated/pyopensn.mesh.KBAGraphPartitioner.rst", "pyapi/generated/pyopensn.mesh.LinearGraphPartitioner.rst", "pyapi/generated/pyopensn.mesh.MeshContinuum.rst", "pyapi/generated/pyopensn.mesh.MeshGenerator.rst", "pyapi/generated/pyopensn.mesh.OrthogonalMeshGenerator.rst", "pyapi/generated/pyopensn.mesh.PETScGraphPartitioner.rst", "pyapi/generated/pyopensn.mesh.SplitFileMeshGenerator.rst", "pyapi/generated/pyopensn.mesh.SurfaceMesh.rst", "pyapi/generated/pyopensn.post.AggregateNodalValuePostProcessor.rst", "pyapi/generated/pyopensn.post.CellVolumeIntegralPostProcessor.rst", "pyapi/generated/pyopensn.post.PostProcessor.rst", "pyapi/generated/pyopensn.post.Print.rst", "pyapi/generated/pyopensn.post.SetPrinterOptions.rst", "pyapi/generated/pyopensn.post.SolverInfoPostProcessor.rst", "pyapi/generated/pyopensn.response.ResponseEvaluator.rst", "pyapi/generated/pyopensn.solver.DiscreteOrdinatesCurvilinearProblem.rst", "pyapi/generated/pyopensn.solver.DiscreteOrdinatesProblem.rst", "pyapi/generated/pyopensn.solver.LBSProblem.rst", "pyapi/generated/pyopensn.solver.NonLinearKEigenSolver.rst", "pyapi/generated/pyopensn.solver.PRKSolver.rst", "pyapi/generated/pyopensn.solver.PowerIterationKEigenSCDSASolver.rst", "pyapi/generated/pyopensn.solver.PowerIterationKEigenSMMSolver.rst", "pyapi/generated/pyopensn.solver.PowerIterationKEigenSolver.rst", "pyapi/generated/pyopensn.solver.Solver.rst", "pyapi/generated/pyopensn.solver.SteadyStateSolver.rst", "pyapi/generated/pyopensn.source.PointSource.rst", "pyapi/generated/pyopensn.source.VolumetricSource.rst", "pyapi/generated/pyopensn.xs.MultiGroupXS.rst", "pyapi/index.rst", "theory/adjoint.rst", "theory/background.rst", "theory/cross_sections.rst", "theory/discretization.rst", "theory/index.rst", "theory/iterative.rst", "theory/outcome.rst", "theory/parallelization.rst", "tutorials/aquad/index.rst", "tutorials/aquad/introduction.rst", "tutorials/aquad/product_GLC.ipynb", "tutorials/aquad/sLDFE.ipynb", "tutorials/index.rst", "tutorials/lbs/first/first_example.ipynb", "tutorials/lbs/index.rst", "tutorials/mesh/index.rst", "tutorials/mesh/introduction.rst", "tutorials/mesh/mesh_extrude.ipynb", "tutorials/mesh/mesh_ortho_2D.ipynb", "tutorials/mesh/mesh_ortho_3D.ipynb", "tutorials/mesh/mesh_ortho_3D_blockIDs.ipynb", "tutorials/mesh/mesh_read_gmsh_2D.ipynb", "tutorials/mesh/mesh_read_gmsh_3D.ipynb", "tutorials/mesh/mesh_read_obj_2D.ipynb", "tutorials/mesh/mesh_read_vtu_3D.ipynb", "tutorials/xs/1g_xs_read_file.ipynb", "tutorials/xs/1g_xs_simple.ipynb", "tutorials/xs/index.rst", "tutorials/xs/introduction.rst", "tutorials/xs/mg_xs_read_file.ipynb", "tutorials/xs/mg_xs_read_openmc.ipynb"], "indexentries": {"__call__() (pyopensn.math.scalarmaterialfunction method)": [[42, "pyopensn.math.ScalarMaterialFunction.__call__", false]], "__call__() (pyopensn.math.scalarspatialfunction method)": [[43, "pyopensn.math.ScalarSpatialFunction.__call__", false]], "__call__() (pyopensn.math.scalarspatialmaterialfunction method)": [[44, "pyopensn.math.ScalarSpatialMaterialFunction.__call__", false]], "__call__() (pyopensn.math.vectorspatialfunction method)": [[46, "pyopensn.math.VectorSpatialFunction.__call__", false]], "__init__() (pyopensn.aquad.glcproductquadrature2drz method)": [[14, "pyopensn.aquad.GLCProductQuadrature2DRZ.__init__", false]], "__init__() (pyopensn.aquad.glcproductquadrature2dxy method)": [[15, "pyopensn.aquad.GLCProductQuadrature2DXY.__init__", false]], "__init__() (pyopensn.aquad.glcproductquadrature3dxyz method)": [[16, "pyopensn.aquad.GLCProductQuadrature3DXYZ.__init__", false]], "__init__() (pyopensn.aquad.glproductquadrature1dslab method)": [[17, "pyopensn.aquad.GLProductQuadrature1DSlab.__init__", false]], "__init__() (pyopensn.aquad.sldfesquadrature method)": [[19, "pyopensn.aquad.SLDFESQuadrature.__init__", false]], "__init__() (pyopensn.diffusion.cfemdiffusionsolver method)": [[27, "pyopensn.diffusion.CFEMDiffusionSolver.__init__", false]], "__init__() (pyopensn.diffusion.dfemdiffusionsolver method)": [[28, "pyopensn.diffusion.DFEMDiffusionSolver.__init__", false]], "__init__() (pyopensn.fieldfunc.fieldfunctioninterpolationline method)": [[32, "pyopensn.fieldfunc.FieldFunctionInterpolationLine.__init__", false]], "__init__() (pyopensn.fieldfunc.fieldfunctioninterpolationpoint method)": [[33, "pyopensn.fieldfunc.FieldFunctionInterpolationPoint.__init__", false]], "__init__() (pyopensn.fieldfunc.fieldfunctioninterpolationvolume method)": [[34, "pyopensn.fieldfunc.FieldFunctionInterpolationVolume.__init__", false]], "__init__() (pyopensn.logvol.booleanlogicalvolume method)": [[35, "pyopensn.logvol.BooleanLogicalVolume.__init__", false]], "__init__() (pyopensn.logvol.rcclogicalvolume method)": [[37, "pyopensn.logvol.RCCLogicalVolume.__init__", false]], "__init__() (pyopensn.logvol.rpplogicalvolume method)": [[38, "pyopensn.logvol.RPPLogicalVolume.__init__", false]], "__init__() (pyopensn.logvol.spherelogicalvolume method)": [[39, "pyopensn.logvol.SphereLogicalVolume.__init__", false]], "__init__() (pyopensn.logvol.surfacemeshlogicalvolume method)": [[40, "pyopensn.logvol.SurfaceMeshLogicalVolume.__init__", false]], "__init__() (pyopensn.math.function method)": [[41, "pyopensn.math.Function.__init__", false]], "__init__() (pyopensn.math.scalarmaterialfunction method)": [[42, "pyopensn.math.ScalarMaterialFunction.__init__", false]], "__init__() (pyopensn.math.scalarspatialfunction method)": [[43, "pyopensn.math.ScalarSpatialFunction.__init__", false]], "__init__() (pyopensn.math.scalarspatialmaterialfunction method)": [[44, "pyopensn.math.ScalarSpatialMaterialFunction.__init__", false]], "__init__() (pyopensn.math.vector3 method)": [[45, "pyopensn.math.Vector3.__init__", false]], "__init__() (pyopensn.math.vectorspatialfunction method)": [[46, "pyopensn.math.VectorSpatialFunction.__init__", false]], "__init__() (pyopensn.mesh.distributedmeshgenerator method)": [[48, "pyopensn.mesh.DistributedMeshGenerator.__init__", false]], "__init__() (pyopensn.mesh.extrudermeshgenerator method)": [[49, "pyopensn.mesh.ExtruderMeshGenerator.__init__", false]], "__init__() (pyopensn.mesh.fromfilemeshgenerator method)": [[50, "pyopensn.mesh.FromFileMeshGenerator.__init__", false]], "__init__() (pyopensn.mesh.kbagraphpartitioner method)": [[52, "pyopensn.mesh.KBAGraphPartitioner.__init__", false]], "__init__() (pyopensn.mesh.lineargraphpartitioner method)": [[53, "pyopensn.mesh.LinearGraphPartitioner.__init__", false]], "__init__() (pyopensn.mesh.orthogonalmeshgenerator method)": [[56, "pyopensn.mesh.OrthogonalMeshGenerator.__init__", false]], "__init__() (pyopensn.mesh.petscgraphpartitioner method)": [[57, "pyopensn.mesh.PETScGraphPartitioner.__init__", false]], "__init__() (pyopensn.mesh.splitfilemeshgenerator method)": [[58, "pyopensn.mesh.SplitFileMeshGenerator.__init__", false]], "__init__() (pyopensn.mesh.surfacemesh method)": [[59, "pyopensn.mesh.SurfaceMesh.__init__", false]], "__init__() (pyopensn.post.aggregatenodalvaluepostprocessor method)": [[60, "pyopensn.post.AggregateNodalValuePostProcessor.__init__", false]], "__init__() (pyopensn.post.cellvolumeintegralpostprocessor method)": [[61, "pyopensn.post.CellVolumeIntegralPostProcessor.__init__", false]], "__init__() (pyopensn.post.solverinfopostprocessor method)": [[65, "pyopensn.post.SolverInfoPostProcessor.__init__", false]], "__init__() (pyopensn.response.responseevaluator method)": [[66, "pyopensn.response.ResponseEvaluator.__init__", false]], "__init__() (pyopensn.solver.discreteordinatescurvilinearproblem method)": [[67, "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem.__init__", false]], "__init__() (pyopensn.solver.discreteordinatesproblem method)": [[68, "pyopensn.solver.DiscreteOrdinatesProblem.__init__", false]], "__init__() (pyopensn.solver.nonlinearkeigensolver method)": [[70, "pyopensn.solver.NonLinearKEigenSolver.__init__", false]], "__init__() (pyopensn.solver.poweriterationkeigenscdsasolver method)": [[72, "pyopensn.solver.PowerIterationKEigenSCDSASolver.__init__", false]], "__init__() (pyopensn.solver.poweriterationkeigensmmsolver method)": [[73, "pyopensn.solver.PowerIterationKEigenSMMSolver.__init__", false]], "__init__() (pyopensn.solver.poweriterationkeigensolver method)": [[74, "pyopensn.solver.PowerIterationKEigenSolver.__init__", false]], "__init__() (pyopensn.solver.prksolver method)": [[71, "pyopensn.solver.PRKSolver.__init__", false]], "__init__() (pyopensn.solver.steadystatesolver method)": [[76, "pyopensn.solver.SteadyStateSolver.__init__", false]], "__init__() (pyopensn.source.pointsource method)": [[77, "pyopensn.source.PointSource.__init__", false]], "__init__() (pyopensn.source.volumetricsource method)": [[78, "pyopensn.source.VolumetricSource.__init__", false]], "__init__() (pyopensn.xs.multigroupxs method)": [[79, "pyopensn.xs.MultiGroupXS.__init__", false]], "abscissae (pyopensn.aquad.angularquadrature property)": [[12, "pyopensn.aquad.AngularQuadrature.abscissae", false]], "abscissae (pyopensn.aquad.curvilinearquadrature property)": [[13, "pyopensn.aquad.CurvilinearQuadrature.abscissae", false]], "abscissae (pyopensn.aquad.glcproductquadrature2drz property)": [[14, "pyopensn.aquad.GLCProductQuadrature2DRZ.abscissae", false]], "abscissae (pyopensn.aquad.glcproductquadrature2dxy property)": [[15, "pyopensn.aquad.GLCProductQuadrature2DXY.abscissae", false]], "abscissae (pyopensn.aquad.glcproductquadrature3dxyz property)": [[16, "pyopensn.aquad.GLCProductQuadrature3DXYZ.abscissae", false]], "abscissae (pyopensn.aquad.glproductquadrature1dslab property)": [[17, "pyopensn.aquad.GLProductQuadrature1DSlab.abscissae", false]], "abscissae (pyopensn.aquad.productquadrature property)": [[18, "pyopensn.aquad.ProductQuadrature.abscissae", false]], "abscissae (pyopensn.aquad.sldfesquadrature property)": [[19, "pyopensn.aquad.SLDFESQuadrature.abscissae", false]], "addfieldfunction() (pyopensn.fieldfunc.fieldfunctioninterpolationline method)": [[32, "pyopensn.fieldfunc.FieldFunctionInterpolationLine.AddFieldFunction", false]], "addfieldfunction() (pyopensn.fieldfunc.fieldfunctioninterpolationpoint method)": [[33, "pyopensn.fieldfunc.FieldFunctionInterpolationPoint.AddFieldFunction", false]], "addfieldfunction() (pyopensn.fieldfunc.fieldfunctioninterpolationvolume method)": [[34, "pyopensn.fieldfunc.FieldFunctionInterpolationVolume.AddFieldFunction", false]], "advance() (pyopensn.diffusion.cfemdiffusionsolver method)": [[27, "pyopensn.diffusion.CFEMDiffusionSolver.Advance", false]], "advance() (pyopensn.diffusion.dfemdiffusionsolver method)": [[28, "pyopensn.diffusion.DFEMDiffusionSolver.Advance", false]], "advance() (pyopensn.diffusion.diffusionsolverbase method)": [[29, "pyopensn.diffusion.DiffusionSolverBase.Advance", false]], "advance() (pyopensn.solver.nonlinearkeigensolver method)": [[70, "pyopensn.solver.NonLinearKEigenSolver.Advance", false]], "advance() (pyopensn.solver.poweriterationkeigenscdsasolver method)": [[72, "pyopensn.solver.PowerIterationKEigenSCDSASolver.Advance", false]], "advance() (pyopensn.solver.poweriterationkeigensmmsolver method)": [[73, "pyopensn.solver.PowerIterationKEigenSMMSolver.Advance", false]], "advance() (pyopensn.solver.poweriterationkeigensolver method)": [[74, "pyopensn.solver.PowerIterationKEigenSolver.Advance", false]], "advance() (pyopensn.solver.prksolver method)": [[71, "pyopensn.solver.PRKSolver.Advance", false]], "advance() (pyopensn.solver.solver method)": [[75, "pyopensn.solver.Solver.Advance", false]], "advance() (pyopensn.solver.steadystatesolver method)": [[76, "pyopensn.solver.SteadyStateSolver.Advance", false]], "aggregatenodalvaluepostprocessor (class in pyopensn.post)": [[60, "pyopensn.post.AggregateNodalValuePostProcessor", false]], "angularquadrature (class in pyopensn.aquad)": [[12, "pyopensn.aquad.AngularQuadrature", false]], "booleanlogicalvolume (class in pyopensn.logvol)": [[35, "pyopensn.logvol.BooleanLogicalVolume", false]], "cellvolumeintegralpostprocessor (class in pyopensn.post)": [[61, "pyopensn.post.CellVolumeIntegralPostProcessor", false]], "cfemdiffusionsolver (class in pyopensn.diffusion)": [[27, "pyopensn.diffusion.CFEMDiffusionSolver", false]], "chi (pyopensn.xs.multigroupxs property)": [[79, "pyopensn.xs.MultiGroupXS.chi", false]], "clearforwardsources() (pyopensn.response.responseevaluator method)": [[66, "pyopensn.response.ResponseEvaluator.ClearForwardSources", false]], "computebalance() (pyopensn.solver.discreteordinatescurvilinearproblem method)": [[67, "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem.ComputeBalance", false]], "computebalance() (pyopensn.solver.discreteordinatesproblem method)": [[68, "pyopensn.solver.DiscreteOrdinatesProblem.ComputeBalance", false]], "computefissionrate() (pyopensn.solver.discreteordinatescurvilinearproblem method)": [[67, "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem.ComputeFissionRate", false]], "computefissionrate() (pyopensn.solver.discreteordinatesproblem method)": [[68, "pyopensn.solver.DiscreteOrdinatesProblem.ComputeFissionRate", false]], "computefissionrate() (pyopensn.solver.lbsproblem method)": [[69, "pyopensn.solver.LBSProblem.ComputeFissionRate", false]], "computeleakage() (pyopensn.solver.discreteordinatescurvilinearproblem method)": [[67, "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem.ComputeLeakage", false]], "computeleakage() (pyopensn.solver.discreteordinatesproblem method)": [[68, "pyopensn.solver.DiscreteOrdinatesProblem.ComputeLeakage", false]], "computevolumeperblockid() (pyopensn.mesh.meshcontinuum method)": [[54, "pyopensn.mesh.MeshContinuum.ComputeVolumePerBlockID", false]], "createandwritesourcemoments() (pyopensn.solver.discreteordinatescurvilinearproblem method)": [[67, "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem.CreateAndWriteSourceMoments", false]], "createandwritesourcemoments() (pyopensn.solver.discreteordinatesproblem method)": [[68, "pyopensn.solver.DiscreteOrdinatesProblem.CreateAndWriteSourceMoments", false]], "createandwritesourcemoments() (pyopensn.solver.lbsproblem method)": [[69, "pyopensn.solver.LBSProblem.CreateAndWriteSourceMoments", false]], "createsimpleonegroup() (pyopensn.xs.multigroupxs method)": [[79, "pyopensn.xs.MultiGroupXS.CreateSimpleOneGroup", false]], "curvilinearquadrature (class in pyopensn.aquad)": [[13, "pyopensn.aquad.CurvilinearQuadrature", false]], "dfemdiffusionsolver (class in pyopensn.diffusion)": [[28, "pyopensn.diffusion.DFEMDiffusionSolver", false]], "diffusionsolverbase (class in pyopensn.diffusion)": [[29, "pyopensn.diffusion.DiffusionSolverBase", false]], "dimension (pyopensn.mesh.meshcontinuum property)": [[54, "pyopensn.mesh.MeshContinuum.dimension", false]], "discreteordinatescurvilinearproblem (class in pyopensn.solver)": [[67, "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem", false]], "discreteordinatesproblem (class in pyopensn.solver)": [[68, "pyopensn.solver.DiscreteOrdinatesProblem", false]], "distributedmeshgenerator (class in pyopensn.mesh)": [[48, "pyopensn.mesh.DistributedMeshGenerator", false]], "enablecaliper() (in module pyopensn.context)": [[20, "pyopensn.context.EnableCaliper", false]], "enablepetscerrorhandler() (in module pyopensn.context)": [[21, "pyopensn.context.EnablePETScErrorHandler", false]], "evaluateresponse() (pyopensn.response.responseevaluator method)": [[66, "pyopensn.response.ResponseEvaluator.EvaluateResponse", false]], "execute() (pyopensn.diffusion.cfemdiffusionsolver method)": [[27, "pyopensn.diffusion.CFEMDiffusionSolver.Execute", false]], "execute() (pyopensn.diffusion.dfemdiffusionsolver method)": [[28, "pyopensn.diffusion.DFEMDiffusionSolver.Execute", false]], "execute() (pyopensn.diffusion.diffusionsolverbase method)": [[29, "pyopensn.diffusion.DiffusionSolverBase.Execute", false]], "execute() (pyopensn.fieldfunc.fieldfunctioninterpolationline method)": [[32, "pyopensn.fieldfunc.FieldFunctionInterpolationLine.Execute", false]], "execute() (pyopensn.fieldfunc.fieldfunctioninterpolationpoint method)": [[33, "pyopensn.fieldfunc.FieldFunctionInterpolationPoint.Execute", false]], "execute() (pyopensn.fieldfunc.fieldfunctioninterpolationvolume method)": [[34, "pyopensn.fieldfunc.FieldFunctionInterpolationVolume.Execute", false]], "execute() (pyopensn.mesh.distributedmeshgenerator method)": [[48, "pyopensn.mesh.DistributedMeshGenerator.Execute", false]], "execute() (pyopensn.mesh.extrudermeshgenerator method)": [[49, "pyopensn.mesh.ExtruderMeshGenerator.Execute", false]], "execute() (pyopensn.mesh.fromfilemeshgenerator method)": [[50, "pyopensn.mesh.FromFileMeshGenerator.Execute", false]], "execute() (pyopensn.mesh.meshgenerator method)": [[55, "pyopensn.mesh.MeshGenerator.Execute", false]], "execute() (pyopensn.mesh.orthogonalmeshgenerator method)": [[56, "pyopensn.mesh.OrthogonalMeshGenerator.Execute", false]], "execute() (pyopensn.mesh.splitfilemeshgenerator method)": [[58, "pyopensn.mesh.SplitFileMeshGenerator.Execute", false]], "execute() (pyopensn.post.aggregatenodalvaluepostprocessor method)": [[60, "pyopensn.post.AggregateNodalValuePostProcessor.Execute", false]], "execute() (pyopensn.post.cellvolumeintegralpostprocessor method)": [[61, "pyopensn.post.CellVolumeIntegralPostProcessor.Execute", false]], "execute() (pyopensn.post.postprocessor method)": [[62, "pyopensn.post.PostProcessor.Execute", false]], "execute() (pyopensn.post.solverinfopostprocessor method)": [[65, "pyopensn.post.SolverInfoPostProcessor.Execute", false]], "execute() (pyopensn.solver.nonlinearkeigensolver method)": [[70, "pyopensn.solver.NonLinearKEigenSolver.Execute", false]], "execute() (pyopensn.solver.poweriterationkeigenscdsasolver method)": [[72, "pyopensn.solver.PowerIterationKEigenSCDSASolver.Execute", false]], "execute() (pyopensn.solver.poweriterationkeigensmmsolver method)": [[73, "pyopensn.solver.PowerIterationKEigenSMMSolver.Execute", false]], "execute() (pyopensn.solver.poweriterationkeigensolver method)": [[74, "pyopensn.solver.PowerIterationKEigenSolver.Execute", false]], "execute() (pyopensn.solver.prksolver method)": [[71, "pyopensn.solver.PRKSolver.Execute", false]], "execute() (pyopensn.solver.solver method)": [[75, "pyopensn.solver.Solver.Execute", false]], "execute() (pyopensn.solver.steadystatesolver method)": [[76, "pyopensn.solver.SteadyStateSolver.Execute", false]], "exportmultipletovtk() (pyopensn.fieldfunc.fieldfunctiongridbased static method)": [[31, "pyopensn.fieldfunc.FieldFunctionGridBased.ExportMultipleToVTK", false]], "exporttocsv() (pyopensn.fieldfunc.fieldfunctioninterpolationline method)": [[32, "pyopensn.fieldfunc.FieldFunctionInterpolationLine.ExportToCSV", false]], "exporttocsv() (pyopensn.fieldfunc.fieldfunctioninterpolationpoint method)": [[33, "pyopensn.fieldfunc.FieldFunctionInterpolationPoint.ExportToCSV", false]], "exporttocsv() (pyopensn.fieldfunc.fieldfunctioninterpolationvolume method)": [[34, "pyopensn.fieldfunc.FieldFunctionInterpolationVolume.ExportToCSV", false]], "exporttopvtu() (pyopensn.mesh.meshcontinuum method)": [[54, "pyopensn.mesh.MeshContinuum.ExportToPVTU", false]], "extrudermeshgenerator (class in pyopensn.mesh)": [[49, "pyopensn.mesh.ExtruderMeshGenerator", false]], "fieldfunction (class in pyopensn.fieldfunc)": [[30, "pyopensn.fieldfunc.FieldFunction", false]], "fieldfunctiongridbased (class in pyopensn.fieldfunc)": [[31, "pyopensn.fieldfunc.FieldFunctionGridBased", false]], "fieldfunctioninterpolationline (class in pyopensn.fieldfunc)": [[32, "pyopensn.fieldfunc.FieldFunctionInterpolationLine", false]], "fieldfunctioninterpolationpoint (class in pyopensn.fieldfunc)": [[33, "pyopensn.fieldfunc.FieldFunctionInterpolationPoint", false]], "fieldfunctioninterpolationvolume (class in pyopensn.fieldfunc)": [[34, "pyopensn.fieldfunc.FieldFunctionInterpolationVolume", false]], "finalize() (in module pyopensn.context)": [[22, "pyopensn.context.Finalize", false]], "fromfilemeshgenerator (class in pyopensn.mesh)": [[50, "pyopensn.mesh.FromFileMeshGenerator", false]], "function (class in pyopensn.math)": [[41, "pyopensn.math.Function", false]], "geteigenvalue() (pyopensn.solver.nonlinearkeigensolver method)": [[70, "pyopensn.solver.NonLinearKEigenSolver.GetEigenvalue", false]], "geteigenvalue() (pyopensn.solver.poweriterationkeigenscdsasolver method)": [[72, "pyopensn.solver.PowerIterationKEigenSCDSASolver.GetEigenvalue", false]], "geteigenvalue() (pyopensn.solver.poweriterationkeigensmmsolver method)": [[73, "pyopensn.solver.PowerIterationKEigenSMMSolver.GetEigenvalue", false]], "geteigenvalue() (pyopensn.solver.poweriterationkeigensolver method)": [[74, "pyopensn.solver.PowerIterationKEigenSolver.GetEigenvalue", false]], "getfieldfunctionbyname() (pyopensn.fieldfunc.fieldfunctioninterpolationline static method)": [[32, "pyopensn.fieldfunc.FieldFunctionInterpolationLine.GetFieldFunctionByName", false]], "getfieldfunctionbyname() (pyopensn.fieldfunc.fieldfunctioninterpolationpoint static method)": [[33, "pyopensn.fieldfunc.FieldFunctionInterpolationPoint.GetFieldFunctionByName", false]], "getfieldfunctionbyname() (pyopensn.fieldfunc.fieldfunctioninterpolationvolume static method)": [[34, "pyopensn.fieldfunc.FieldFunctionInterpolationVolume.GetFieldFunctionByName", false]], "getfieldfunctions() (pyopensn.diffusion.cfemdiffusionsolver method)": [[27, "pyopensn.diffusion.CFEMDiffusionSolver.GetFieldFunctions", false]], "getfieldfunctions() (pyopensn.diffusion.dfemdiffusionsolver method)": [[28, "pyopensn.diffusion.DFEMDiffusionSolver.GetFieldFunctions", false]], "getfieldfunctions() (pyopensn.diffusion.diffusionsolverbase method)": [[29, "pyopensn.diffusion.DiffusionSolverBase.GetFieldFunctions", false]], "getfieldfunctions() (pyopensn.solver.discreteordinatescurvilinearproblem method)": [[67, "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem.GetFieldFunctions", false]], "getfieldfunctions() (pyopensn.solver.discreteordinatesproblem method)": [[68, "pyopensn.solver.DiscreteOrdinatesProblem.GetFieldFunctions", false]], "getfieldfunctions() (pyopensn.solver.lbsproblem method)": [[69, "pyopensn.solver.LBSProblem.GetFieldFunctions", false]], "getperiod() (pyopensn.solver.prksolver method)": [[71, "pyopensn.solver.PRKSolver.GetPeriod", false]], "getpointvalue() (pyopensn.fieldfunc.fieldfunctioninterpolationpoint method)": [[33, "pyopensn.fieldfunc.FieldFunctionInterpolationPoint.GetPointValue", false]], "getpopulationnew() (pyopensn.solver.prksolver method)": [[71, "pyopensn.solver.PRKSolver.GetPopulationNew", false]], "getpopulationprev() (pyopensn.solver.prksolver method)": [[71, "pyopensn.solver.PRKSolver.GetPopulationPrev", false]], "getpowerfieldfunction() (pyopensn.solver.discreteordinatescurvilinearproblem method)": [[67, "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem.GetPowerFieldFunction", false]], "getpowerfieldfunction() (pyopensn.solver.discreteordinatesproblem method)": [[68, "pyopensn.solver.DiscreteOrdinatesProblem.GetPowerFieldFunction", false]], "getpowerfieldfunction() (pyopensn.solver.lbsproblem method)": [[69, "pyopensn.solver.LBSProblem.GetPowerFieldFunction", false]], "getscalarfieldfunctionlist() (pyopensn.solver.discreteordinatescurvilinearproblem method)": [[67, "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem.GetScalarFieldFunctionList", false]], "getscalarfieldfunctionlist() (pyopensn.solver.discreteordinatesproblem method)": [[68, "pyopensn.solver.DiscreteOrdinatesProblem.GetScalarFieldFunctionList", false]], "getscalarfieldfunctionlist() (pyopensn.solver.lbsproblem method)": [[69, "pyopensn.solver.LBSProblem.GetScalarFieldFunctionList", false]], "getsolutionnew() (pyopensn.solver.prksolver method)": [[71, "pyopensn.solver.PRKSolver.GetSolutionNew", false]], "getsolutionprev() (pyopensn.solver.prksolver method)": [[71, "pyopensn.solver.PRKSolver.GetSolutionPrev", false]], "gettimenew() (pyopensn.solver.prksolver method)": [[71, "pyopensn.solver.PRKSolver.GetTimeNew", false]], "gettimeprev() (pyopensn.solver.prksolver method)": [[71, "pyopensn.solver.PRKSolver.GetTimePrev", false]], "getvalue() (pyopensn.fieldfunc.fieldfunctioninterpolationvolume method)": [[34, "pyopensn.fieldfunc.FieldFunctionInterpolationVolume.GetValue", false]], "getvalue() (pyopensn.post.aggregatenodalvaluepostprocessor method)": [[60, "pyopensn.post.AggregateNodalValuePostProcessor.GetValue", false]], "getvalue() (pyopensn.post.cellvolumeintegralpostprocessor method)": [[61, "pyopensn.post.CellVolumeIntegralPostProcessor.GetValue", false]], "getvalue() (pyopensn.post.postprocessor method)": [[62, "pyopensn.post.PostProcessor.GetValue", false]], "getvalue() (pyopensn.post.solverinfopostprocessor method)": [[65, "pyopensn.post.SolverInfoPostProcessor.GetValue", false]], "glcproductquadrature2drz (class in pyopensn.aquad)": [[14, "pyopensn.aquad.GLCProductQuadrature2DRZ", false]], "glcproductquadrature2dxy (class in pyopensn.aquad)": [[15, "pyopensn.aquad.GLCProductQuadrature2DXY", false]], "glcproductquadrature3dxyz (class in pyopensn.aquad)": [[16, "pyopensn.aquad.GLCProductQuadrature3DXYZ", false]], "glproductquadrature1dslab (class in pyopensn.aquad)": [[17, "pyopensn.aquad.GLProductQuadrature1DSlab", false]], "graphpartitioner (class in pyopensn.mesh)": [[51, "pyopensn.mesh.GraphPartitioner", false]], "importfrommshfiles() (pyopensn.mesh.surfacemesh method)": [[59, "pyopensn.mesh.SurfaceMesh.ImportFromMshFiles", false]], "importfromobjfile() (pyopensn.mesh.surfacemesh method)": [[59, "pyopensn.mesh.SurfaceMesh.ImportFromOBJFile", false]], "importfromtrianglefiles() (pyopensn.mesh.surfacemesh method)": [[59, "pyopensn.mesh.SurfaceMesh.ImportFromTriangleFiles", false]], "initialize() (pyopensn.diffusion.cfemdiffusionsolver method)": [[27, "pyopensn.diffusion.CFEMDiffusionSolver.Initialize", false]], "initialize() (pyopensn.diffusion.dfemdiffusionsolver method)": [[28, "pyopensn.diffusion.DFEMDiffusionSolver.Initialize", false]], "initialize() (pyopensn.diffusion.diffusionsolverbase method)": [[29, "pyopensn.diffusion.DiffusionSolverBase.Initialize", false]], "initialize() (pyopensn.fieldfunc.fieldfunctioninterpolationline method)": [[32, "pyopensn.fieldfunc.FieldFunctionInterpolationLine.Initialize", false]], "initialize() (pyopensn.fieldfunc.fieldfunctioninterpolationpoint method)": [[33, "pyopensn.fieldfunc.FieldFunctionInterpolationPoint.Initialize", false]], "initialize() (pyopensn.fieldfunc.fieldfunctioninterpolationvolume method)": [[34, "pyopensn.fieldfunc.FieldFunctionInterpolationVolume.Initialize", false]], "initialize() (pyopensn.solver.nonlinearkeigensolver method)": [[70, "pyopensn.solver.NonLinearKEigenSolver.Initialize", false]], "initialize() (pyopensn.solver.poweriterationkeigenscdsasolver method)": [[72, "pyopensn.solver.PowerIterationKEigenSCDSASolver.Initialize", false]], "initialize() (pyopensn.solver.poweriterationkeigensmmsolver method)": [[73, "pyopensn.solver.PowerIterationKEigenSMMSolver.Initialize", false]], "initialize() (pyopensn.solver.poweriterationkeigensolver method)": [[74, "pyopensn.solver.PowerIterationKEigenSolver.Initialize", false]], "initialize() (pyopensn.solver.prksolver method)": [[71, "pyopensn.solver.PRKSolver.Initialize", false]], "initialize() (pyopensn.solver.solver method)": [[75, "pyopensn.solver.Solver.Initialize", false]], "initialize() (pyopensn.solver.steadystatesolver method)": [[76, "pyopensn.solver.SteadyStateSolver.Initialize", false]], "initializewithargv() (in module pyopensn.context)": [[23, "pyopensn.context.InitializeWithArgv", false]], "inside() (pyopensn.logvol.booleanlogicalvolume method)": [[35, "pyopensn.logvol.BooleanLogicalVolume.Inside", false]], "inside() (pyopensn.logvol.logicalvolume method)": [[36, "pyopensn.logvol.LogicalVolume.Inside", false]], "inside() (pyopensn.logvol.rcclogicalvolume method)": [[37, "pyopensn.logvol.RCCLogicalVolume.Inside", false]], "inside() (pyopensn.logvol.rpplogicalvolume method)": [[38, "pyopensn.logvol.RPPLogicalVolume.Inside", false]], "inside() (pyopensn.logvol.spherelogicalvolume method)": [[39, "pyopensn.logvol.SphereLogicalVolume.Inside", false]], "inside() (pyopensn.logvol.surfacemeshlogicalvolume method)": [[40, "pyopensn.logvol.SurfaceMeshLogicalVolume.Inside", false]], "inv_velocity (pyopensn.xs.multigroupxs property)": [[79, "pyopensn.xs.MultiGroupXS.inv_velocity", false]], "is_fissionable (pyopensn.xs.multigroupxs property)": [[79, "pyopensn.xs.MultiGroupXS.is_fissionable", false]], "kbagraphpartitioner (class in pyopensn.mesh)": [[52, "pyopensn.mesh.KBAGraphPartitioner", false]], "lbsproblem (class in pyopensn.solver)": [[69, "pyopensn.solver.LBSProblem", false]], "lineargraphpartitioner (class in pyopensn.mesh)": [[53, "pyopensn.mesh.LinearGraphPartitioner", false]], "loadfromopenmc() (pyopensn.xs.multigroupxs method)": [[79, "pyopensn.xs.MultiGroupXS.LoadFromOpenMC", false]], "loadfromopensn() (pyopensn.xs.multigroupxs method)": [[79, "pyopensn.xs.MultiGroupXS.LoadFromOpenSn", false]], "locallyrefine() (pyopensn.aquad.sldfesquadrature method)": [[19, "pyopensn.aquad.SLDFESQuadrature.LocallyRefine", false]], "logicalvolume (class in pyopensn.logvol)": [[36, "pyopensn.logvol.LogicalVolume", false]], "meshcontinuum (class in pyopensn.mesh)": [[54, "pyopensn.mesh.MeshContinuum", false]], "meshgenerator (class in pyopensn.mesh)": [[55, "pyopensn.mesh.MeshGenerator", false]], "multigroupxs (class in pyopensn.xs)": [[79, "pyopensn.xs.MultiGroupXS", false]], "nonlinearkeigensolver (class in pyopensn.solver)": [[70, "pyopensn.solver.NonLinearKEigenSolver", false]], "norm() (pyopensn.math.vector3 method)": [[45, "pyopensn.math.Vector3.Norm", false]], "nu_delayed_sigma_f (pyopensn.xs.multigroupxs property)": [[79, "pyopensn.xs.MultiGroupXS.nu_delayed_sigma_f", false]], "nu_prompt_sigma_f (pyopensn.xs.multigroupxs property)": [[79, "pyopensn.xs.MultiGroupXS.nu_prompt_sigma_f", false]], "nu_sigma_f (pyopensn.xs.multigroupxs property)": [[79, "pyopensn.xs.MultiGroupXS.nu_sigma_f", false]], "num_groups (pyopensn.xs.multigroupxs property)": [[79, "pyopensn.xs.MultiGroupXS.num_groups", false]], "num_precursors (pyopensn.xs.multigroupxs property)": [[79, "pyopensn.xs.MultiGroupXS.num_precursors", false]], "omegas (pyopensn.aquad.angularquadrature property)": [[12, "pyopensn.aquad.AngularQuadrature.omegas", false]], "omegas (pyopensn.aquad.curvilinearquadrature property)": [[13, "pyopensn.aquad.CurvilinearQuadrature.omegas", false]], "omegas (pyopensn.aquad.glcproductquadrature2drz property)": [[14, "pyopensn.aquad.GLCProductQuadrature2DRZ.omegas", false]], "omegas (pyopensn.aquad.glcproductquadrature2dxy property)": [[15, "pyopensn.aquad.GLCProductQuadrature2DXY.omegas", false]], "omegas (pyopensn.aquad.glcproductquadrature3dxyz property)": [[16, "pyopensn.aquad.GLCProductQuadrature3DXYZ.omegas", false]], "omegas (pyopensn.aquad.glproductquadrature1dslab property)": [[17, "pyopensn.aquad.GLProductQuadrature1DSlab.omegas", false]], "omegas (pyopensn.aquad.productquadrature property)": [[18, "pyopensn.aquad.ProductQuadrature.omegas", false]], "omegas (pyopensn.aquad.sldfesquadrature property)": [[19, "pyopensn.aquad.SLDFESQuadrature.omegas", false]], "orthogonalmeshgenerator (class in pyopensn.mesh)": [[56, "pyopensn.mesh.OrthogonalMeshGenerator", false]], "petscgraphpartitioner (class in pyopensn.mesh)": [[57, "pyopensn.mesh.PETScGraphPartitioner", false]], "pointsource (class in pyopensn.source)": [[77, "pyopensn.source.PointSource", false]], "postprocessor (class in pyopensn.post)": [[62, "pyopensn.post.PostProcessor", false]], "poweriterationkeigenscdsasolver (class in pyopensn.solver)": [[72, "pyopensn.solver.PowerIterationKEigenSCDSASolver", false]], "poweriterationkeigensmmsolver (class in pyopensn.solver)": [[73, "pyopensn.solver.PowerIterationKEigenSMMSolver", false]], "poweriterationkeigensolver (class in pyopensn.solver)": [[74, "pyopensn.solver.PowerIterationKEigenSolver", false]], "print() (in module pyopensn.post)": [[63, "pyopensn.post.Print", false]], "printquadraturetofile() (pyopensn.aquad.sldfesquadrature method)": [[19, "pyopensn.aquad.SLDFESQuadrature.PrintQuadratureToFile", false]], "prksolver (class in pyopensn.solver)": [[71, "pyopensn.solver.PRKSolver", false]], "productquadrature (class in pyopensn.aquad)": [[18, "pyopensn.aquad.ProductQuadrature", false]], "rcclogicalvolume (class in pyopensn.logvol)": [[37, "pyopensn.logvol.RCCLogicalVolume", false]], "readangularfluxes() (pyopensn.solver.discreteordinatescurvilinearproblem method)": [[67, "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem.ReadAngularFluxes", false]], "readangularfluxes() (pyopensn.solver.discreteordinatesproblem method)": [[68, "pyopensn.solver.DiscreteOrdinatesProblem.ReadAngularFluxes", false]], "readangularfluxes() (pyopensn.solver.lbsproblem method)": [[69, "pyopensn.solver.LBSProblem.ReadAngularFluxes", false]], "readfluxmoments() (pyopensn.solver.discreteordinatescurvilinearproblem method)": [[67, "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem.ReadFluxMoments", false]], "readfluxmoments() (pyopensn.solver.discreteordinatesproblem method)": [[68, "pyopensn.solver.DiscreteOrdinatesProblem.ReadFluxMoments", false]], "readfluxmoments() (pyopensn.solver.lbsproblem method)": [[69, "pyopensn.solver.LBSProblem.ReadFluxMoments", false]], "readfluxmomentsandmakesourcemoments() (pyopensn.solver.discreteordinatescurvilinearproblem method)": [[67, "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem.ReadFluxMomentsAndMakeSourceMoments", false]], "readfluxmomentsandmakesourcemoments() (pyopensn.solver.discreteordinatesproblem method)": [[68, "pyopensn.solver.DiscreteOrdinatesProblem.ReadFluxMomentsAndMakeSourceMoments", false]], "readfluxmomentsandmakesourcemoments() (pyopensn.solver.lbsproblem method)": [[69, "pyopensn.solver.LBSProblem.ReadFluxMomentsAndMakeSourceMoments", false]], "readsourcemoments() (pyopensn.solver.discreteordinatescurvilinearproblem method)": [[67, "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem.ReadSourceMoments", false]], "readsourcemoments() (pyopensn.solver.discreteordinatesproblem method)": [[68, "pyopensn.solver.DiscreteOrdinatesProblem.ReadSourceMoments", false]], "readsourcemoments() (pyopensn.solver.lbsproblem method)": [[69, "pyopensn.solver.LBSProblem.ReadSourceMoments", false]], "responseevaluator (class in pyopensn.response)": [[66, "pyopensn.response.ResponseEvaluator", false]], "rpplogicalvolume (class in pyopensn.logvol)": [[38, "pyopensn.logvol.RPPLogicalVolume", false]], "scalarmaterialfunction (class in pyopensn.math)": [[42, "pyopensn.math.ScalarMaterialFunction", false]], "scalarspatialfunction (class in pyopensn.math)": [[43, "pyopensn.math.ScalarSpatialFunction", false]], "scalarspatialmaterialfunction (class in pyopensn.math)": [[44, "pyopensn.math.ScalarSpatialMaterialFunction", false]], "scaling_factor (pyopensn.xs.multigroupxs property)": [[79, "pyopensn.xs.MultiGroupXS.scaling_factor", false]], "scattering_order (pyopensn.xs.multigroupxs property)": [[79, "pyopensn.xs.MultiGroupXS.scattering_order", false]], "setblockidfromfunction() (pyopensn.mesh.meshcontinuum method)": [[54, "pyopensn.mesh.MeshContinuum.SetBlockIDFromFunction", false]], "setblockidfromlogicalvolume() (pyopensn.mesh.meshcontinuum method)": [[54, "pyopensn.mesh.MeshContinuum.SetBlockIDFromLogicalVolume", false]], "setboundaryidfromlogicalvolume() (pyopensn.mesh.meshcontinuum method)": [[54, "pyopensn.mesh.MeshContinuum.SetBoundaryIDFromLogicalVolume", false]], "setbufferoptions() (pyopensn.response.responseevaluator method)": [[66, "pyopensn.response.ResponseEvaluator.SetBufferOptions", false]], "setcaliperconfig() (in module pyopensn.context)": [[24, "pyopensn.context.SetCaliperConfig", false]], "setdcoeffunction() (pyopensn.diffusion.cfemdiffusionsolver method)": [[27, "pyopensn.diffusion.CFEMDiffusionSolver.SetDCoefFunction", false]], "setdcoeffunction() (pyopensn.diffusion.dfemdiffusionsolver method)": [[28, "pyopensn.diffusion.DFEMDiffusionSolver.SetDCoefFunction", false]], "setdcoeffunction() (pyopensn.diffusion.diffusionsolverbase method)": [[29, "pyopensn.diffusion.DiffusionSolverBase.SetDCoefFunction", false]], "setfinalpoint() (pyopensn.fieldfunc.fieldfunctioninterpolationline method)": [[32, "pyopensn.fieldfunc.FieldFunctionInterpolationLine.SetFinalPoint", false]], "setinitialpoint() (pyopensn.fieldfunc.fieldfunctioninterpolationline method)": [[32, "pyopensn.fieldfunc.FieldFunctionInterpolationLine.SetInitialPoint", false]], "setlogicalvolume() (pyopensn.fieldfunc.fieldfunctioninterpolationvolume method)": [[34, "pyopensn.fieldfunc.FieldFunctionInterpolationVolume.SetLogicalVolume", false]], "setnumberofpoints() (pyopensn.fieldfunc.fieldfunctioninterpolationline method)": [[32, "pyopensn.fieldfunc.FieldFunctionInterpolationLine.SetNumberOfPoints", false]], "setoperationfunction() (pyopensn.fieldfunc.fieldfunctioninterpolationvolume method)": [[34, "pyopensn.fieldfunc.FieldFunctionInterpolationVolume.SetOperationFunction", false]], "setoperationtype() (pyopensn.fieldfunc.fieldfunctioninterpolationvolume method)": [[34, "pyopensn.fieldfunc.FieldFunctionInterpolationVolume.SetOperationType", false]], "setoptions() (pyopensn.diffusion.cfemdiffusionsolver method)": [[27, "pyopensn.diffusion.CFEMDiffusionSolver.SetOptions", false]], "setoptions() (pyopensn.diffusion.dfemdiffusionsolver method)": [[28, "pyopensn.diffusion.DFEMDiffusionSolver.SetOptions", false]], "setoptions() (pyopensn.diffusion.diffusionsolverbase method)": [[29, "pyopensn.diffusion.DiffusionSolverBase.SetOptions", false]], "setoptions() (pyopensn.response.responseevaluator method)": [[66, "pyopensn.response.ResponseEvaluator.SetOptions", false]], "setoptions() (pyopensn.solver.discreteordinatescurvilinearproblem method)": [[67, "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem.SetOptions", false]], "setoptions() (pyopensn.solver.discreteordinatesproblem method)": [[68, "pyopensn.solver.DiscreteOrdinatesProblem.SetOptions", false]], "setoptions() (pyopensn.solver.lbsproblem method)": [[69, "pyopensn.solver.LBSProblem.SetOptions", false]], "setorthogonalboundaries() (pyopensn.mesh.meshcontinuum method)": [[54, "pyopensn.mesh.MeshContinuum.SetOrthogonalBoundaries", false]], "setprinteroptions() (in module pyopensn.post)": [[64, "pyopensn.post.SetPrinterOptions", false]], "setqextfunction() (pyopensn.diffusion.cfemdiffusionsolver method)": [[27, "pyopensn.diffusion.CFEMDiffusionSolver.SetQExtFunction", false]], "setqextfunction() (pyopensn.diffusion.dfemdiffusionsolver method)": [[28, "pyopensn.diffusion.DFEMDiffusionSolver.SetQExtFunction", false]], "setqextfunction() (pyopensn.diffusion.diffusionsolverbase method)": [[29, "pyopensn.diffusion.DiffusionSolverBase.SetQExtFunction", false]], "setrho() (pyopensn.solver.prksolver method)": [[71, "pyopensn.solver.PRKSolver.SetRho", false]], "setscalingfactor() (pyopensn.xs.multigroupxs method)": [[79, "pyopensn.xs.MultiGroupXS.SetScalingFactor", false]], "setsigmaafunction() (pyopensn.diffusion.cfemdiffusionsolver method)": [[27, "pyopensn.diffusion.CFEMDiffusionSolver.SetSigmaAFunction", false]], "setsigmaafunction() (pyopensn.diffusion.dfemdiffusionsolver method)": [[28, "pyopensn.diffusion.DFEMDiffusionSolver.SetSigmaAFunction", false]], "setsigmaafunction() (pyopensn.diffusion.diffusionsolverbase method)": [[29, "pyopensn.diffusion.DiffusionSolverBase.SetSigmaAFunction", false]], "setsourceoptions() (pyopensn.response.responseevaluator method)": [[66, "pyopensn.response.ResponseEvaluator.SetSourceOptions", false]], "setuniformblockid() (pyopensn.mesh.meshcontinuum method)": [[54, "pyopensn.mesh.MeshContinuum.SetUniformBlockID", false]], "setverbositylevel() (in module pyopensn.context)": [[25, "pyopensn.context.SetVerbosityLevel", false]], "sigma_a (pyopensn.xs.multigroupxs property)": [[79, "pyopensn.xs.MultiGroupXS.sigma_a", false]], "sigma_f (pyopensn.xs.multigroupxs property)": [[79, "pyopensn.xs.MultiGroupXS.sigma_f", false]], "sigma_t (pyopensn.xs.multigroupxs property)": [[79, "pyopensn.xs.MultiGroupXS.sigma_t", false]], "sldfesquadrature (class in pyopensn.aquad)": [[19, "pyopensn.aquad.SLDFESQuadrature", false]], "solver (class in pyopensn.solver)": [[75, "pyopensn.solver.Solver", false]], "solverinfopostprocessor (class in pyopensn.post)": [[65, "pyopensn.post.SolverInfoPostProcessor", false]], "spherelogicalvolume (class in pyopensn.logvol)": [[39, "pyopensn.logvol.SphereLogicalVolume", false]], "splitfilemeshgenerator (class in pyopensn.mesh)": [[58, "pyopensn.mesh.SplitFileMeshGenerator", false]], "steadystatesolver (class in pyopensn.solver)": [[76, "pyopensn.solver.SteadyStateSolver", false]], "step() (pyopensn.diffusion.cfemdiffusionsolver method)": [[27, "pyopensn.diffusion.CFEMDiffusionSolver.Step", false]], "step() (pyopensn.diffusion.dfemdiffusionsolver method)": [[28, "pyopensn.diffusion.DFEMDiffusionSolver.Step", false]], "step() (pyopensn.diffusion.diffusionsolverbase method)": [[29, "pyopensn.diffusion.DiffusionSolverBase.Step", false]], "step() (pyopensn.solver.nonlinearkeigensolver method)": [[70, "pyopensn.solver.NonLinearKEigenSolver.Step", false]], "step() (pyopensn.solver.poweriterationkeigenscdsasolver method)": [[72, "pyopensn.solver.PowerIterationKEigenSCDSASolver.Step", false]], "step() (pyopensn.solver.poweriterationkeigensmmsolver method)": [[73, "pyopensn.solver.PowerIterationKEigenSMMSolver.Step", false]], "step() (pyopensn.solver.poweriterationkeigensolver method)": [[74, "pyopensn.solver.PowerIterationKEigenSolver.Step", false]], "step() (pyopensn.solver.prksolver method)": [[71, "pyopensn.solver.PRKSolver.Step", false]], "step() (pyopensn.solver.solver method)": [[75, "pyopensn.solver.Solver.Step", false]], "step() (pyopensn.solver.steadystatesolver method)": [[76, "pyopensn.solver.SteadyStateSolver.Step", false]], "surfacemesh (class in pyopensn.mesh)": [[59, "pyopensn.mesh.SurfaceMesh", false]], "surfacemeshlogicalvolume (class in pyopensn.logvol)": [[40, "pyopensn.logvol.SurfaceMeshLogicalVolume", false]], "updatefieldfunctions() (pyopensn.diffusion.cfemdiffusionsolver method)": [[27, "pyopensn.diffusion.CFEMDiffusionSolver.UpdateFieldFunctions", false]], "updatefieldfunctions() (pyopensn.diffusion.dfemdiffusionsolver method)": [[28, "pyopensn.diffusion.DFEMDiffusionSolver.UpdateFieldFunctions", false]], "updatefieldfunctions() (pyopensn.diffusion.diffusionsolverbase method)": [[29, "pyopensn.diffusion.DiffusionSolverBase.UpdateFieldFunctions", false]], "usecolor() (in module pyopensn.context)": [[26, "pyopensn.context.UseColor", false]], "vector3 (class in pyopensn.math)": [[45, "pyopensn.math.Vector3", false]], "vectorspatialfunction (class in pyopensn.math)": [[46, "pyopensn.math.VectorSpatialFunction", false]], "volumetricsource (class in pyopensn.source)": [[78, "pyopensn.source.VolumetricSource", false]], "weights (pyopensn.aquad.angularquadrature property)": [[12, "pyopensn.aquad.AngularQuadrature.weights", false]], "weights (pyopensn.aquad.curvilinearquadrature property)": [[13, "pyopensn.aquad.CurvilinearQuadrature.weights", false]], "weights (pyopensn.aquad.glcproductquadrature2drz property)": [[14, "pyopensn.aquad.GLCProductQuadrature2DRZ.weights", false]], "weights (pyopensn.aquad.glcproductquadrature2dxy property)": [[15, "pyopensn.aquad.GLCProductQuadrature2DXY.weights", false]], "weights (pyopensn.aquad.glcproductquadrature3dxyz property)": [[16, "pyopensn.aquad.GLCProductQuadrature3DXYZ.weights", false]], "weights (pyopensn.aquad.glproductquadrature1dslab property)": [[17, "pyopensn.aquad.GLProductQuadrature1DSlab.weights", false]], "weights (pyopensn.aquad.productquadrature property)": [[18, "pyopensn.aquad.ProductQuadrature.weights", false]], "weights (pyopensn.aquad.sldfesquadrature property)": [[19, "pyopensn.aquad.SLDFESQuadrature.weights", false]], "writeangularfluxes() (pyopensn.solver.discreteordinatescurvilinearproblem method)": [[67, "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem.WriteAngularFluxes", false]], "writeangularfluxes() (pyopensn.solver.discreteordinatesproblem method)": [[68, "pyopensn.solver.DiscreteOrdinatesProblem.WriteAngularFluxes", false]], "writeangularfluxes() (pyopensn.solver.lbsproblem method)": [[69, "pyopensn.solver.LBSProblem.WriteAngularFluxes", false]], "writefluxmoments() (pyopensn.solver.discreteordinatescurvilinearproblem method)": [[67, "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem.WriteFluxMoments", false]], "writefluxmoments() (pyopensn.solver.discreteordinatesproblem method)": [[68, "pyopensn.solver.DiscreteOrdinatesProblem.WriteFluxMoments", false]], "writefluxmoments() (pyopensn.solver.lbsproblem method)": [[69, "pyopensn.solver.LBSProblem.WriteFluxMoments", false]], "x (pyopensn.math.vector3 property)": [[45, "pyopensn.math.Vector3.x", false]], "y (pyopensn.math.vector3 property)": [[45, "pyopensn.math.Vector3.y", false]], "ylm() (in module pyopensn.math)": [[47, "pyopensn.math.Ylm", false]], "z (pyopensn.math.vector3 property)": [[45, "pyopensn.math.Vector3.z", false]]}, "objects": {"pyopensn.aquad": [[12, 0, 1, "", "AngularQuadrature"], [13, 0, 1, "", "CurvilinearQuadrature"], [14, 0, 1, "", "GLCProductQuadrature2DRZ"], [15, 0, 1, "", "GLCProductQuadrature2DXY"], [16, 0, 1, "", "GLCProductQuadrature3DXYZ"], [17, 0, 1, "", "GLProductQuadrature1DSlab"], [18, 0, 1, "", "ProductQuadrature"], [19, 0, 1, "", "SLDFESQuadrature"]], "pyopensn.aquad.AngularQuadrature": [[12, 1, 1, "", "abscissae"], [12, 1, 1, "", "omegas"], [12, 1, 1, "", "weights"]], "pyopensn.aquad.CurvilinearQuadrature": [[13, 1, 1, "", "abscissae"], [13, 1, 1, "", "omegas"], [13, 1, 1, "", "weights"]], "pyopensn.aquad.GLCProductQuadrature2DRZ": [[14, 2, 1, "", "__init__"], [14, 1, 1, "", "abscissae"], [14, 1, 1, "", "omegas"], [14, 1, 1, "", "weights"]], "pyopensn.aquad.GLCProductQuadrature2DXY": [[15, 2, 1, "", "__init__"], [15, 1, 1, "", "abscissae"], [15, 1, 1, "", "omegas"], [15, 1, 1, "", "weights"]], "pyopensn.aquad.GLCProductQuadrature3DXYZ": [[16, 2, 1, "", "__init__"], [16, 1, 1, "", "abscissae"], [16, 1, 1, "", "omegas"], [16, 1, 1, "", "weights"]], "pyopensn.aquad.GLProductQuadrature1DSlab": [[17, 2, 1, "", "__init__"], [17, 1, 1, "", "abscissae"], [17, 1, 1, "", "omegas"], [17, 1, 1, "", "weights"]], "pyopensn.aquad.ProductQuadrature": [[18, 1, 1, "", "abscissae"], [18, 1, 1, "", "omegas"], [18, 1, 1, "", "weights"]], "pyopensn.aquad.SLDFESQuadrature": [[19, 2, 1, "", "LocallyRefine"], [19, 2, 1, "", "PrintQuadratureToFile"], [19, 2, 1, "", "__init__"], [19, 1, 1, "", "abscissae"], [19, 1, 1, "", "omegas"], [19, 1, 1, "", "weights"]], "pyopensn.context": [[20, 3, 1, "", "EnableCaliper"], [21, 3, 1, "", "EnablePETScErrorHandler"], [22, 3, 1, "", "Finalize"], [23, 3, 1, "", "InitializeWithArgv"], [24, 3, 1, "", "SetCaliperConfig"], [25, 3, 1, "", "SetVerbosityLevel"], [26, 3, 1, "", "UseColor"]], "pyopensn.diffusion": [[27, 0, 1, "", "CFEMDiffusionSolver"], [28, 0, 1, "", "DFEMDiffusionSolver"], [29, 0, 1, "", "DiffusionSolverBase"]], "pyopensn.diffusion.CFEMDiffusionSolver": [[27, 2, 1, "", "Advance"], [27, 2, 1, "", "Execute"], [27, 2, 1, "", "GetFieldFunctions"], [27, 2, 1, "", "Initialize"], [27, 2, 1, "", "SetDCoefFunction"], [27, 2, 1, "", "SetOptions"], [27, 2, 1, "", "SetQExtFunction"], [27, 2, 1, "", "SetSigmaAFunction"], [27, 2, 1, "", "Step"], [27, 2, 1, "", "UpdateFieldFunctions"], [27, 2, 1, "", "__init__"]], "pyopensn.diffusion.DFEMDiffusionSolver": [[28, 2, 1, "", "Advance"], [28, 2, 1, "", "Execute"], [28, 2, 1, "", "GetFieldFunctions"], [28, 2, 1, "", "Initialize"], [28, 2, 1, "", "SetDCoefFunction"], [28, 2, 1, "", "SetOptions"], [28, 2, 1, "", "SetQExtFunction"], [28, 2, 1, "", "SetSigmaAFunction"], [28, 2, 1, "", "Step"], [28, 2, 1, "", "UpdateFieldFunctions"], [28, 2, 1, "", "__init__"]], "pyopensn.diffusion.DiffusionSolverBase": [[29, 2, 1, "", "Advance"], [29, 2, 1, "", "Execute"], [29, 2, 1, "", "GetFieldFunctions"], [29, 2, 1, "", "Initialize"], [29, 2, 1, "", "SetDCoefFunction"], [29, 2, 1, "", "SetOptions"], [29, 2, 1, "", "SetQExtFunction"], [29, 2, 1, "", "SetSigmaAFunction"], [29, 2, 1, "", "Step"], [29, 2, 1, "", "UpdateFieldFunctions"]], "pyopensn.fieldfunc": [[30, 0, 1, "", "FieldFunction"], [31, 0, 1, "", "FieldFunctionGridBased"], [32, 0, 1, "", "FieldFunctionInterpolationLine"], [33, 0, 1, "", "FieldFunctionInterpolationPoint"], [34, 0, 1, "", "FieldFunctionInterpolationVolume"]], "pyopensn.fieldfunc.FieldFunctionGridBased": [[31, 2, 1, "", "ExportMultipleToVTK"]], "pyopensn.fieldfunc.FieldFunctionInterpolationLine": [[32, 2, 1, "", "AddFieldFunction"], [32, 2, 1, "", "Execute"], [32, 2, 1, "", "ExportToCSV"], [32, 2, 1, "", "GetFieldFunctionByName"], [32, 2, 1, "", "Initialize"], [32, 2, 1, "", "SetFinalPoint"], [32, 2, 1, "", "SetInitialPoint"], [32, 2, 1, "", "SetNumberOfPoints"], [32, 2, 1, "", "__init__"]], "pyopensn.fieldfunc.FieldFunctionInterpolationPoint": [[33, 2, 1, "", "AddFieldFunction"], [33, 2, 1, "", "Execute"], [33, 2, 1, "", "ExportToCSV"], [33, 2, 1, "", "GetFieldFunctionByName"], [33, 2, 1, "", "GetPointValue"], [33, 2, 1, "", "Initialize"], [33, 2, 1, "", "__init__"]], "pyopensn.fieldfunc.FieldFunctionInterpolationVolume": [[34, 2, 1, "", "AddFieldFunction"], [34, 2, 1, "", "Execute"], [34, 2, 1, "", "ExportToCSV"], [34, 2, 1, "", "GetFieldFunctionByName"], [34, 2, 1, "", "GetValue"], [34, 2, 1, "", "Initialize"], [34, 2, 1, "", "SetLogicalVolume"], [34, 2, 1, "", "SetOperationFunction"], [34, 2, 1, "", "SetOperationType"], [34, 2, 1, "", "__init__"]], "pyopensn.logvol": [[35, 0, 1, "", "BooleanLogicalVolume"], [36, 0, 1, "", "LogicalVolume"], [37, 0, 1, "", "RCCLogicalVolume"], [38, 0, 1, "", "RPPLogicalVolume"], [39, 0, 1, "", "SphereLogicalVolume"], [40, 0, 1, "", "SurfaceMeshLogicalVolume"]], "pyopensn.logvol.BooleanLogicalVolume": [[35, 2, 1, "", "Inside"], [35, 2, 1, "", "__init__"]], "pyopensn.logvol.LogicalVolume": [[36, 2, 1, "", "Inside"]], "pyopensn.logvol.RCCLogicalVolume": [[37, 2, 1, "", "Inside"], [37, 2, 1, "", "__init__"]], "pyopensn.logvol.RPPLogicalVolume": [[38, 2, 1, "", "Inside"], [38, 2, 1, "", "__init__"]], "pyopensn.logvol.SphereLogicalVolume": [[39, 2, 1, "", "Inside"], [39, 2, 1, "", "__init__"]], "pyopensn.logvol.SurfaceMeshLogicalVolume": [[40, 2, 1, "", "Inside"], [40, 2, 1, "", "__init__"]], "pyopensn.math": [[41, 0, 1, "", "Function"], [42, 0, 1, "", "ScalarMaterialFunction"], [43, 0, 1, "", "ScalarSpatialFunction"], [44, 0, 1, "", "ScalarSpatialMaterialFunction"], [45, 0, 1, "", "Vector3"], [46, 0, 1, "", "VectorSpatialFunction"], [47, 3, 1, "", "Ylm"]], "pyopensn.math.Function": [[41, 2, 1, "", "__init__"]], "pyopensn.math.ScalarMaterialFunction": [[42, 2, 1, "", "__call__"], [42, 2, 1, "", "__init__"]], "pyopensn.math.ScalarSpatialFunction": [[43, 2, 1, "", "__call__"], [43, 2, 1, "", "__init__"]], "pyopensn.math.ScalarSpatialMaterialFunction": [[44, 2, 1, "", "__call__"], [44, 2, 1, "", "__init__"]], "pyopensn.math.Vector3": [[45, 2, 1, "", "Norm"], [45, 2, 1, "", "__init__"], [45, 1, 1, "", "x"], [45, 1, 1, "", "y"], [45, 1, 1, "", "z"]], "pyopensn.math.VectorSpatialFunction": [[46, 2, 1, "", "__call__"], [46, 2, 1, "", "__init__"]], "pyopensn.mesh": [[48, 0, 1, "", "DistributedMeshGenerator"], [49, 0, 1, "", "ExtruderMeshGenerator"], [50, 0, 1, "", "FromFileMeshGenerator"], [51, 0, 1, "", "GraphPartitioner"], [52, 0, 1, "", "KBAGraphPartitioner"], [53, 0, 1, "", "LinearGraphPartitioner"], [54, 0, 1, "", "MeshContinuum"], [55, 0, 1, "", "MeshGenerator"], [56, 0, 1, "", "OrthogonalMeshGenerator"], [57, 0, 1, "", "PETScGraphPartitioner"], [58, 0, 1, "", "SplitFileMeshGenerator"], [59, 0, 1, "", "SurfaceMesh"]], "pyopensn.mesh.DistributedMeshGenerator": [[48, 2, 1, "", "Execute"], [48, 2, 1, "", "__init__"]], "pyopensn.mesh.ExtruderMeshGenerator": [[49, 2, 1, "", "Execute"], [49, 2, 1, "", "__init__"]], "pyopensn.mesh.FromFileMeshGenerator": [[50, 2, 1, "", "Execute"], [50, 2, 1, "", "__init__"]], "pyopensn.mesh.KBAGraphPartitioner": [[52, 2, 1, "", "__init__"]], "pyopensn.mesh.LinearGraphPartitioner": [[53, 2, 1, "", "__init__"]], "pyopensn.mesh.MeshContinuum": [[54, 2, 1, "", "ComputeVolumePerBlockID"], [54, 2, 1, "", "ExportToPVTU"], [54, 2, 1, "", "SetBlockIDFromFunction"], [54, 2, 1, "", "SetBlockIDFromLogicalVolume"], [54, 2, 1, "", "SetBoundaryIDFromLogicalVolume"], [54, 2, 1, "", "SetOrthogonalBoundaries"], [54, 2, 1, "", "SetUniformBlockID"], [54, 1, 1, "", "dimension"]], "pyopensn.mesh.MeshGenerator": [[55, 2, 1, "", "Execute"]], "pyopensn.mesh.OrthogonalMeshGenerator": [[56, 2, 1, "", "Execute"], [56, 2, 1, "", "__init__"]], "pyopensn.mesh.PETScGraphPartitioner": [[57, 2, 1, "", "__init__"]], "pyopensn.mesh.SplitFileMeshGenerator": [[58, 2, 1, "", "Execute"], [58, 2, 1, "", "__init__"]], "pyopensn.mesh.SurfaceMesh": [[59, 2, 1, "", "ImportFromMshFiles"], [59, 2, 1, "", "ImportFromOBJFile"], [59, 2, 1, "", "ImportFromTriangleFiles"], [59, 2, 1, "", "__init__"]], "pyopensn.post": [[60, 0, 1, "", "AggregateNodalValuePostProcessor"], [61, 0, 1, "", "CellVolumeIntegralPostProcessor"], [62, 0, 1, "", "PostProcessor"], [63, 3, 1, "", "Print"], [64, 3, 1, "", "SetPrinterOptions"], [65, 0, 1, "", "SolverInfoPostProcessor"]], "pyopensn.post.AggregateNodalValuePostProcessor": [[60, 2, 1, "", "Execute"], [60, 2, 1, "", "GetValue"], [60, 2, 1, "", "__init__"]], "pyopensn.post.CellVolumeIntegralPostProcessor": [[61, 2, 1, "", "Execute"], [61, 2, 1, "", "GetValue"], [61, 2, 1, "", "__init__"]], "pyopensn.post.PostProcessor": [[62, 2, 1, "", "Execute"], [62, 2, 1, "", "GetValue"]], "pyopensn.post.SolverInfoPostProcessor": [[65, 2, 1, "", "Execute"], [65, 2, 1, "", "GetValue"], [65, 2, 1, "", "__init__"]], "pyopensn.response": [[66, 0, 1, "", "ResponseEvaluator"]], "pyopensn.response.ResponseEvaluator": [[66, 2, 1, "", "ClearForwardSources"], [66, 2, 1, "", "EvaluateResponse"], [66, 2, 1, "", "SetBufferOptions"], [66, 2, 1, "", "SetOptions"], [66, 2, 1, "", "SetSourceOptions"], [66, 2, 1, "", "__init__"]], "pyopensn.solver": [[67, 0, 1, "", "DiscreteOrdinatesCurvilinearProblem"], [68, 0, 1, "", "DiscreteOrdinatesProblem"], [69, 0, 1, "", "LBSProblem"], [70, 0, 1, "", "NonLinearKEigenSolver"], [71, 0, 1, "", "PRKSolver"], [72, 0, 1, "", "PowerIterationKEigenSCDSASolver"], [73, 0, 1, "", "PowerIterationKEigenSMMSolver"], [74, 0, 1, "", "PowerIterationKEigenSolver"], [75, 0, 1, "", "Solver"], [76, 0, 1, "", "SteadyStateSolver"]], "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem": [[67, 2, 1, "", "ComputeBalance"], [67, 2, 1, "", "ComputeFissionRate"], [67, 2, 1, "", "ComputeLeakage"], [67, 2, 1, "", "CreateAndWriteSourceMoments"], [67, 2, 1, "", "GetFieldFunctions"], [67, 2, 1, "", "GetPowerFieldFunction"], [67, 2, 1, "", "GetScalarFieldFunctionList"], [67, 2, 1, "", "ReadAngularFluxes"], [67, 2, 1, "", "ReadFluxMoments"], [67, 2, 1, "", "ReadFluxMomentsAndMakeSourceMoments"], [67, 2, 1, "", "ReadSourceMoments"], [67, 2, 1, "", "SetOptions"], [67, 2, 1, "", "WriteAngularFluxes"], [67, 2, 1, "", "WriteFluxMoments"], [67, 2, 1, "", "__init__"]], "pyopensn.solver.DiscreteOrdinatesProblem": [[68, 2, 1, "", "ComputeBalance"], [68, 2, 1, "", "ComputeFissionRate"], [68, 2, 1, "", "ComputeLeakage"], [68, 2, 1, "", "CreateAndWriteSourceMoments"], [68, 2, 1, "", "GetFieldFunctions"], [68, 2, 1, "", "GetPowerFieldFunction"], [68, 2, 1, "", "GetScalarFieldFunctionList"], [68, 2, 1, "", "ReadAngularFluxes"], [68, 2, 1, "", "ReadFluxMoments"], [68, 2, 1, "", "ReadFluxMomentsAndMakeSourceMoments"], [68, 2, 1, "", "ReadSourceMoments"], [68, 2, 1, "", "SetOptions"], [68, 2, 1, "", "WriteAngularFluxes"], [68, 2, 1, "", "WriteFluxMoments"], [68, 2, 1, "", "__init__"]], "pyopensn.solver.LBSProblem": [[69, 2, 1, "", "ComputeFissionRate"], [69, 2, 1, "", "CreateAndWriteSourceMoments"], [69, 2, 1, "", "GetFieldFunctions"], [69, 2, 1, "", "GetPowerFieldFunction"], [69, 2, 1, "", "GetScalarFieldFunctionList"], [69, 2, 1, "", "ReadAngularFluxes"], [69, 2, 1, "", "ReadFluxMoments"], [69, 2, 1, "", "ReadFluxMomentsAndMakeSourceMoments"], [69, 2, 1, "", "ReadSourceMoments"], [69, 2, 1, "", "SetOptions"], [69, 2, 1, "", "WriteAngularFluxes"], [69, 2, 1, "", "WriteFluxMoments"]], "pyopensn.solver.NonLinearKEigenSolver": [[70, 2, 1, "", "Advance"], [70, 2, 1, "", "Execute"], [70, 2, 1, "", "GetEigenvalue"], [70, 2, 1, "", "Initialize"], [70, 2, 1, "", "Step"], [70, 2, 1, "", "__init__"]], "pyopensn.solver.PRKSolver": [[71, 2, 1, "", "Advance"], [71, 2, 1, "", "Execute"], [71, 2, 1, "", "GetPeriod"], [71, 2, 1, "", "GetPopulationNew"], [71, 2, 1, "", "GetPopulationPrev"], [71, 2, 1, "", "GetSolutionNew"], [71, 2, 1, "", "GetSolutionPrev"], [71, 2, 1, "", "GetTimeNew"], [71, 2, 1, "", "GetTimePrev"], [71, 2, 1, "", "Initialize"], [71, 2, 1, "", "SetRho"], [71, 2, 1, "", "Step"], [71, 2, 1, "", "__init__"]], "pyopensn.solver.PowerIterationKEigenSCDSASolver": [[72, 2, 1, "", "Advance"], [72, 2, 1, "", "Execute"], [72, 2, 1, "", "GetEigenvalue"], [72, 2, 1, "", "Initialize"], [72, 2, 1, "", "Step"], [72, 2, 1, "", "__init__"]], "pyopensn.solver.PowerIterationKEigenSMMSolver": [[73, 2, 1, "", "Advance"], [73, 2, 1, "", "Execute"], [73, 2, 1, "", "GetEigenvalue"], [73, 2, 1, "", "Initialize"], [73, 2, 1, "", "Step"], [73, 2, 1, "", "__init__"]], "pyopensn.solver.PowerIterationKEigenSolver": [[74, 2, 1, "", "Advance"], [74, 2, 1, "", "Execute"], [74, 2, 1, "", "GetEigenvalue"], [74, 2, 1, "", "Initialize"], [74, 2, 1, "", "Step"], [74, 2, 1, "", "__init__"]], "pyopensn.solver.Solver": [[75, 2, 1, "", "Advance"], [75, 2, 1, "", "Execute"], [75, 2, 1, "", "Initialize"], [75, 2, 1, "", "Step"]], "pyopensn.solver.SteadyStateSolver": [[76, 2, 1, "", "Advance"], [76, 2, 1, "", "Execute"], [76, 2, 1, "", "Initialize"], [76, 2, 1, "", "Step"], [76, 2, 1, "", "__init__"]], "pyopensn.source": [[77, 0, 1, "", "PointSource"], [78, 0, 1, "", "VolumetricSource"]], "pyopensn.source.PointSource": [[77, 2, 1, "", "__init__"]], "pyopensn.source.VolumetricSource": [[78, 2, 1, "", "__init__"]], "pyopensn.xs": [[79, 0, 1, "", "MultiGroupXS"]], "pyopensn.xs.MultiGroupXS": [[79, 2, 1, "", "CreateSimpleOneGroup"], [79, 2, 1, "", "LoadFromOpenMC"], [79, 2, 1, "", "LoadFromOpenSn"], [79, 2, 1, "", "SetScalingFactor"], [79, 2, 1, "", "__init__"], [79, 1, 1, "", "chi"], [79, 1, 1, "", "inv_velocity"], [79, 1, 1, "", "is_fissionable"], [79, 1, 1, "", "nu_delayed_sigma_f"], [79, 1, 1, "", "nu_prompt_sigma_f"], [79, 1, 1, "", "nu_sigma_f"], [79, 1, 1, "", "num_groups"], [79, 1, 1, "", "num_precursors"], [79, 1, 1, "", "scaling_factor"], [79, 1, 1, "", "scattering_order"], [79, 1, 1, "", "sigma_a"], [79, 1, 1, "", "sigma_f"], [79, 1, 1, "", "sigma_t"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "property", "Python property"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "objtypes": {"0": "py:class", "1": "py:property", "2": "py:method", "3": "py:function"}, "terms": {"": [2, 4, 6, 8, 10, 11, 54, 58, 59, 65, 81, 82, 83, 84, 86, 87, 88, 91, 92, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "0": [0, 4, 5, 8, 10, 11, 25, 37, 38, 39, 42, 43, 44, 45, 46, 48, 49, 50, 54, 56, 58, 59, 67, 68, 69, 79, 81, 82, 83, 84, 86, 87, 91, 92, 94, 98, 99, 100, 101, 107, 111], "000": 6, "00295639": 86, "00411458408211656": 86, "013": 84, "04": [8, 9], "044": 86, "05": 86, "09": 84, "0ac": 82, "0e": [0, 27, 28, 67, 68, 69, 94], "0n": 83, "1": [0, 3, 27, 28, 37, 38, 39, 42, 43, 44, 45, 46, 48, 49, 50, 52, 53, 54, 56, 58, 67, 68, 69, 79, 81, 82, 83, 84, 86, 87, 88, 91, 93, 94, 98, 99, 100, 101, 108], "10": [0, 4, 58, 84, 86, 91, 92, 94, 99, 100, 101], "100": [4, 5, 6, 67, 68, 69, 91], "1000": 64, "100k": 5, "101": 84, "1016": [84, 86], "102": 86, "107": [86, 88], "1080": 86, "108848": 86, "109892": 88, "11": [8, 67, 68, 69, 88], "111": [88, 91], "115": 86, "12": [0, 8, 9, 23, 45, 84, 88, 91], "120": 64, "123": 84, "1234": 0, "126": 86, "129": 84, "13": [4, 10, 11, 86, 88], "13182": 84, "133": 84, "136": 88, "137": 84, "138": 84, "14": 11, "140": 88, "144": 84, "145": 86, "147": 86, "14th": 88, "15": [0, 11, 64, 88, 92], "150": 91, "151": 84, "154": 84, "155": 86, "157": 84, "158": 84, "159": 86, "16": 4, "160": 84, "163": 84, "166": [84, 86], "167": 84, "169": 84, "17": [8, 9, 10, 88], "172": 5, "174": 86, "1767436": 86, "18": 5, "180": 92, "185": 84, "19": [4, 86], "194": 86, "195": 84, "1958": 84, "1961": 84, "1964": 84, "1965": 84, "1968": 84, "1969": 84, "197": 86, "1971": [84, 86], "1973": 84, "1974": 84, "1975": 84, "1976": 82, "1977": 84, "1978": 84, "1979": 82, "198": 88, "1982": [82, 86], "1984": [82, 86], "1986": 86, "1989": 84, "199": 88, "1992": 88, "1993": 86, "1996": 86, "1998": [86, 88], "1999": [86, 88], "1d": [17, 82, 84, 97], "1n": 83, "2": [27, 28, 42, 43, 44, 45, 46, 49, 58, 81, 82, 83, 84, 86, 88, 91, 94, 98, 99, 100, 107], "20": 11, "200": [5, 67, 68, 69, 88], "2000": 88, "2001": 84, "2002": [86, 88], "2003": [84, 86], "2004": [86, 88], "2005": 84, "2008": 84, "2009": [84, 86, 88], "2010": [82, 84, 86], "2011": 84, "2012": 88, "2013": 88, "2014": [84, 86], "2015": 84, "2017": 84, "2019": 86, "2020": [5, 86], "2021": 88, "2022": 86, "2023": [10, 11, 86], "2024": [5, 86], "20435e": [67, 68, 69], "20684": 82, "2123205": 86, "213": 84, "218": 86, "22": [8, 9, 84, 86], "228": 86, "230": 84, "2303107": 86, "233": 84, "24": 91, "245": 86, "248": 86, "253": 86, "255": [84, 88], "256": 84, "2573": 84, "263": 88, "264": 86, "268": 84, "274": 86, "28": [84, 86], "280": 84, "294": 111, "298": 84, "2d": [14, 15, 49, 82, 84, 86, 88, 91, 93, 94, 96, 97, 100], "2d_c5g7_coars": 102, "2n": 83, "2r": [81, 87], "3": [23, 25, 43, 44, 45, 46, 67, 68, 69, 83, 84, 86, 88, 91, 92, 98, 109], "30": [88, 91, 92, 94], "300": 94, "3000": 5, "31": 84, "3178": 84, "3188": 84, "32": [4, 84], "32768": [67, 68, 69], "33": 86, "333": 84, "34": 86, "348": 84, "356": 86, "357": 84, "36": 84, "369": [84, 86], "37": 4, "38": 4, "384": 86, "385": 84, "390": 84, "391": 84, "398": 86, "3d": [5, 16, 43, 82, 84, 91, 93, 96, 97], "3n": 83, "3r": [81, 87], "3rd": 0, "4": [4, 43, 45, 81, 82, 83, 84, 86, 91, 92, 94, 99, 101, 103, 104, 105], "40": 86, "400": 84, "411": 84, "425": 88, "442": 82, "45": [84, 86], "452": 82, "454": 5, "46": 86, "477": 88, "479": 84, "481": 88, "491": 5, "4imnyvpq": 82, "4x4": 88, "5": [4, 45, 49, 88, 91, 101, 107], "500": [27, 28], "500k": 5, "517": 86, "52": 84, "533": 86, "55": 101, "56": 84, "584": 5, "5990": 84, "6": [5, 44, 45, 46, 60, 61, 65, 67, 68, 69, 84, 88, 94, 98], "62": 84, "64": [8, 10], "65": 88, "7": [5, 43, 45, 84, 86, 94, 101], "70": [4, 91], "72": 84, "73": 84, "75": 91, "763": 84, "788": 84, "8": [100, 102], "80": [24, 64], "82": 86, "83": 86, "8413": 86, "8426": 86, "856": 86, "869": 86, "87": 84, "873": 86, "89": 84, "893": 86, "89448": 82, "9": [9, 43, 86, 101], "931": 84, "939": 84, "978": 82, "9789048134113": 82, "99": 88, "A": [0, 4, 6, 8, 9, 10, 11, 34, 48, 49, 50, 56, 58, 64, 66, 67, 68, 69, 82, 84, 86, 88, 90, 93, 95], "As": [81, 88], "At": [4, 86, 88], "By": [3, 67, 68, 69], "FOR": [10, 11], "For": [0, 2, 8, 9, 82, 84, 86, 87, 88, 97], "If": [0, 2, 4, 8, 9, 10, 11, 19, 54, 58, 64, 67, 68, 69, 82, 83, 88, 101], "In": [0, 3, 4, 8, 9, 10, 11, 22, 82, 83, 84, 86, 88, 91, 92, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "It": [4, 6, 8, 9, 10, 11, 53, 80, 82, 83, 84, 101], "NO": [8, 10, 11], "NOT": 4, "ON": [3, 8, 9, 10, 11], "Of": 83, "On": [4, 84, 87, 99, 100], "One": [81, 109], "Or": 10, "The": [0, 2, 3, 4, 8, 9, 10, 11, 32, 33, 34, 42, 43, 44, 46, 48, 49, 50, 56, 58, 60, 64, 66, 67, 68, 69, 81, 83, 84, 85, 86, 87, 88, 91, 92, 94, 98, 99, 100, 101, 102, 103, 104, 105], "Their": 84, "Then": [4, 8, 9, 10, 11, 66, 84, 86, 104], "There": [0, 10, 11], "These": [3, 10, 84, 86, 101], "To": [2, 4, 5, 8, 9, 10, 11, 66, 86, 91, 92, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "With": [66, 82, 87, 88], "_": [0, 4, 81, 82, 83, 84, 86, 87, 109], "_0": 81, "__call__": [42, 43, 44, 46], "__init__": [3, 14, 15, 16, 17, 19, 27, 28, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 52, 53, 56, 57, 58, 59, 60, 61, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 77, 78, 79, 91], "__main__": [8, 9, 10, 11], "_c": 84, "_d": 84, "_f": 84, "_g": 86, "_j": 84, "_power_gener": [67, 68, 69], "_r": 82, "_t": 81, "_verts3d": 91, "_work": 23, "_x": 87, "_y": 87, "_z": [82, 87], "aah": 88, "about": 8, "abov": [10, 11, 82, 83, 84], "abscissa": [12, 13, 14, 15, 16, 17, 18, 19], "absorpt": [79, 83, 86], "acceler": [5, 6, 85], "accept": [42, 43, 44, 46], "access": [3, 4, 6, 99, 100, 104], "accomplish": [8, 9], "accord": 4, "account": [10, 11, 83, 84], "accuraci": 84, "achiev": 84, "acm": 88, "across": [6, 67, 68, 69, 87], "act": 82, "action": [4, 23, 86], "activ": 4, "actual": [53, 81], "ad": [3, 10, 11, 66, 86, 90, 97], "ada01": 84, "adam": [84, 86, 88], "adapt": [6, 84], "add": [2, 4, 8, 9, 10, 11, 32, 33, 34, 66, 79, 83, 92], "add_artist": 91, "add_subplot": 91, "addfieldfunct": [32, 33, 34], "addfunct": 2, "addit": [3, 8, 9, 65, 67, 68, 69, 82, 84, 97], "addition": [8, 9, 10, 11], "addparamet": 2, "addproperti": 2, "addstaticfunct": 2, "addvari": 2, "adequ": 84, "adjoint": [6, 66, 67, 68, 69, 85], "adjust": 81, "administr": [8, 9], "advanc": [6, 27, 28, 29, 70, 71, 72, 73, 74, 75, 76], "advantag": 88, "affect": 88, "after": [0, 8, 10, 48, 49, 50, 56, 58, 60, 61, 65, 83], "ag": [67, 68, 69], "against": 66, "aggreg": [6, 60, 85, 94], "ags_convergence_check": [67, 68, 69], "ags_toler": [67, 68, 69], "aka": 104, "akin": 86, "al": [84, 86, 88], "al02": 86, "alamo": 84, "albedo": 82, "alcouff": [52, 88], "algebra": 83, "algorithm": [6, 85, 88], "alias": 4, "align": [82, 84, 86], "all": [2, 3, 4, 5, 8, 9, 10, 11, 48, 53, 54, 58, 62, 64, 66, 67, 68, 69, 75, 83, 84, 86, 88, 92, 94, 99, 100, 101], "all_to_rank": 53, "allow": [5, 21, 22, 59, 88, 90, 109], "along": [90, 91, 99, 100], "alongsid": 3, "alpha": [83, 91], "alreadi": 86, "also": [2, 3, 4, 8, 9, 10, 11, 23, 60, 61, 65, 81, 82, 84, 86, 87, 88, 94, 97, 102, 103, 104, 105], "altern": 4, "alwai": 84, "am93": 86, "amato": 88, "amend": [4, 82, 83, 84], "american": 88, "among": [60, 88], "amort": 88, "amount": [64, 86], "amplitud": 86, "an": [2, 4, 6, 8, 9, 10, 11, 19, 22, 27, 28, 29, 37, 38, 49, 52, 56, 60, 66, 78, 79, 81, 82, 83, 84, 86, 88, 94, 97, 104, 109, 111], "analys": 86, "analysi": [82, 84, 88], "analyt": 81, "ang_quad_plot": 92, "angl": [12, 13, 14, 15, 16, 17, 18, 19, 47, 85, 90, 91, 94], "angle_aggregation_num_subset": 94, "angular": [2, 3, 6, 12, 67, 68, 69, 82, 84, 86, 87, 88, 91, 92, 93], "angular_quadratur": 94, "ani": [0, 4, 8, 9, 10, 11, 59, 84, 86, 87, 92], "anil": 86, "anisotrop": 86, "anisotropi": [82, 83], "anl": 8, "annal": 84, "anoth": [84, 101], "another_fil": 0, "another_member_variable_": 0, "answer": 86, "anthoni": 86, "api": [3, 6, 8, 9, 10, 11], "appear": [11, 48, 49, 50, 56, 58, 84], "append": [3, 10, 91, 92, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "appli": [6, 48, 49, 50, 56, 58, 84, 86, 88, 94, 101], "applic": [3, 8, 9, 10, 11, 84, 86, 88], "approach": [3, 8, 9, 10, 11, 22, 84, 87], "appropri": [10, 86, 91], "approxim": [6, 82, 84, 86], "apt": [8, 9], "aquad": [2, 3, 91, 92, 94], "ar": [0, 2, 3, 4, 6, 8, 9, 10, 11, 35, 49, 53, 54, 60, 61, 64, 65, 66, 67, 68, 69, 81, 82, 83, 84, 86, 88, 90, 91, 94, 99, 100, 101, 105, 106, 107, 109, 110, 111], "arbitrari": [5, 6, 79, 84, 86, 88], "arbitrarili": 6, "archiv": 8, "arg": [3, 91], "argument": [3, 10, 11, 23, 32, 33, 34, 59, 92, 101], "argument_nam": 0, "argv": 23, "arithmet": 94, "around": 92, "arrai": [27, 28, 29, 78, 83, 94, 106, 107, 110, 111], "arriv": 79, "arrow": 91, "arrow3d": 91, "arrowstyl": 91, "articl": [4, 82, 84, 86], "as10": 82, "as_poli": 59, "ascii": [93, 108, 109], "aspect": [84, 94], "asset": [104, 105], "assign": [54, 88, 94, 99, 100, 101], "assist": [8, 9], "associ": [27, 28, 29, 40, 42, 43, 44, 46, 47, 49, 82, 84], "assum": [4, 8, 9, 10, 11, 84, 94], "assumpt": 82, "atexit": 22, "atom": 84, "attempt": [8, 9, 10, 11], "attent": 11, "auhtor": 6, "author": 4, "auto": 3, "autom": 9, "automat": [22, 49, 58, 64, 91, 92, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "autosquash": 4, "avail": [3, 6, 8, 9, 10, 11, 66, 88], "averag": [61, 81, 84, 86], "avg": [34, 60], "avg_func": 34, "avoid": [8, 9, 10, 11, 65, 86, 94], "ax": [86, 91], "axi": 94, "axial": 67, "azimuth": [12, 13, 14, 15, 16, 17, 18, 19, 47, 82, 84, 90, 91, 94], "azmi": 82, "b": [0, 3, 4, 23, 45, 84, 86, 88, 91], "b_": 84, "b_j": 84, "ba23": 86, "background": [6, 85], "bacw08": 84, "bad": 53, "bai08": 84, "bailei": [84, 88], "baker": [52, 88], "balanc": 83, "band": 92, "barbu": 86, "base": [19, 29, 31, 32, 33, 34, 37, 41, 52, 53, 54, 57, 62, 68, 69, 75, 84, 86, 94], "base_nam": [31, 32, 33, 34], "baseclassifbind": 3, "basenam": [91, 92, 98, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "bash": [8, 9], "bash_profil": [10, 11], "bashrc": [8, 9, 10, 11], "basi": [84, 88], "basic": [2, 53, 65, 88], "bcd": 88, "bchw00": 88, "becaus": 81, "becom": [6, 67, 68, 69, 86], "been": [8, 9, 81, 86, 87, 88, 104], "befor": [2, 8, 9, 24, 84, 86, 91, 92, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "begin": [0, 20, 66, 81, 82, 84, 86, 87, 88], "beginclass": 2, "beginnamespac": 2, "behavior": 87, "being": 88, "bell": [82, 84], "below": [4, 8, 9, 88, 94, 98, 99, 100, 101, 102, 103, 104], "bengt": 84, "better": [4, 88], "between": [3, 5, 86, 91, 98, 101], "bf09": 88, "bg": 84, "bg79": 82, "big": [4, 81, 82], "bigcup": 84, "bilinear": 84, "bin": [10, 11, 23, 81], "binari": [0, 58, 86], "bind": [1, 6], "bison": [8, 9, 11], "bit": [8, 10], "bk98": 88, "bla": [8, 9], "block": [0, 2, 50, 54, 78, 93, 94, 96, 97], "block_id": [54, 78, 94], "block_id_fieldnam": 50, "block_id_sett": 54, "blockid": 50, "blv": 35, "bmatrix": [82, 87], "bnd_name": [67, 68], "boi": 87, "boltzmann": [2, 6, 69, 84, 85, 87, 88, 93], "book": 82, "bool": [8, 14, 15, 17, 19, 26, 35, 36, 37, 38, 39, 40, 48, 49, 50, 54, 56, 58, 59, 61, 64, 66, 67, 68, 69], "boolean": [35, 92], "bosler": 84, "both": [0, 4, 8, 9, 10, 11, 49, 84, 94, 99, 100], "bottom": [49, 88], "bottom_boundary_nam": 49, "bound": 2, "boundari": [27, 28, 29, 49, 50, 54, 67, 68, 69, 81, 84, 85, 87, 94, 97, 102, 103, 104], "boundary_condit": [27, 28, 29, 67, 68, 69], "boundary_id_fieldnam": 50, "boundary_nam": 54, "box": 5, "brace": 0, "branch": 1, "breath": [8, 9, 10, 11], "breviti": [84, 86], "brew": [10, 11], "brian": 86, "brief": 88, "brinklei": 84, "britton": 88, "broadcast": 58, "broken": 84, "brown": 88, "browser": [8, 9, 10, 11], "bruce": 86, "bruno": 86, "bt": 86, "buffer": 66, "buffer_nam": 66, "build": [3, 23], "build_arg": 3, "build_ext": 3, "builder": 3, "built": [10, 11, 84, 93, 94, 108, 109], "bw": 86, "c": [1, 4, 6, 8, 9, 10, 11, 23, 79, 83, 84, 86, 88, 91, 92, 94, 107], "c5g7": 102, "c5g7_mesh_onli": 102, "c_i": 82, "cach": 88, "calc": 24, "calcul": [81, 83, 86, 88], "california": 84, "calip": [20, 24], "caliper_dir": 10, "call": [0, 2, 4, 22, 24, 43, 44, 46, 60, 61, 65, 91, 92, 94, 98, 99, 100, 101, 102, 103, 104, 105], "callabl": [42, 43, 44, 46, 54], "can": [2, 3, 4, 6, 8, 9, 10, 11, 22, 24, 49, 53, 66, 68, 81, 82, 83, 84, 86, 87, 88, 97], "cannot": 88, "capabl": 97, "captur": 83, "car71": 84, "carlson": 84, "carol": 88, "cartesian": [48, 50, 56, 85, 94, 99], "case": [0, 4, 10, 22, 82, 84, 86, 88], "caus": [11, 64, 84], "cb58": 84, "cc": [0, 2, 8, 9, 10, 11], "ccm": 5, "cd": [8, 9, 10, 11], "cdot": [19, 81, 82, 84, 87, 92], "cell": [5, 6, 19, 42, 44, 50, 53, 54, 58, 61, 84, 87, 88, 94, 99, 100, 101], "cell_centroid": 54, "center": [5, 94, 99], "centroid": [54, 84, 92], "centuri": 82, "cert": 5, "certain": 87, "cfem": 27, "cfem_diffus": 0, "cfem_diffusion_solv": 0, "cflag": [8, 10], "chang": [2, 3, 4, 10, 11, 54, 82, 84, 88, 94], "char": 4, "charg": 84, "chebyshev": [14, 15, 16, 84, 90, 91, 94], "check": [4, 11, 35, 36, 37, 38, 39, 40, 67, 68, 69, 79, 84, 86, 101], "checkout": 4, "cheuk": 84, "chi": [79, 83], "chi_": 82, "chi_p": 82, "choic": [4, 88, 90], "chosen": [83, 84, 86, 104], "circa": 5, "circular": 37, "cl61": 84, "cl65": 84, "clang": [3, 4, 8, 9], "clang_format": 4, "clarenc": 84, "clariti": 0, "class": [1, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 91, 94], "class_": 3, "clean": 4, "clear": [10, 11, 66, 67, 68, 69, 81], "clear_boundary_condit": [67, 68, 69], "clear_point_sourc": [67, 68, 69], "clear_sourc": 66, "clear_volumetric_sourc": [67, 68, 69], "clearforwardsourc": 66, "click": 104, "clone": 4, "close": [11, 86], "closest": 84, "closeup": 5, "clr": 91, "cls_name": 2, "cm": 88, "cmake": [3, 8, 9, 10, 11], "cmake_arg": 3, "cmake_prefix_path": [8, 9, 10, 11], "cmakelist": 11, "co": [19, 82, 91, 92], "coars": 86, "code": [1, 2, 3, 4, 8, 9, 10, 11, 81, 84, 88, 90, 91, 92, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "collect": 88, "collid": 86, "collis": [82, 86, 88], "colloc": [6, 84], "color": [5, 26, 91], "column": [64, 88], "columnar": 88, "com": [4, 8, 9, 10, 11, 82, 84, 86], "combin": [86, 88], "combinatori": 35, "comm_world": 94, "comma": 64, "command": [1, 3, 4, 8, 9, 10, 11, 23], "comment": [4, 79], "commiss": 84, "commit": 1, "common": [4, 88], "commun": [3, 8, 9, 10, 11, 88], "compani": 82, "compar": 5, "compat": [6, 8, 9, 10, 11], "compil": [0, 1, 6, 8, 9, 10, 11], "complain": 8, "complet": [4, 5, 8, 9, 10, 11, 58, 94], "complex": 88, "compon": [8, 9, 37, 86, 88], "compress": 4, "compris": 88, "comput": [3, 6, 47, 49, 54, 61, 66, 71, 81, 82, 83, 84, 86, 87, 88, 90, 101], "computation": 82, "compute_volume_averag": 61, "computebal": [67, 68], "computefissionr": [67, 68, 69], "computeleakag": [67, 68], "computevolumeperblockid": 54, "concav": 5, "concentr": 82, "concept": [88, 94], "concis": 84, "concurr": 88, "condit": [10, 11, 67, 68, 69, 81, 84, 85, 92, 94, 101], "cone": [19, 92], "cone_s": 19, "confer": [84, 88], "config": [24, 26], "configur": [3, 4, 24, 66, 86], "configure_depend": [9, 11], "conflict": [4, 8, 9, 10, 11], "connect": 84, "connor": 86, "consequ": 81, "conserv": [81, 82, 83], "consid": [84, 88], "consist": [8, 9, 10, 11, 84, 86], "consol": [2, 3, 22, 23, 91, 92, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "const": [0, 3], "construct": [2, 14, 15, 16, 17, 27, 28, 35, 37, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 52, 53, 56, 57, 58, 59, 60, 61, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 77, 78, 84], "constructor": [3, 32, 33, 34, 41], "consult": [8, 10, 82, 84], "contain": [27, 28, 29, 32, 33, 34, 58, 59, 66, 67, 68, 69, 82, 83, 84, 86, 88], "content": 88, "context": [91, 92, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "continu": [4, 27, 84], "continuum": 54, "contribut": [8, 9, 10, 11, 84, 86], "control": [8, 9, 58, 60, 61, 64, 65, 67, 68, 69], "contruct": 2, "convent": [1, 84], "converg": [67, 68, 69, 84, 86, 87, 88], "convert": [91, 92, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "convolv": 66, "coord_si": [48, 50, 56], "coordin": [32, 37, 43, 44, 45, 46, 48, 50, 56, 67, 77, 85, 91], "copi": [8, 9, 10, 11], "coptflag": [8, 10], "copyright": [10, 11], "corner": 88, "correct": [2, 10, 86], "correctli": [10, 11], "correspond": [0, 67, 68, 69, 86], "cosin": [82, 91, 94], "cost": 88, "could": 88, "count": [4, 88], "coupl": 84, "cours": 83, "cover": 84, "cpath": 10, "cpp": [0, 3], "creat": [1, 2, 8, 9, 42, 43, 44, 46, 58, 67, 68, 69, 79, 92, 94, 99, 100, 101, 102, 103, 104], "createandwritesourcemo": [67, 68, 69], "createobjectptr": 2, "createsimpleonegroup": [79, 94, 107], "creation": [67, 68, 69], "crimson": 91, "critic": 6, "cross": [2, 3, 6, 67, 68, 69, 79, 81, 82, 84, 85, 87, 93], "csv": [32, 33, 34, 92], "csv_filenam": 64, "cube": 19, "cur_id": 101, "curl": [9, 11], "current": [3, 8, 10, 66, 67, 68, 69, 70, 72, 73, 74, 82, 83, 84, 86, 87, 101], "curvilinear": [13, 67, 85], "custom": [65, 91], "customari": [82, 84], "cut": [5, 52, 99, 100], "cwm24": 86, "cxx": [8, 9, 10, 11], "cxxflag": [8, 10], "cxxoptflag": [8, 10], "cycl": [5, 84, 91], "cyclic": [5, 88], "cylind": 37, "cylindr": [48, 50, 56, 82, 84], "d": [4, 9, 11, 23, 81, 82, 83, 84, 86, 87, 88, 91], "d_": 84, "d_skip": 91, "dagger": 81, "darkorang": 91, "daryl": 88, "dash": [4, 91], "data": [3, 5, 6, 27, 28, 29, 67, 68, 69, 85, 88, 91, 104, 109], "data_typ": 0, "dataset_nam": 79, "date": [4, 6], "davi": 84, "dbuild_shared_lib": [8, 10], "dcmake_build_typ": [8, 10], "dcmake_cxx_flag": 8, "dcmake_install_prefix": [8, 10], "de": [82, 84], "deal": 23, "debug": [3, 8, 10], "decad": 6, "decai": 86, "decent": 53, "decim": [0, 60, 61, 65], "decompos": 88, "decomposit": [88, 94], "decreas": [84, 94], "def": [3, 22, 42, 43, 44, 46, 54, 91, 92, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "def_stat": 3, "def_submodul": 3, "default": [3, 14, 15, 17, 19, 23, 24, 25, 26, 27, 28, 32, 33, 34, 37, 38, 39, 45, 48, 49, 50, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69], "defin": [0, 3, 65, 66, 77, 78, 82, 83, 84, 86, 91, 97, 101], "definit": [83, 84, 85, 86, 88], "degener": 84, "degrad": 86, "degre": [47, 82, 92], "delai": [67, 68, 69, 79, 82], "delet": 4, "delta": [4, 86], "demonstr": 101, "deng": 86, "denot": [79, 82, 83, 84, 86], "densiti": [82, 84, 86], "depart": 79, "depend": [5, 8, 9, 10, 11, 81, 82, 83, 84, 88], "depth": 91, "deriv": [68, 81, 86], "deriveclass": 2, "describ": [0, 82, 83, 84, 86], "descript": [0, 3, 4, 86, 88], "design": 6, "desir": [11, 66], "destin": 4, "det": 81, "detail": [1, 4, 8, 9, 10, 11, 84, 88, 94], "detector": 81, "determin": 54, "determinist": [6, 87], "dev": [8, 9], "develop": [2, 6], "devolv": [82, 84], "dfem": 28, "dgfem": [84, 86], "dh76": 82, "dhawkin": 23, "dialect": 8, "dict": [27, 28, 29, 35, 49, 54, 60, 61, 65, 66, 67, 68, 69], "dictat": 83, "dictionari": [27, 28, 29, 35, 49, 60, 61, 65, 66], "did": [4, 5], "diff": 4, "differ": [8, 9, 48, 65, 66, 86, 88], "differenti": [82, 84], "diffus": [3, 84, 86], "diffusionsolverbas": [27, 28], "digit": [60, 61, 65, 67, 68, 69], "dim": 91, "dimens": [54, 56, 83, 84, 94, 99, 100, 101], "dimension": [82, 84, 88, 91], "dir": [84, 94], "dir_as_plane_norm": 19, "direct": [2, 3, 5, 12, 13, 14, 15, 16, 17, 18, 19, 81, 82, 84, 88, 90, 101], "directli": 86, "directori": [0, 3, 8, 9, 10, 11, 58], "dirichlet": 81, "disabl": 26, "discontinu": [28, 84, 86, 89, 90, 93], "discret": [67, 68, 69, 82, 85, 86, 88, 90, 94], "discreteordinatesproblem": [67, 94], "discuss": [84, 88], "displai": [60, 61, 65], "distinct": 86, "distribut": [6, 8, 9, 48, 82, 84, 85], "divid": [84, 88], "divis": 88, "dm79": 82, "do": [4, 8, 9, 67, 68, 69, 81, 86, 91, 92, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "do_3d_project": 91, "doc": [3, 8, 9, 10, 11, 23, 109], "docstr": 3, "doctre": 23, "document": [2, 3], "docuument": 33, "doe": [2, 24, 59, 65, 91, 92, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "doi": [84, 86], "domain": [6, 54, 81, 82, 84, 86, 87, 88, 94, 97, 99, 100, 101], "domin": 86, "don": [0, 8, 9, 88], "done": [2, 4, 65, 86, 94], "dont_want": 10, "dopensn_with_doc": [3, 8, 9, 10, 11], "dopensn_with_python": [8, 9, 10, 11], "dorr": 88, "dose": 83, "dot": 81, "doubl": [0, 82, 84], "down": 4, "download": [8, 9, 10, 11], "downscatt": [84, 86, 88], "downstream": 88, "doxygen": [0, 8, 9, 11], "dpi": 91, "dragon": 109, "draw": 91, "driven": [6, 82], "dsa": 86, "dt": 81, "dualiti": 81, "duderstadt": 82, "due": [79, 81, 84, 86, 88], "dummi": 91, "dump": [67, 68, 69], "dure": [3, 67, 68, 69, 87], "dvtk_build_test": 8, "dvtk_group_enable_imag": [8, 10], "dvtk_group_enable_qt": [8, 10], "dvtk_group_enable_rend": [8, 10], "dvtk_group_enable_standalon": [8, 10], "dvtk_group_enable_web": [8, 10], "dvtk_group_mpi": 8, "dvtk_module_use_external_vtk_hdf5": [8, 10], "dvtk_use_mpi": 10, "dwith_kokko": 8, "dwith_mpi": 8, "dx": [94, 99, 100, 101], "dx_geo": 101, "dynam": 6, "e": [3, 4, 6, 8, 9, 50, 82, 83, 84, 86, 87, 88, 94, 97, 109], "e_": [82, 84], "e_g": 84, "each": [8, 9, 10, 11, 27, 28, 29, 35, 48, 49, 50, 56, 58, 65, 67, 68, 69, 83, 84, 86, 88, 92, 94, 99, 100], "earli": 86, "earlier": 84, "easi": [6, 7, 84], "easier": 4, "easiest": 4, "easili": 84, "eddington": 86, "edg": 84, "edit": 4, "editor": 4, "edward": 86, "ee": 88, "eff": [82, 86], "effect": [6, 83, 84, 86], "effici": [6, 86, 88], "eigen": [70, 72, 73, 74], "eigenproblem": 86, "eigenvalu": [6, 68, 70, 72, 73, 74, 82, 86], "either": [3, 10, 49, 81, 82, 97], "elast": 83, "element": [6, 19, 27, 28, 32, 33, 34, 45, 84, 86, 89, 90, 93], "ell": [81, 82, 83, 84, 87], "elmer": 82, "els": 2, "elsewher": [67, 68, 69, 91], "em": 84, "email": 4, "embed": [2, 5], "emg": 49, "emploi": [6, 82, 83, 84, 86, 101], "empti": [0, 3, 4, 32, 33, 34, 41, 64, 67, 68, 69, 79], "en": 109, "enabl": [3, 26, 67, 68, 69], "enablecalip": 24, "enclos": 0, "encod": 84, "end": [0, 2, 22, 81, 82, 84, 86, 87, 91, 92, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "endclass": 2, "endnamespac": 2, "energi": [5, 6, 67, 68, 69, 79, 81, 82, 83, 85, 86, 87, 94], "enforc": 64, "engin": [82, 84, 86, 88], "ensight": 97, "ensur": [8, 9, 10, 11, 60, 61, 65], "entir": 86, "entri": [52, 81, 84, 94], "enum": 1, "enum_value_1": 0, "enum_value_2": 0, "enumer": 4, "environ": [3, 10, 22, 91, 92, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "eq": 84, "equal": [82, 84], "equat": [3, 6, 81, 84, 85, 86, 87, 88], "equatori": 84, "equiv": 84, "equival": [53, 84], "erin": 86, "error": [8, 9, 10, 11, 21, 22, 84, 86], "essenti": [2, 8, 9], "establish": 68, "estim": 86, "et": [84, 86, 88], "eta": 82, "etc": [8, 9, 10], "eugen": 82, "evalu": [3, 6, 42, 43, 44, 46, 47, 66, 81, 82, 84, 86], "evaluaterespons": 66, "even": [4, 10, 11], "evenli": [99, 100, 101], "event": [2, 22, 60, 61, 64, 65, 82, 91, 92, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "event_nam": [60, 61, 62, 65], "events_on_which_to_print_postproc": 64, "everi": [4, 8, 9, 87], "everyth": [3, 10], "ew": 86, "exact": 86, "exampl": [0, 2, 3, 4, 8, 9, 35, 42, 43, 44, 45, 46, 49, 54, 81, 83, 84, 87, 88, 91, 93, 95], "exascal": 5, "except": 0, "exclud": 35, "execut": [6, 10, 11, 22, 27, 28, 29, 32, 33, 34, 48, 49, 50, 55, 56, 58, 60, 61, 62, 65, 70, 71, 72, 73, 74, 75, 76, 88, 91, 92, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "execute_on": [60, 61, 65], "exhibit": 86, "exist": [0, 2, 66], "exodu": 97, "expand": 82, "expans": [67, 68, 69, 83, 85], "expect": 109, "expens": 82, "experi": 5, "explain": 2, "explanatori": 2, "explicit": [84, 91, 92, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "explicitli": [3, 22], "export": [8, 9, 10, 11, 31, 32, 33, 34, 67, 68, 69, 94, 98, 102, 103, 104, 105], "exportmultipletovtk": [31, 94], "exporttocsv": [32, 33, 34], "exporttopvtu": [54, 98, 99, 100, 101, 102, 103, 104, 105], "express": 82, "ext": [0, 81, 82, 84, 86], "extend": 88, "extens": 3, "extern": [81, 82, 84, 86, 94], "extra": 3, "extract": [8, 94], "extrud": [49, 93, 96], "extruded_mesh_onli": 98, "extrudermeshgener": 98, "extrus": [37, 49], "f": [3, 4, 42, 43, 44, 46, 81, 82, 83, 84, 86, 92, 94], "f1b3ad0": 4, "f77": [10, 11], "f77flag": [8, 10], "f90flag": [8, 10], "f_": 83, "f_0": [81, 82], "face": [59, 84], "facess": 54, "facet": 59, "facilit": 3, "fact": 82, "factor": [67, 68, 69, 79, 86], "factori": 101, "fail": [8, 10], "falgout": 88, "fallow": [10, 11], "fals": [14, 15, 17, 19, 35, 38, 48, 49, 50, 56, 58, 59, 61, 64, 66, 67, 68, 69, 86, 91, 92, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "fancyarrowpatch": 91, "fashion": 86, "fast": 86, "faster": [4, 84], "favorit": [8, 9, 11], "fblaslapack": [8, 10], "fc": [8, 9, 10, 11, 86], "fcflag": [8, 10, 11], "featur": [3, 4, 6], "ff": [32, 33, 34], "ff_list": 31, "ff_name": [32, 33, 34], "fffea64": 4, "fflag": [8, 10, 11], "fflist": 94, "fichtl": 86, "fidel": [48, 49, 50, 56, 58], "field": [2, 3, 6, 27, 28, 29, 30, 31, 32, 33, 34, 42, 50, 60, 61, 67, 68, 69], "field_function_prefix": [67, 68, 69], "field_function_prefix_opt": [67, 68, 69], "fieldfunc": [2, 3, 27, 28, 29, 67, 68, 69, 94], "fieldfunct": [32, 33, 34], "fieldfunctiongridbas": [27, 28, 29, 67, 68, 69, 94], "fieldfunctioninterpol": [32, 33, 34], "fieldfunctioninterpolationlin": 33, "fig": 91, "figur": [3, 88, 91], "file": [1, 3, 4, 8, 9, 10, 11, 19, 32, 33, 34, 50, 54, 58, 59, 64, 66, 67, 68, 69, 79, 91, 92, 93, 94, 96, 97, 99, 100, 101, 107, 108, 109], "file_bas": [19, 67, 68, 69], "file_base_nam": 54, "file_nam": [59, 79], "file_name1": 0, "file_name2": 0, "file_prefix": 58, "filenam": [50, 59, 98, 102, 103, 104, 105], "filepath": [102, 111], "files_to_remov": 92, "filter": [60, 61, 65], "final": [32, 48, 49, 50, 55, 56, 58, 81, 82, 84], "finalize_env": [22, 91, 92, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "find": [2, 10], "fine": 86, "finish": [4, 88], "finit": [6, 19, 27, 28, 84, 86, 89, 90, 93], "first": [0, 2, 4, 8, 9, 10, 11, 81, 86, 87, 88, 92, 93, 95, 99, 100], "first_exampl": 94, "fissil": 79, "fission": [67, 68, 69, 79, 81, 82, 83, 84, 86], "fit": [0, 10, 11], "fix": [1, 60, 61, 65, 67, 68, 69, 84, 86], "fixup": 4, "flag": [38, 48, 49, 50, 56, 58, 61, 66, 67, 68, 69], "flake8": 4, "flex": [8, 9], "flexibl": [3, 88], "flight": 82, "float": [19, 27, 28, 33, 34, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 56, 58, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79], "floating_point": [60, 61, 65], "flop": 88, "flux": [6, 67, 68, 69, 82, 84, 85, 87, 88, 90, 94], "focu": 84, "fold": 66, "folder": [3, 58, 92], "follow": [0, 2, 3, 4, 8, 9, 10, 11, 22, 79, 81, 82, 86, 88, 91, 92, 97, 98], "foo": [42, 43, 44, 46], "fopenmp": [8, 10], "foptflag": [8, 10], "foral": [81, 82], "forc": 3, "forcibli": 3, "forget": 4, "fork": [4, 8, 9, 10, 11], "form": [4, 5, 84, 86, 88], "formal": [6, 85, 86], "format": [0, 1, 3, 8, 9, 10, 11, 31, 54, 59, 60, 61, 64, 65, 79, 94, 97, 99, 100, 101, 104, 106, 110], "formul": 84, "formula": 83, "forth": 83, "forward": [66, 81], "found": [4, 6, 92], "foundat": [10, 11], "four": [88, 94], "fpic": [8, 10], "frac": [81, 82, 83, 84, 86, 107], "fraction": 0, "framework": 0, "free": [10, 11, 86], "from": [2, 4, 6, 8, 9, 10, 11, 19, 22, 35, 42, 43, 44, 46, 50, 54, 59, 60, 61, 65, 66, 67, 68, 69, 77, 79, 81, 82, 83, 84, 86, 91, 92, 93, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110], "fromfilemeshgener": [98, 102, 103, 104, 105], "ftp": 8, "fu": 88, "full": [48, 49, 50, 56, 58, 67, 68, 69, 88], "fulli": [6, 8, 9, 10, 11, 84, 86], "fun": 4, "func": [27, 28, 29, 42, 43, 44, 46, 54, 78, 101], "function": [0, 1, 3, 6, 8, 9, 10, 11, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 42, 43, 44, 46, 54, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 81, 82, 84, 101], "further": 84, "futur": [1, 4, 90, 97], "fuzzi": 94, "fw": 84, "fwp09": 86, "fyi": 104, "g": [3, 6, 8, 9, 10, 11, 42, 43, 44, 46, 79, 81, 83, 84, 86, 87, 88, 91, 94, 109], "g_": [84, 87, 88], "g_t": 81, "gain": 82, "galerkin": 84, "gamma": [6, 81, 82, 83, 84], "gather": [81, 82, 84], "gauss": [14, 15, 16, 17, 84, 90, 91, 94], "gb": 5, "gcc": 11, "gdh69": 84, "ge": [83, 84], "gelbard": 84, "gener": [2, 3, 5, 8, 9, 10, 11, 19, 22, 36, 45, 48, 49, 50, 51, 55, 56, 58, 60, 61, 65, 67, 68, 69, 71, 86, 88, 93, 96, 97, 102, 103, 104, 107, 109], "geometr": 88, "geometri": [14, 15, 16, 17, 49, 84, 86, 88, 91, 94, 99, 101], "georg": 82, "get": [0, 4, 27, 28, 29, 32, 33, 34, 60, 67, 68, 69, 71, 79, 88, 92, 101], "get_ipython": [22, 91, 92, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "get_proj": 91, "geteigenvalu": [70, 72, 73, 74], "getfieldfunct": [27, 28, 29, 67, 68, 69], "getfieldfunctionbynam": [32, 33, 34], "getglobalnamespac": 2, "getmemb": 0, "getperiod": 71, "getpointvalu": 33, "getpopulationnew": 71, "getpopulationprev": 71, "getpowerfieldfunct": [67, 68, 69], "getscalarfieldfunctionlist": [67, 68, 69, 94], "getsolutionnew": 71, "getsolutionprev": 71, "gettimenew": 71, "gettimeprev": 71, "getvalu": [34, 60, 61, 62, 65], "gfortran": [8, 9, 10, 11], "ghp99": 86, "gi": 84, "git": [4, 8, 9, 10, 11], "github": [4, 8, 9, 10, 11], "give": [86, 88, 94, 99, 100], "given": [32, 33, 34, 81, 82, 83, 84, 86, 88, 92, 94, 101], "glasston": 82, "glcproductquadrature2dxi": [91, 94], "glob": 92, "global": [2, 3, 84, 86, 87], "global_id": 53, "gmre": 86, "gmres_restart_interv": 94, "gmsh": [59, 93, 96, 97], "gmsh_alltet": [104, 105], "gnu": 10, "go": 4, "goal": 84, "goe": 84, "gold": 97, "gone": 23, "good": [8, 9, 82, 86], "googl": 82, "gov": 8, "gprime": 79, "graph": [51, 52, 53, 57, 84, 88], "graphit": [5, 86], "graphpartition": [48, 49, 50, 56, 58], "greater": [58, 83], "greatli": 88, "grei": 91, "grid": [6, 31, 52, 53, 54, 84, 86, 88, 93, 94, 96, 97, 98, 102, 103, 104, 105], "grid2": [99, 100], "group": [0, 2, 5, 46, 67, 68, 69, 77, 78, 79, 81, 82, 83, 84, 85, 87, 93, 94, 108, 109], "group_strength": [78, 94], "groups_from_to": 94, "groupset": [67, 68, 69, 94], "gtrless": [81, 87], "guid": [2, 4, 6], "guthri": 86, "gz": 8, "h": [0, 3, 49, 81, 82, 84, 86], "h5": 111, "h_t": 81, "ha": [4, 8, 9, 11, 81, 84, 86, 88], "had": [2, 104], "hageman": 84, "half": 87, "hamilton": 82, "hand": 84, "handl": [6, 48, 49, 50, 56, 58, 66, 91, 92, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "handler": 21, "hanebutt": 88, "hanu": 86, "happen": 92, "harbour": 86, "hard": 4, "harmon": [47, 67, 68, 69, 82], "hash": 4, "have": [0, 2, 3, 4, 8, 9, 67, 68, 69, 82, 83, 84, 86, 87, 88, 91, 94, 99, 100, 104], "hawkin": 88, "hdf5": [93, 108, 109], "header": 0, "heat": [83, 87], "heavi": 86, "help": [3, 4, 8, 9], "henc": [81, 82, 83, 84, 86, 87, 91, 92], "here": [4, 68, 91, 92, 94, 99, 100, 104, 106, 107, 110, 111], "hereaft": 82, "heterogen": 97, "hhr": 86, "high": [5, 83, 84, 86, 88], "higher": [84, 86], "highest": 82, "highli": [4, 86], "hil75": 84, "hill": 84, "hiromi": 84, "histori": [64, 65], "hl92": 88, "hold": 81, "hollowai": 86, "home": 23, "homebrew": [10, 11], "homogen": [94, 99, 100], "horizont": 64, "hous": [94, 97, 99, 100], "how": [2, 4, 94], "howev": [22, 83, 84, 86, 88, 91, 92, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "hr20": 86, "hsa": 88, "html": [8, 9, 10, 11, 23, 109], "http": [4, 8, 9, 10, 11, 82, 84, 86, 109], "hybrid": 84, "hypr": [8, 10], "i": [0, 2, 3, 4, 6, 8, 9, 10, 11, 22, 23, 25, 26, 35, 36, 37, 38, 39, 40, 42, 43, 44, 46, 48, 49, 52, 53, 54, 58, 59, 64, 65, 66, 67, 68, 69, 71, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 91, 92, 94, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 109, 110, 111], "ic": 88, "id": [42, 44, 50, 54, 78, 82, 93, 96, 97, 102, 103, 104], "idaho": 88, "idea": [8, 9, 86], "identif": 84, "identifi": 4, "ignor": [3, 38, 58, 67, 68, 69, 83], "ii": [84, 97], "illustr": 88, "img": 3, "immedi": [24, 88], "implement": 86, "implicitli": [8, 9, 10, 11], "import": [8, 9, 10, 11, 22, 81, 84, 88, 91, 92, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "importfrommshfil": 59, "importfromobjfil": 59, "importfromtrianglefil": 59, "impos": 82, "inc": [10, 11, 81, 82], "incid": 88, "includ": [3, 6, 8, 10, 35, 67, 68, 69, 81, 82, 83, 84, 88], "inclus": 24, "incom": [82, 84], "incorpor": [8, 9, 10, 11], "increas": [56, 82, 88, 94], "indent": 3, "index": [8, 9, 10, 11, 53, 67, 68, 69, 84, 86, 94, 109], "indic": [8, 10, 59, 67, 68, 69, 84], "individu": 48, "induc": 5, "inelast": 83, "infi": 38, "infinit": 86, "inflow": 84, "info": 65, "inform": [4, 8, 9, 65, 66, 82, 88, 104], "infx": 38, "infz": 38, "inherit": 2, "inhomogen": 86, "init": 3, "initi": [27, 28, 29, 32, 33, 34, 60, 61, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 81, 83, 85, 91, 92, 94, 101], "initial_valu": [60, 61, 65], "inner": [67, 68, 69, 81, 84, 86], "inner_linear_method": 94, "innermost": 88, "inplac": 3, "input": [4, 27, 28, 42, 43, 44, 46, 48, 49, 50, 56, 58, 79, 83, 98, 109], "inputparamet": 2, "ins": 1, "inscatt": 84, "inscrib": 19, "insert": 98, "insid": [0, 2, 35, 36, 37, 38, 39, 40, 54], "instal": [3, 6, 94], "install_top": [8, 10], "instead": [0, 53, 58], "instruct": [3, 4, 8, 9, 10, 11], "int": [0, 3, 14, 15, 16, 17, 19, 25, 27, 28, 32, 42, 44, 46, 47, 52, 53, 54, 58, 59, 60, 61, 64, 65, 67, 68, 69, 78, 82, 91], "int_": [81, 82, 84, 87], "int_0": 81, "integr": [61, 81, 82, 84], "intend": [11, 88], "intens": 3, "interact": [0, 4, 82, 83, 91], "interest": [66, 81, 87], "interfac": [3, 6, 94, 101], "interior": [84, 86, 87], "intern": [3, 52, 84, 88], "interplai": 88, "interpol": [32, 33, 34], "interpret": [9, 19, 22, 81], "interv": [67, 68, 69, 84], "introduc": [11, 81, 82, 84, 88, 94], "introduct": [82, 85, 89, 93, 96, 108], "inv_veloc": 79, "invers": [79, 86], "invok": 22, "ipynb": [91, 92, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "ipython": [22, 91, 92, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "ipython_inst": [22, 91, 92, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "is_fission": 79, "isbn": 82, "isotrop": [78, 82, 83, 94, 107, 109], "issu": [4, 11, 94], "iter": [6, 66, 67, 68, 69, 72, 73, 74, 84, 85, 87, 88], "itertool": 91, "its": [3, 10, 77, 82, 84, 86, 88], "j": [3, 8, 9, 10, 11, 82, 84, 86, 87], "jae": 84, "jame": [82, 84, 86], "jan": 88, "jcp": [84, 86], "je": 86, "jean": [84, 86, 88], "jim": [84, 86, 88], "job": 3, "john": [82, 84], "journal": [6, 84, 86, 88], "jp": 86, "jr": 84, "jupyt": 22, "just": 58, "k": [68, 70, 72, 73, 74, 82, 84, 86, 88, 91], "k_": [82, 86], "k_eff": 5, "kappa": [67, 68, 69, 83], "kay": 84, "kba": [5, 52, 88, 97, 104], "kba92": 88, "kbagraphpartition": [94, 99, 100], "kd": 84, "kebab": 0, "keep": [88, 94], "kei": [2, 4, 35, 54], "kenneth": 88, "kept": 94, "kernel": 88, "keyword": 0, "kib": 4, "kill": 23, "kineat": 71, "kinet": 71, "known": [81, 82, 84, 86], "koch": [52, 88], "krieger": 82, "krylov": 85, "kwarg": [27, 28, 29, 35, 37, 38, 39, 40, 48, 49, 50, 52, 53, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 91], "l": [2, 47, 82, 84, 86, 87, 88, 99, 100, 101], "l2": [67, 68, 69], "l_": [81, 82, 83, 84], "l_abs_tol": 94, "l_g": 86, "l_max_it": 94, "la": 84, "la17": 84, "lab": 84, "label": 84, "laboratori": 84, "lag": [84, 86], "lambda": [42, 43, 44, 46, 54, 86], "langl": 81, "laptop": 6, "lar84": 86, "larg": [6, 67, 68, 69, 86], "largest": 86, "larsen": 86, "last": [71, 92], "lat68": 84, "lat71": 84, "later": 6, "latest": [4, 10, 27, 28, 29, 64, 86], "lathrop": 84, "latter": 84, "lau": 84, "law": 82, "lawrenc": 88, "layer": [49, 98], "layout": [98, 102, 103, 104], "lb": [2, 66], "lbs_problem": [66, 94], "lbsproblem": [67, 68], "lc64": 84, "ld_classic": 11, "ldfe": [84, 89, 90, 93], "ldot": 83, "le": [81, 84, 86], "lead": [82, 83, 88, 92], "leakag": [6, 84, 85, 86], "leav": [4, 101], "lebedev": 90, "lee": 84, "lee61": 84, "left": [81, 82, 84, 86, 88], "leftarrow": 86, "legendr": [14, 15, 16, 17, 47, 79, 82, 84, 90, 91, 94], "len": 91, "length": [83, 94, 99, 100, 101], "lesaint": 84, "less": [5, 84], "let": [2, 4], "letter": 4, "level": [3, 8, 9, 19, 25, 49, 58, 67, 68, 69, 84, 86, 88, 92], "lewi": [82, 88], "li": [84, 101], "lianxiang": 88, "lib": [2, 3, 10], "libncurses5": [8, 9], "libopenmpi": [8, 9], "librari": [0, 2, 3, 8, 10, 87, 109], "library_path": 10, "lifecycl": 22, "like": [0, 2, 4, 22], "likewis": [84, 88, 94], "limit": 64, "limits_": 84, "line": [1, 3, 4, 11, 23, 32, 33, 34, 79, 82, 91, 94], "linear": [2, 6, 19, 53, 69, 70, 84, 85, 86, 87, 89, 90, 93], "linear_boltzmann_solv": [102, 111], "linearli": 84, "linestyl": 91, "linewidth": 91, "link": 10, "link_librari": 11, "linker": 11, "linspac": 91, "lint": 4, "linux": [6, 7], "list": [4, 23, 27, 28, 29, 31, 32, 33, 34, 35, 46, 48, 49, 50, 52, 56, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 77, 78, 92, 106, 107, 110, 111], "llnl": 8, "lm84": 82, "lncurs": 10, "lo": 84, "load": [59, 79, 93, 94, 106, 107, 108, 110], "loadfromopenmc": [79, 111], "loadfromopensn": [79, 106, 110], "local": [4, 6, 8, 9, 10, 19, 23, 58, 84, 86, 90, 92], "locallyrefin": [19, 92], "locat": [2, 3, 8, 9, 10, 11, 39, 48, 52, 77, 94, 99, 100], "log": [2, 3, 4], "log_vol": 54, "logan": 86, "logic": [2, 3, 6, 34, 35, 36, 37, 38, 39, 40, 54, 78, 94], "logical_volum": 78, "logicalvolum": [2, 34, 35, 37, 38, 39, 40, 54, 78], "logiv": 54, "logvol": [2, 3, 34, 54, 78], "long": [3, 88], "longer": [80, 86, 88], "look": [2, 4], "loop": [86, 88, 92], "loss": 82, "loui": 82, "low": [84, 86], "lower": [4, 86], "lowri": 84, "lr74": 84, "lt": [8, 9], "lua": [1, 4, 6, 94], "lua_root": 10, "luabridg": 2, "luabridge3": 2, "lv": [34, 35], "lw": 91, "m": [47, 81, 82, 84, 86, 87, 88, 91], "m4": 11, "m_": [82, 84], "m_gprime_g_v": 79, "maa00": 88, "machin": [4, 6, 7, 88], "maco": [6, 7], "macosx": 10, "macport": 10, "macro": 86, "macro_paramet": 0, "macrodefinit": 0, "made": [4, 84, 88], "magnitud": 82, "mai": [0, 8, 9, 10, 11, 22, 32, 33, 34, 65, 86, 90, 97, 109], "main": [4, 87], "maintain": [8, 9, 10, 11, 88], "make": [4, 6, 8, 9, 10, 11, 48, 49, 50, 56, 58, 82, 94], "make_mat_id_funct": 101, "make_shar": 3, "manag": [8, 9, 20, 24], "mandatori": 83, "mani": 86, "manner": 6, "manual": [6, 10, 84], "manualexecut": [60, 61, 62, 65], "map": [0, 35, 81, 84], "march": 10, "mark": [20, 88], "martin": [82, 86], "marvin": [84, 86, 88], "mass": 84, "massiv": [6, 88], "mat_id": [42, 44, 54, 101], "mat_id_funct": 101, "match": [32, 33, 34, 92], "materi": [5, 42, 44, 79, 82, 83, 84, 86, 97, 98, 102, 103, 104], "math": [3, 6, 19, 27, 28, 29, 32, 34, 35, 36, 37, 38, 39, 40, 54, 59, 78, 92], "mathbb": 87, "mathcal": [81, 82, 84, 87], "mathemat": [84, 88], "mathi": 88, "matplotlib": 91, "matric": 84, "matrix": [82, 83, 84, 86, 88, 91], "max": [34, 38, 60, 81, 82, 83, 84], "max_ags_iter": [67, 68, 69], "max_column_width": 24, "max_func": 34, "max_it": [27, 28], "max_mpi_message_s": [67, 68, 69], "maxim": 6, "maximum": [64, 67, 68, 69, 82], "mc": 8, "mccormick": 82, "mcghee": 84, "mean": [4, 35, 84, 86, 87, 91], "mechan": 84, "media": 86, "medium": 86, "meet": [84, 86], "member": [0, 1], "member_": 0, "memberfunctionwithanargu": 0, "memori": 5, "memoryview": [71, 106, 107, 110, 111], "mention": 4, "merchant": [10, 11], "merg": 4, "mesh": [2, 3, 6, 27, 28, 40, 84, 86, 88, 93], "mesh_ortho_2d": 99, "meshcontinuum": [27, 28, 48, 49, 50, 55, 56, 58], "meshgen": [94, 98, 99, 100, 101, 102, 103, 104, 105], "meshgen2": [99, 100], "meshgener": [48, 49, 50, 56, 58], "meshpi": 104, "messag": [3, 4, 11, 67, 68, 69], "met": [92, 101], "method": [2, 6, 27, 28, 82, 85, 88, 93, 94, 108, 109], "meti": [8, 10], "mev": [67, 68, 69], "mex": 84, "mf": 86, "mf_p": 82, "mg_src": 94, "mib": 4, "michael": [86, 88], "midpoint": 84, "might": [8, 9], "milan": 86, "miller": [82, 84], "milo": 88, "min": [5, 38, 60], "minim": [66, 86], "minimum": [64, 65, 94], "minor": [8, 9], "minu": 82, "minut": 5, "mip": 86, "mismatch": [10, 11], "miss": [8, 11], "mitig": [6, 84, 86], "mixtur": 49, "mjr77": 84, "mkdir": [8, 9, 10, 11], "ml": 86, "mo": 88, "mode": [3, 22, 23, 67, 68, 69, 86, 91, 92, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111], "model": [82, 88], "modern": 6, "modif": 4, "modifi": [3, 4, 11, 86], "modul": [0, 3, 8, 9, 10, 11, 22, 92, 94, 102, 111], "mom": [82, 84], "moment": [67, 68, 69, 79, 82, 84, 86, 87, 90, 94], "momentum": 82, "monoton": 56, "mor82": 86, "mor89": 84, "more": [1, 8, 9, 67, 68, 69, 84, 88, 94, 104], "morel": [84, 86, 88], "most": [4, 6, 8, 9, 84, 86], "mostli": [68, 97], "move": 4, "mpi": [6, 8, 9, 10, 11, 22, 48, 58, 67, 68, 69, 91, 92, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "mpi4pi": [8, 9, 10, 11, 94], "mpi_dir": [10, 11], "mpicc": [8, 9, 10, 11], "mpich": [8, 9], "mpicxx": [8, 9, 10, 11], "mpiexec": [94, 98, 99, 100, 101, 102, 103, 104, 105], "mpif77": [10, 11], "mpifort": [8, 9, 10, 11], "mpl_toolkit": 91, "mplot3d": 91, "msh": [97, 102, 103], "mtune": 10, "mu": [82, 84, 91], "mu_0": 82, "much": [4, 5], "multi": [0, 6, 78, 79, 86, 93, 108], "multidimension": 86, "multigrid": 86, "multigroup": [6, 81, 84, 85, 87, 88, 94, 109], "multigroupx": [94, 106, 107, 110, 111], "multipl": [0, 4, 32, 33, 34, 48, 83, 88, 93, 96], "multipli": 84, "must": [3, 4, 8, 9, 22, 56, 84, 86, 91, 92, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "mutation_scal": 91, "mv": 4, "mvapich": [8, 9], "mw05": 84, "mwlp03": 84, "my": [3, 4], "my_class": 3, "my_const": 0, "my_contain": 0, "my_member_vari": 0, "my_member_variable_": 0, "mycflag": [8, 10], "myclass": [0, 3], "myclassmethod": 3, "mycoolmemberfunct": 0, "myenum": 2, "myfunct": 2, "mylib": 10, "mylovelyclass": 2, "mylovelyclassptr": 2, "mymethod1": 3, "myst": [8, 9, 10, 11], "mystaticfunct": 2, "n": [3, 8, 9, 10, 11, 46, 49, 81, 82, 83, 84, 87, 88, 91, 94, 98, 99, 100, 101, 102, 103, 104, 105], "n_": [82, 84], "n_azimuth": [14, 15, 16], "n_cell": [94, 99, 100, 101], "n_cells_geo": 101, "n_dir_per_oct": 91, "n_direct": 91, "n_f": 84, "n_group": 46, "n_octant": 91, "n_polar": [14, 15, 16, 17], "n_refin": 101, "n_v": 84, "nabla": [81, 82, 84], "name": [1, 4, 8, 9, 10, 11, 19, 31, 32, 33, 34, 49, 50, 54, 60, 61, 65, 67, 68, 69, 91, 92, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "namespac": 1, "nanci": 88, "nativ": 10, "natur": [67, 68, 69, 88], "nazimu": 94, "nbconvert": [22, 91, 92, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "ncurs": [8, 9, 10], "ndir": 91, "ne": 92, "necessari": [8, 9, 10, 11, 66, 86, 94], "need": [2, 4, 8, 9, 10, 11, 65, 79, 81, 83, 86, 88, 90, 94, 99, 100], "neg": [67, 68, 69], "neighbor": [84, 88], "net": 87, "netherland": 82, "neutral": [6, 67, 82, 84, 88], "neutron": [3, 5, 6, 67, 68, 69, 79, 82, 83, 84, 86, 88], "new": [2, 4, 10, 11, 54, 67, 68, 69, 82, 84, 86], "newli": 11, "next": [11, 71, 86, 88, 91], "ng": [79, 106, 107, 110, 111], "njoi": 109, "nm": 84, "nmom": 79, "nodal": 60, "node": 56, "node_set": [56, 94, 99, 100, 101], "nodes_geo": 101, "nodes_msh": 101, "nolimits_": 84, "non": [0, 3, 4, 5, 53, 70], "none": [14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 91, 92, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "none_of": 0, "nonsymmetr": 86, "nor": 84, "norm": [43, 45, 54, 86], "normal": [67, 68, 69, 82, 92], "norman": 82, "notag": 84, "notat": [81, 82, 86], "note": [4, 6, 8, 9, 24, 67, 68, 69, 78, 81, 82, 83, 84, 86, 88, 91, 92, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "noth": 4, "notif": 4, "notion": 84, "now": [4, 66, 81, 82, 84, 88, 99, 100], "np": [91, 92, 106, 107, 110, 111], "npolar": 94, "ns_one": 0, "nse10": 84, "nse16": 84, "nu": 83, "nu_delayed_sigma_f": 79, "nu_p": 82, "nu_prompt_sigma_f": 79, "nu_sigma_f": 79, "nuanc": 88, "nuclear": [82, 84, 86, 88], "num_group": [46, 79, 94, 106, 107, 110, 111], "num_moment": 79, "num_partit": 58, "num_precursor": 79, "number": [3, 4, 6, 14, 15, 16, 17, 19, 32, 46, 52, 54, 58, 60, 61, 65, 67, 68, 69, 79, 82, 84, 86, 88, 91, 94], "numer": [3, 6, 60, 61, 65, 84, 91], "numpi": [3, 91, 92, 106, 107, 110, 111], "nx": [52, 94, 99, 100], "ny": [52, 82, 88, 94, 99, 100], "nz": [52, 100], "o": [86, 88, 91, 92, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "o3": [8, 10], "obj": [59, 93, 96, 97, 98], "object": [4, 45, 48, 49, 50, 56, 58, 60, 61, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 97, 104, 106, 107, 110, 111], "obtain": [67, 68, 69, 83, 84, 86, 87, 92, 102, 103, 104, 105], "oc": [91, 92], "occur": [11, 22, 84, 91, 92, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "octant": [84, 91], "od98": 86, "off": [3, 4, 8, 10, 67, 68, 69], "often": [82, 84, 86], "old": [5, 54, 67, 68, 69], "old_id": 54, "oliveira": 86, "om": 91, "omake_printdir": 10, "omega": [12, 13, 14, 15, 16, 17, 18, 19, 81, 82, 84, 87, 88, 91], "omega_d": 84, "omega_i": 82, "omega_x": 82, "omega_z": 82, "omit": [8, 9, 10, 11, 84, 86], "onc": [8, 9, 10, 11, 22, 23, 80, 84, 86, 87, 88], "one": [4, 8, 9, 10, 11, 66, 79, 81, 83, 84, 86, 87, 88, 94, 107, 109], "ones": [54, 91, 101], "ones_lik": 91, "onetran": 84, "onli": [3, 4, 5, 11, 22, 24, 50, 53, 58, 59, 60, 61, 64, 65, 67, 68, 69, 78, 81, 82, 84, 86, 87, 88, 97], "only_scalar_flux": [67, 68, 69, 94], "op": [35, 92], "op_typ": 34, "open": [4, 6, 8, 9, 10, 11, 109], "openmc": [79, 93, 108, 109], "openmpi": [8, 9], "opensn": [0, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 83, 84, 85, 86, 87, 88, 92, 94, 106, 109, 110], "opensnlua": 2, "oper": [2, 34, 60, 82, 86], "oppos": 59, "opt": 23, "optic": 86, "optim": [3, 88], "option": [4, 8, 9, 10, 64, 66, 67, 68, 69, 84, 91], "order": [0, 11, 47, 79, 81, 82, 83, 84, 86, 87, 88], "ordin": [67, 68, 84, 86, 88, 90], "org": [8, 84, 86, 109], "organ": 3, "orient": 84, "origin": [4, 86, 92, 94, 99], "ortho": 52, "ortho_2d_kba": 99, "ortho_2d_parmeti": 99, "ortho_3d_blockid": 101, "ortho_3d_kba": 100, "ortho_3d_parmeti": 100, "orthogon": [53, 56, 88, 93, 96, 97], "orthogonalmeshgener": [94, 99, 100, 101], "other": [0, 4, 8, 9, 10, 11, 48, 58, 83, 84, 86, 88, 94, 109], "otherwis": [4, 19, 22, 53, 54, 67, 68, 69, 84, 101], "our": [2, 4, 88, 94, 101], "ourenumtyp": 0, "out": 81, "outcom": [6, 85], "outer": [86, 91], "outermost": 88, "outflow": 84, "outgo": [81, 82, 88], "output": [10, 11, 26, 54, 87], "outsid": [2, 10, 11, 35, 36, 37, 38, 39, 40, 54], "outward": 82, "over": [0, 5, 66, 81, 82, 84, 86, 87], "overlai": 52, "overwrit": 23, "own": [2, 10, 11, 82, 84, 88, 109], "p": [4, 10, 11, 43, 44, 46, 82, 83, 84, 86, 88, 92], "p_": 82, "p_p": 82, "pa": 84, "packag": [2, 3, 8, 9, 10, 11], "pad": [67, 68, 69], "page": [0, 6, 84], "pai": 11, "pair": 84, "paper": 86, "paragraph": [3, 4], "parallel": [3, 6, 38, 48, 49, 50, 56, 58, 85, 86, 94, 97], "parallelpip": 54, "param": 0, "paramet": [1, 3, 14, 15, 16, 17, 19, 23, 24, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 94], "parameterblock": 80, "parent": 2, "parenthes": 0, "parmeti": [5, 8, 10, 48, 49, 50, 56, 57, 58, 97, 98, 101, 102, 103, 104, 105], "pars": 2, "parse_t": 2, "parser": [8, 9, 10, 11], "parson": 84, "part": [0, 2, 35, 48, 58], "parti": [0, 8], "partial": [81, 82, 84, 86, 87], "partial_": 82, "partial_i": 82, "partial_r": 82, "partial_x": 82, "partial_z": 82, "particip": 4, "particl": [6, 67, 82, 84, 85, 86, 88], "particular": [10, 11], "partit": [5, 6, 48, 49, 50, 52, 53, 56, 57, 58, 85, 93, 94], "partition": [48, 49, 50, 51, 52, 53, 56, 57, 58, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105], "pascal": 0, "pass": [3, 65, 88, 94, 99, 100, 102, 103, 104, 105], "patch": [4, 91], "path": [8, 9, 10, 11, 50, 58, 67, 68, 69, 86, 91, 92, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "pattern": [83, 92], "patton": 86, "pau02": 88, "pautz": [84, 88], "pcm": 5, "penalti": 86, "pentagon": 84, "per": [4, 46, 54, 56, 67, 68, 69, 84, 91, 94, 99, 100], "per_column_size_scalar": 64, "per_column_size_vector": 64, "perform": [4, 6, 59, 60, 81, 82, 83, 86, 88, 91, 92], "period": 71, "person": 4, "peter": 88, "petsc": [0, 9, 11, 21, 57, 97], "petsc_dir": [8, 10], "petsc_gmr": 94, "petsc_root": 10, "petscgraphpartition": [48, 49, 50, 56, 58, 98, 99, 100, 101, 102, 103, 104, 105], "ph96": 86, "phase": [6, 82, 85, 88], "phd": 84, "phi": [81, 82, 84, 86, 87], "phi_": [82, 83, 84, 86, 87], "phi_gxxx_myyi": [67, 68, 69], "phy": 94, "physic": [83, 84, 86, 88, 94], "pi": [81, 82, 83, 84, 86, 91, 92], "pic": [8, 10], "pick": [4, 91], "piec": 84, "piecewis": [19, 84], "pii": [84, 86], "pile": 5, "pip": [3, 8, 9, 94], "pip3": [8, 9, 10, 11], "pipe": 38, "pipelin": 88, "place": [10, 11], "plai": [83, 86], "plain": [106, 110], "planar": [84, 92], "plane": [88, 99, 100], "platform": 6, "pleas": 84, "plot": 3, "plot3d": 91, "plot_sldfe_quadratur": 92, "plot_surfac": 91, "plotter": 92, "plt": 91, "plug": 1, "pm": [81, 87], "pn": 88, "point": [3, 4, 10, 32, 35, 36, 37, 38, 39, 40, 43, 44, 46, 47, 60, 61, 65, 67, 68, 69, 71, 77, 82, 84, 91, 92, 101], "point_sourc": [67, 68, 69], "pointer": 2, "pointsourc": [67, 68, 69], "pointwis": [67, 68, 69, 86], "polar": [12, 13, 14, 15, 16, 17, 18, 19, 47, 82, 84, 90, 91, 94], "polar_level": 91, "pole": 84, "polygon": [59, 84, 86], "polyhedr": [6, 84], "polyhedra": 84, "polyhedron": 84, "polynomi": [47, 82], "popul": 71, "portion": [8, 9, 87], "posit": [82, 84], "possibl": [4, 84, 88, 90], "possibli": [4, 83, 86], "post": [2, 3, 6, 83, 87], "post_execut": [22, 91, 92, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "postprocessor": [60, 61, 63, 65], "potenti": 88, "power": [67, 68, 69, 72, 73, 74, 83, 85], "power_default_kappa": [67, 68, 69], "power_field_function_on": [67, 68, 69], "power_norm": [67, 68, 69], "poweriterationkeigensolv": [72, 73], "pp_list": 63, "pquad": [91, 94], "precis": 84, "precondit": [6, 86], "precursor": [67, 68, 69, 79, 82], "prefer": [0, 10], "prefix": [0, 8, 9, 10, 11, 58, 67, 68, 69], "prefix_phi_gxxx_myyi": [67, 68, 69], "preprocessor": 0, "prerequisit": 10, "presenc": 84, "present": [78, 81, 83, 84, 86, 87], "pretti": 53, "prevent": [8, 9, 10, 11], "previou": [71, 86, 88, 98, 100, 101], "previous": [81, 83], "principl": 81, "prinja": 86, "print": [3, 19, 58, 60, 61, 64, 65, 91, 92, 94, 106, 107, 110, 111], "print_numeric_format": [60, 61, 65], "print_on": [60, 61, 65], "print_precis": [60, 61, 65], "print_scalar_time_histori": 64, "print_vector_time_histori": 64, "printer": [60, 61, 64, 65], "printquadraturetofil": [19, 92], "privat": 0, "privileg": [8, 9], "problem": [4, 6, 66, 67, 68, 69, 81, 82, 84, 86, 88], "proc": [84, 88], "proce": 86, "procedur": 86, "proceed": [84, 86, 88], "process": [2, 3, 6, 8, 9, 10, 11, 22, 48, 49, 50, 56, 58, 83, 85, 87, 88, 98, 99, 100, 101, 102, 103, 104, 105], "processor": [3, 6, 60, 61, 62, 63, 64, 65, 88, 94, 98], "produc": [53, 84, 88], "product": [14, 15, 16, 17, 18, 45, 79, 81, 82, 83, 84, 86, 89, 90, 93, 94], "profoundli": 88, "program": [3, 20, 60, 61, 65], "programexecut": [60, 61, 64, 65], "progress": 86, "proj3d": 91, "proj_transform": 91, "project": [10, 91], "promin": 6, "prompt": [8, 79, 82], "pronounc": 84, "proper": 84, "properli": 22, "properti": [2, 12, 13, 14, 15, 16, 17, 18, 19, 45, 54, 79, 86, 97, 106, 107, 110, 111], "protect": [0, 86], "prototyp": 88, "provabl": 88, "provid": [2, 3, 8, 9, 10, 11, 58, 78, 86, 94, 97], "psi": [81, 82, 84, 86, 87, 88], "psi_": [81, 82], "psi_d": 84, "psi_g": 86, "pt": 101, "ptscotch": [8, 9, 10, 57], "pub": 8, "public": [0, 2], "public_member_var": 0, "publish": 82, "pull": 1, "pure": 1, "purpos": [10, 11, 84], "push": 4, "put": 3, "pvtu": [50, 54], "pwd": [8, 10], "pwl": 84, "pwld": [67, 68, 69], "py": [3, 9, 11, 91, 92, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "py_aquad": 3, "pybind11": 3, "pyopensn": [3, 8, 9, 10, 11, 91, 92, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "pyplot": 91, "python": [1, 4, 6, 22, 23, 35, 42, 43, 44, 46, 49, 91, 92, 94, 98, 99, 100, 101, 102, 103, 104, 105], "python3": [8, 9, 11], "q": [81, 84, 86], "q_": [81, 82, 86], "q_d": 84, "q_g": 86, "qoi": 81, "qquad": [81, 82, 84], "quad": 82, "quadrangl": 92, "quadrant": [84, 94], "quadrat": 84, "quadratur": [2, 3, 6, 12, 13, 14, 15, 16, 17, 18, 19, 82, 84, 88, 93], "quadrilater": [19, 84], "quantiti": [81, 82, 87, 88], "queri": 88, "quest": 88, "quick": 6, "quit": [4, 86], "r": [3, 19, 37, 39, 81, 82, 84, 86, 87, 88, 91], "radian": 19, "radiat": [5, 6, 82, 84, 86], "radiu": [37, 39, 86], "rag15": 84, "ragusa": [84, 86, 88], "rai": [6, 84, 86], "ran": 5, "randal": 88, "rang": [6, 82, 86, 87, 91, 94, 99, 100, 101], "rangl": 81, "rangle_": 81, "rank": [6, 48, 53, 58, 94, 102, 103, 104, 105], "rapidli": [67, 68, 69], "rate": [6, 81, 82, 85], "rather": [4, 81, 86], "ratio": [79, 86], "rauchwerg": 88, "raviart": 84, "raw": 0, "raymond": 88, "rcc": 37, "re": [8, 9, 82, 88], "reach": [64, 84], "reaction": [6, 81, 83, 85], "reactor": [5, 71, 82, 84, 88], "read": [48, 49, 50, 56, 58, 66, 67, 68, 69, 93, 96, 107, 108, 109], "read_3d_gmsh": 103, "read_3d_vtu": [104, 105], "read_onli": 58, "read_restart_path": [67, 68, 69], "readangularflux": [67, 68, 69], "reader": 88, "readfluxmo": [67, 68, 69], "readfluxmomentsandmakesourcemo": [67, 68, 69], "readi": 88, "readlin": [8, 10], "readsourcemo": [67, 68, 69], "real": 82, "realiz": 86, "realli": [50, 65], "rebas": 4, "recal": 94, "recast": 86, "recent": [8, 9], "recogn": 81, "recommend": [3, 4, 8, 9, 10, 11, 88, 97], "reconfigur": [10, 11], "recreat": 58, "rectangular": [38, 84, 88], "red": 83, "redefin": [8, 9, 10, 11], "redistribut": [84, 85], "reduc": 83, "ree71": 86, "reed": [84, 86], "ref": [8, 84], "ref_dir": 19, "refer": [1, 4, 8, 9, 10, 11, 19, 85], "referenc": [42, 43, 44, 46], "refin": [6, 19, 84, 86, 90, 92], "reflect": 10, "region": [86, 87], "regist": [22, 91, 92, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "regular": [88, 99, 100], "rel": [27, 28, 83, 86], "relat": [2, 3, 68], "releas": [8, 10, 67, 68, 69], "relev": [4, 65], "remaind": 84, "remedi": [84, 86], "remot": 4, "remov": [4, 80, 92], "render": 91, "repeat": [10, 11, 88], "rephras": 65, "replac": [10, 82, 86], "replicated_mesh": [48, 49, 50, 56, 58], "repo": 4, "report": [24, 58, 84], "repositori": [2, 4, 8, 9, 10, 11], "repres": [2, 5, 35, 49, 81, 82, 84, 88], "request": 1, "requir": [3, 8, 9, 10, 11, 52, 60, 65, 80, 81, 83, 86, 88, 91, 92, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "research": 6, "reserv": 81, "residu": 86, "residual_toler": [27, 28], "resolut": 94, "resolv": [4, 86], "respect": [84, 94], "respons": [3, 6, 48, 81, 88], "restart": [67, 68, 69], "restart_writes_en": [67, 68, 69], "restrict": [53, 84], "result": [5, 6, 8, 9, 10, 11, 67, 68, 69, 84, 86, 94, 98, 99, 100, 101, 102, 103, 104], "retrain": 82, "retriev": 65, "return": [0, 3, 32, 33, 34, 42, 43, 44, 46, 54, 67, 68, 69, 70, 72, 73, 74, 91, 101], "reus": 4, "revers": 81, "review": [4, 82, 86], "rh73": 84, "rhbl73": 84, "rho": 71, "richard": 84, "right": [4, 37, 54, 81, 82, 84, 86], "rise": 86, "rm": 4, "road": 4, "robert": 88, "robust": 6, "roi": 87, "role": [83, 86], "root": 4, "routin": 92, "rpp": 38, "rr": 87, "rule": [0, 6, 82, 84], "run": [4, 91, 92, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "run_test": [10, 11], "runner": 23, "runtim": [22, 24], "russel": 82, "rz": [14, 84], "s0021999114004100": 86, "s0021999114006494": 84, "s_": 82, "s_f": [83, 86], "s_n": [81, 84, 86, 88], "sa03": 84, "saa03": 86, "saad": 86, "safe": 22, "sai": 2, "said": 84, "sake": 86, "same": [3, 8, 9, 10, 11, 33, 64, 94, 99, 100], "samuel": 82, "sanchez": [82, 84], "saratoga": 88, "sartori": 82, "satisfi": [82, 86], "save": 4, "save_angular_flux": [67, 68, 69], "sca_ord": [106, 107, 110, 111], "scalar": [42, 43, 44, 45, 64, 86, 94], "scalar_pp_table_format": 64, "scalarmaterialfunct": 34, "scalarspatialmaterialfunct": [27, 28, 29], "scale": [6, 48, 49, 50, 56, 58, 79, 88], "scaling_factor": 79, "scatter": [67, 68, 69, 79, 81, 82, 83, 84, 86], "scattering_ord": [67, 68, 69, 79, 106, 107, 110, 111], "scdsa": 72, "scenario": 6, "schedul": 85, "scheme": [84, 86], "schultz": 86, "scienc": [82, 84, 86, 88], "sciencedirect": [84, 86], "scientif": [60, 61, 65, 84, 86], "scotch": 97, "script": [0, 2, 8, 9, 10, 11, 22, 91, 92, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "seamless": 3, "seamlessli": 6, "second": [2, 67, 68, 69, 84, 86, 92, 94], "section": [2, 3, 6, 67, 68, 69, 79, 81, 82, 84, 85, 87, 93], "see": [2, 4, 8, 9, 10, 11, 84, 94, 98], "seed": 84, "select": [8, 9, 10, 11, 54, 67, 68, 69, 90], "self": [2, 14, 15, 16, 17, 19, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 91], "send": 1, "sensit": 81, "separ": [0, 8, 9, 88], "seper": 64, "sequenc": [63, 84], "seri": 4, "serial": 48, "set": [0, 2, 3, 4, 6, 8, 9, 10, 23, 24, 25, 32, 34, 48, 49, 50, 54, 56, 58, 60, 61, 64, 65, 66, 67, 68, 69, 71, 84, 86, 90, 91, 92, 101], "set1": 111, "set_posit": 91, "setblockidfromfunct": [54, 101], "setblockidfromlogicalvolum": 54, "setblockparam": 2, "setboundaryidfromlogicalvolum": 54, "setbufferopt": 66, "setdcoeffunct": [27, 28, 29], "setfinalpoint": 32, "setinitialpoint": 32, "setlogicalvolum": 34, "setmemb": 0, "setnumberofpoint": 32, "setoperationfunct": 34, "setoperationtyp": 34, "setopt": [27, 28, 29, 66, 67, 68, 69], "setorthogonalboundari": 54, "setqextfunct": [27, 28, 29], "setrho": 71, "setscalingfactor": 79, "setsigmaafunct": [27, 28, 29], "setsourceopt": 66, "setuniformblockid": [54, 94, 99, 100, 101], "setup": [3, 101], "sever": [2, 3, 84, 86, 90, 101], "sha1": 4, "shape": 86, "share": [0, 2, 8, 9, 10, 11, 88, 94], "shared_ptr": [2, 3], "shawn": [84, 88], "shell": [8, 9], "shield": 86, "short": [3, 4, 85], "should": [0, 2, 3, 4, 8, 9, 10, 11, 66, 81, 83, 86, 92], "show": [2, 11, 64, 88, 91], "shown": [88, 94, 98, 99, 100, 101, 102, 103, 104, 105], "si": 86, "siam": 86, "side": [84, 94, 99], "siga": [106, 107, 110, 111], "sigma": [81, 82, 83, 84, 86, 87], "sigma_": [81, 82, 83, 84, 86, 107], "sigma_0": 86, "sigma_a": [79, 106, 107, 110, 111], "sigma_a_begin": 79, "sigma_a_end": 79, "sigma_f": [79, 82, 83], "sigma_t": [79, 81, 82, 83, 84, 94, 106, 107, 110, 111], "sigma_t_begin": 79, "sigma_t_end": 79, "sign": 81, "signific": [86, 88], "sigt": [106, 107, 110, 111], "simeq": 84, "similar": [10, 11, 81, 84, 86, 88, 100, 101], "simpl": [6, 67, 68, 69, 88, 94, 99, 100], "simpli": [0, 8, 9, 86, 87, 91, 92, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "simplifi": [89, 93], "simplifiedldfesq": 19, "simul": [6, 85, 94, 97], "simultan": 88, "sin": [19, 82, 91, 92], "sinc": [4, 94], "singl": [0, 53, 84, 86, 88, 94], "single_file_flag": [67, 68, 69], "site": [8, 9, 10, 11], "situat": [83, 84], "six": 82, "size": [19, 64, 67, 68, 69, 91, 94], "slab": [17, 86], "sldfe_data": 92, "sldfe_data1": 92, "sldfe_data2": 92, "sldfesquadratur": 92, "slice": 5, "slightli": [8, 9], "slow": 86, "slowest": 86, "slowli": 86, "sm82": 82, "small": [4, 84, 86], "smaller": [84, 86], "smallest": 84, "smb78": 84, "smith": 88, "smjbj77": 84, "smm": 73, "sn": [4, 8, 9, 10, 11, 81, 85, 86], "snake": 0, "snapshot": 8, "so": [2, 4, 8, 9, 82, 83, 84, 86, 88, 91, 92, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "societi": 88, "softwar": [10, 11, 109], "soi": 87, "solut": [5, 6, 23, 66, 71, 81, 84, 85, 87, 88], "solv": [6, 83, 84, 85, 86, 87, 88], "solver": [2, 3, 6, 27, 28, 29, 60, 61, 65, 66, 85, 88, 93], "solver_nam": [67, 68, 69], "solveradvanc": [60, 61, 64, 65], "solverexecut": [60, 61, 64, 65], "solveriniti": [60, 61, 64, 65], "solvername_filt": [60, 61, 65], "some": [4, 5, 8, 9, 10, 83, 84, 86], "some_directori": 0, "some_other_directori": 0, "somememberfunct": 0, "someon": 4, "somewher": 4, "son": 82, "sonoma": 11, "soon": 84, "sourc": [3, 4, 5, 6, 10, 11, 66, 67, 68, 69, 81, 82, 84, 85, 97, 109], "space": [0, 6, 82, 85, 87, 88, 99, 100, 101], "span": 0, "spars": [83, 86], "sparsiti": 83, "spatial": [6, 43, 44, 46, 67, 68, 69, 81, 82, 85, 86, 87, 88, 94, 99, 100, 101], "spatial_discret": [67, 68, 69], "specif": [27, 28, 29, 66, 67, 68, 69, 88], "specifi": [8, 9, 49, 54, 60, 61, 65, 66, 67, 68, 69, 79, 88, 99, 100, 101], "spectral": 86, "spectrum": [79, 83, 86], "sphere": [5, 37, 39, 54, 82, 84, 91, 92], "spheric": [19, 39, 47, 48, 50, 56, 82, 84, 92], "sphinx": [8, 9, 11, 23], "sphinx_rtd_them": [8, 9, 10, 11], "split": [19, 58, 84, 86, 94, 97], "split_mesh": 58, "split_mesh_dir_path": 58, "spread": [92, 94], "spring": [5, 88], "springer": 82, "sq": 19, "sqrt": [82, 91, 92], "squar": [84, 94, 99], "squash": 1, "sr11": 84, "src": 23, "ss86": 86, "ss_solver": 94, "ssh": 4, "ssl": [8, 10], "stabl": 109, "stage": [4, 86, 87, 88], "stai": 4, "standard": [1, 6, 22, 81, 83, 84, 86, 101], "star": 5, "start": [4, 20, 24, 86, 88, 91, 94, 98], "startup": [8, 9, 10, 11], "state": [6, 68, 76, 81, 82, 84, 86], "statement": [0, 81, 82, 83], "static": [2, 31, 32, 33, 34], "statist": 86, "statu": 4, "std": [0, 2, 3, 8], "steadi": [6, 68, 76, 81, 82, 84], "steadystatesolv": 94, "stem": [67, 68, 69, 82], "step": [3, 27, 28, 29, 48, 49, 50, 55, 56, 58, 70, 71, 72, 73, 74, 75, 76, 86, 87], "stone": 84, "store": [50, 67, 68, 69, 84], "str": [3, 19, 23, 24, 31, 32, 33, 34, 49, 50, 54, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 79], "straightforwardli": 86, "strategi": 86, "stream": [81, 85, 86], "strength": [77, 78, 94], "string": [0, 3], "strongli": [8, 9, 10, 11], "structur": [5, 45, 83, 84, 86, 88], "style": [0, 4, 5, 8, 9, 10, 11], "stylua": 4, "subcrit": 82, "subdivid": 84, "subdivis": [19, 94], "subdomain": [94, 99, 100, 102, 103, 104, 105], "submodul": [3, 8, 9, 10, 11], "subset": 87, "subtract": 83, "success": [10, 11, 84, 86], "successfulli": 10, "succinct": 82, "sudo": [8, 9], "sueli": 86, "suitabl": [10, 11], "sum": [34, 83, 84], "sum_": [81, 82, 83, 84, 86, 87], "sum_func": 34, "sum_g": 81, "sum_i": 82, "summari": [83, 85], "summat": 84, "super": 91, "supercomput": [6, 88], "superlu_dist": [8, 10], "superscript": [84, 86], "suppli": [67, 68, 69, 81, 82, 83, 84, 86, 92, 94, 97, 109], "support": [6, 8, 9, 10, 11, 67, 68, 69, 88, 97], "suppos": 81, "sure": [4, 94], "surfac": [40, 59, 84, 87, 91], "surface_mesh": 40, "surfacemesh": 40, "swap": 88, "sweep": [6, 67, 68, 69, 84, 85, 86, 90], "swept": 88, "switch": 4, "sy": [23, 91, 92, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "symbol": 10, "symmetr": [67, 84], "symmetri": 82, "syntax": 2, "synthet": [6, 86], "sys_argv": 23, "system": [0, 6, 8, 9, 48, 50, 56, 84, 85, 86], "t": [0, 8, 9, 81, 82, 83, 84, 87, 88], "t_": 84, "t_c": 84, "t_f": 84, "t_j": 84, "tabl": [2, 64, 67, 68, 69], "table_column_limit": 64, "tackl": 6, "tag": 8, "take": [4, 59, 82, 83, 84], "taken": 84, "tar": 8, "target": [3, 65], "target_block": 101, "task": [8, 9, 10, 11, 84, 88], "tau": 81, "tdg": 84, "teach": 2, "team": 3, "technic": 84, "techniqu": [5, 6, 84, 86, 88], "tell": 88, "temperatur": 79, "tempor": 81, "temporari": [23, 80], "tensor": [84, 86], "tera": 88, "teresa": [84, 88], "term": [81, 83, 84, 85, 86], "termin": [3, 22, 91, 92, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "tesser": 47, "test": [53, 84, 102, 104, 105, 111], "tetrahedr": 84, "tetrahedra": 84, "tetrahedron": 84, "texa": 84, "text": [4, 81, 82, 83, 84, 86, 87, 94, 106, 109, 110], "textbook": 82, "texttt": 86, "tg": 86, "th": [67, 68, 69, 84, 86], "than": [4, 5, 67, 68, 69, 81, 83, 86], "thei": [4, 81, 84, 88], "them": [10, 66], "theori": [6, 82, 84, 86], "therefor": [4, 8, 9, 10, 11, 84, 86], "thermal": 85, "thesi": 84, "theta": [19, 47, 82, 92], "thi": [0, 2, 3, 4, 5, 8, 9, 10, 11, 22, 23, 24, 32, 33, 34, 48, 49, 50, 52, 53, 56, 58, 59, 65, 66, 67, 68, 69, 78, 80, 81, 82, 83, 84, 86, 87, 88, 91, 92, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "thick": [84, 86], "thing": 4, "think": 4, "third": 8, "this_is_snake_styl": 0, "thisisaclassnam": 0, "thisisastructnam": 0, "thisispascalstyl": 0, "thor": 4, "those": [4, 10, 84, 88], "though": 4, "thought": 84, "thread": [3, 4], "three": [84, 87, 88], "through": [3, 84, 88, 92, 97, 99, 100], "throughout": [8, 9, 10, 11, 60, 61, 65], "thu": [3, 86, 94, 99], "time": [4, 8, 9, 27, 28, 29, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 87, 91, 94, 99], "time_history_limit": 64, "timestamp": 3, "timmi": 88, "tip": 4, "titl": 6, "tj": 84, "todai": 5, "todd": [84, 86], "togeth": [2, 88], "toggl": [67, 68, 69], "tol": 86, "told": 4, "toler": [27, 28, 67, 68, 69, 86, 94], "took": 5, "tool": 92, "top": [4, 8, 9, 49], "top_boundary_nam": 49, "topic": [4, 84, 86], "total": [4, 79, 82, 83, 84, 87, 91, 94], "tr": 84, "tr14": 86, "trace": 86, "track": 4, "tradit": [6, 84], "trail": 0, "transact": 88, "transfer": [79, 81, 83, 86], "transfer_moments_begin": 79, "transfer_moments_end": 79, "transform": 59, "transient": [68, 71], "translat": 59, "transpar": 91, "transport": [5, 6, 67, 81, 84, 85, 86, 87, 88, 94], "transport_keigen": [102, 111], "transpos": 81, "travers": 84, "treatment": [6, 85], "tree": [4, 10, 11], "tri_2mat_bc_1542": 98, "triangl": [59, 84, 104], "triangular": [59, 84, 86, 90, 104], "trident": 84, "triplet": [84, 101], "true": [19, 24, 26, 35, 38, 54, 61, 64, 67, 68, 69, 86, 92], "try": 4, "tupl": 77, "turcksin": 86, "turn": [3, 67, 68, 69], "tutori": [6, 94, 98, 100, 101], "tutt": 86, "tweak": [8, 9], "two": [3, 8, 9, 10, 11, 35, 84, 86, 91, 100, 101], "two_spheres_smal": 103, "txt": 11, "type": [0, 2, 34, 53, 54, 57, 65, 67, 68, 69, 81, 82, 86, 87, 88, 91, 92, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "typic": [2, 4, 6, 10, 82, 86], "u": [4, 84, 86, 88, 91], "ubuntu": [8, 9], "ulf": 88, "unchang": 101, "unclear": 65, "uncollid": [6, 84, 85], "uncom": 91, "unconverg": 86, "underbrac": 83, "underli": 84, "underscor": [0, 4], "understood": 84, "uniform": [19, 48, 49, 50, 56, 58, 84, 92, 94, 101], "union": 84, "uniqu": [4, 91], "unit": [0, 10, 11, 54, 82, 84], "uniti": [82, 84], "univers": 84, "unknown": 84, "unless": [2, 3], "unlik": [8, 9, 10, 11], "unpack": [10, 11], "unset": [67, 68, 69], "unstag": 4, "unstructur": [53, 84, 86, 88, 102, 103, 104], "until": [4, 84, 86, 88], "uo2": 111, "up": [4, 6], "updat": [1, 5, 27, 28, 29, 60, 61, 65, 82, 86], "updatefieldfunct": [27, 28, 29], "upon": [84, 86], "upper": 0, "upscatt": [84, 85], "upstream": [4, 88], "upwind": [84, 88], "ur": [84, 88], "url": [82, 84, 86], "us": [0, 2, 3, 4, 5, 8, 9, 10, 11, 19, 23, 24, 27, 28, 48, 49, 50, 54, 56, 58, 60, 61, 65, 66, 67, 68, 69, 78, 81, 82, 83, 84, 86, 87, 88, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 109], "usa": 84, "use_precursor": [67, 68, 69], "use_source_mo": [67, 68, 69], "usecolor": [91, 92, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "user": [8, 9, 10, 11, 22, 66, 81, 82, 83, 84, 86, 92, 94, 97, 99, 100, 109], "usernam": [4, 8, 9, 10, 11], "usr": 10, "usual": 82, "util": [3, 6, 11, 66, 68, 97], "v": [82, 84, 91], "v1": 84, "v2": 8, "v3": [8, 9], "v5": [8, 9], "v_g": 81, "vacuum": [67, 68, 69, 81, 82, 94], "val": [0, 42], "valu": [0, 2, 27, 28, 29, 42, 54, 56, 60, 61, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 86, 88, 91, 94, 99, 100, 101], "value1": 2, "value2": 2, "value3": 2, "varepsilon": 86, "vari": [0, 67, 68, 69], "variabl": [0, 1, 3, 6, 8, 9, 10, 11, 22, 86, 91, 92], "variant": [84, 86], "variat": 86, "varieti": 6, "variou": [6, 65, 84, 94], "varphi": [47, 82, 84], "varrho": 86, "vartheta": [83, 86], "vec": [19, 81, 82, 84, 87, 88, 92], "vec3_omega": 91, "vector": [12, 13, 14, 15, 16, 17, 18, 19, 23, 37, 43, 45, 46, 64, 77, 82, 83, 92], "vector3": [2, 19, 32, 35, 36, 37, 38, 39, 40, 43, 44, 46, 54, 59, 92], "vectorspatialfunct": 78, "veloc": [79, 82], "verbos": [14, 15, 17, 25, 58, 67, 68, 69], "verbose_ags_iter": [67, 68, 69], "verbose_inner_iter": [67, 68, 69], "verbose_outer_iter": [67, 68, 69], "verbosity_level": 58, "veri": [5, 86, 88, 100, 101], "verifi": 10, "vermaak": 88, "versatil": 6, "version": [8, 9, 10, 11, 64, 83], "vertex": 84, "vertic": [64, 84, 101], "via": [10, 11, 104], "view": [5, 8, 9, 10, 11], "view_init": 91, "visibl": 5, "visual": 3, "void": [0, 3], "volum": [2, 3, 6, 34, 35, 36, 37, 38, 39, 40, 54, 61, 78, 81, 84, 86, 88], "volume1": 35, "volume2": 35, "volumetr": [3, 5, 61, 67, 68, 69, 78, 81, 84, 97], "volumetric_sourc": [67, 68, 69, 94], "volumetricsourc": [67, 68, 69, 94], "vram21": 88, "vtk": [10, 31, 94], "vtk_basenam": 94, "vtk_dir": 10, "vtu": [50, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104], "vx": 37, "vy": 37, "vz": 37, "w": [86, 88], "wa": [2, 4, 10, 11, 88, 94, 102, 103], "wai": [3, 4, 49, 88], "wan09": 84, "wang": [84, 86], "want": [4, 8, 9, 10, 11, 81, 83, 94], "war08": 84, "ware": [84, 86], "warranti": [10, 11], "warren": 82, "warsa": [84, 86], "water": 86, "wavefront": [59, 97, 104], "we": [2, 4, 8, 9, 10, 81, 82, 83, 84, 86, 87, 88, 91, 92, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111], "weak": 86, "web": [8, 9, 10, 11], "weight": [12, 13, 14, 15, 16, 17, 18, 19, 84, 86], "well": [6, 83, 86], "went": 4, "were": [4, 8, 9, 11, 88], "wf": 84, "wget": 8, "what": [4, 67, 68, 69, 71, 82], "when": [0, 4, 8, 9, 10, 11, 19, 22, 38, 48, 49, 50, 56, 58, 61, 67, 68, 69, 78, 81, 83, 84, 86, 88, 91, 92, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "where": [0, 4, 43, 44, 46, 67, 68, 69, 81, 82, 83, 84, 86, 88, 92, 94], "wherea": 84, "whether": [58, 64, 65, 67, 68, 69, 101], "which": [2, 4, 53, 54, 60, 61, 64, 65, 67, 68, 69, 82, 83, 84, 88, 94], "while": [3, 81, 86, 88], "whole": 0, "whose": [32, 33, 34, 54, 83, 91, 94], "wide": 6, "wilei": 82, "william": [82, 88], "wise": [77, 84], "wish": 4, "with_kokko": 10, "with_mpi": 10, "within": [5, 8, 9, 10, 11, 22, 78, 84, 85, 101], "without": [83, 84, 86, 88], "wm": [84, 86], "wmmp01": 84, "woodsford": 86, "woodward": 88, "work": [4, 8, 9, 10, 53, 88], "workflow": [1, 6, 66], "worth": 6, "would": [2, 64, 86, 104], "wr09a": 84, "wr09b": 84, "wr10": [84, 86], "wr11": 84, "wrap": 64, "wrapmyclass": 3, "wrapper": [3, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79], "write": [4, 54, 67, 68, 69, 84], "write_delayed_psi_to_restart": [67, 68, 69], "write_restart_path": [67, 68, 69], "write_restart_time_interv": [67, 68, 69], "writeangularflux": [67, 68, 69], "writefluxmo": [67, 68, 69], "written": [0, 6, 58, 67, 68, 69, 82, 84, 86], "wrote": 58, "wwm04": 86, "www": [8, 84, 86], "x": [2, 3, 11, 37, 38, 39, 42, 44, 45, 46, 52, 83, 84, 91, 94, 99, 100, 101, 106, 107, 110, 111], "x0": 37, "xcode": 11, "xcut": [52, 94, 99, 100], "xi": 82, "xi_g": 86, "xmax": [38, 54], "xmin": [38, 54, 94], "xn": [82, 83], "xs3d": 91, "xs_1g": 106, "xs_2g": 110, "xs_map": 94, "xs_mat": [94, 106, 107, 110], "xs_uo2": 111, "xxx": [67, 68, 69], "xy": [15, 88, 94], "xyz": [16, 43, 44, 46, 82, 84], "y": [2, 37, 38, 39, 44, 45, 46, 52, 82, 84, 91, 94, 99, 100, 101], "y0": 37, "y_": [81, 82, 84], "yaqi": [84, 86], "ycut": [52, 94, 99, 100], "year": 6, "yet": [4, 83, 84], "yield": [82, 84, 86, 87], "ymax": [38, 54], "ymin": [38, 54], "york": 82, "you": [2, 4, 8, 9, 10, 11], "youcef": 86, "your": [1, 3, 8, 9, 10, 11], "yourself": 4, "yousef": 86, "ys3d": 91, "yuanhua": 86, "yum": [8, 9], "yyi": [67, 68, 69], "z": [2, 37, 38, 39, 44, 45, 46, 49, 52, 82, 91, 98, 100, 101], "z0": 37, "zcut": [52, 94, 100], "zero": [53, 58, 67, 68, 69, 82, 84, 91], "zeyao": 88, "zl04": 88, "zmax": [38, 49, 54], "zmin": [38, 49, 54], "zs3d": 91, "zxf": 8}, "titles": ["Coding Standards", "Developer\u2019s Guide", "Binding C++ classes to Lua", "Binding C++ classes to Python", "Developer Workflow", "Gallery", "The OpenSn Discrete-Ordinates Code", "Quick Install Guide", "Install on Linux Machines", "Easy Install on Linux Machines", "Install on macOS", "Easy Install on macOS", "pyopensn.aquad.AngularQuadrature", "pyopensn.aquad.CurvilinearQuadrature", "pyopensn.aquad.GLCProductQuadrature2DRZ", "pyopensn.aquad.GLCProductQuadrature2DXY", "pyopensn.aquad.GLCProductQuadrature3DXYZ", "pyopensn.aquad.GLProductQuadrature1DSlab", "pyopensn.aquad.ProductQuadrature", "pyopensn.aquad.SLDFESQuadrature", "pyopensn.context.EnableCaliper", "pyopensn.context.EnablePETScErrorHandler", "pyopensn.context.Finalize", "pyopensn.context.InitializeWithArgv", "pyopensn.context.SetCaliperConfig", "pyopensn.context.SetVerbosityLevel", "pyopensn.context.UseColor", "pyopensn.diffusion.CFEMDiffusionSolver", "pyopensn.diffusion.DFEMDiffusionSolver", "pyopensn.diffusion.DiffusionSolverBase", "pyopensn.fieldfunc.FieldFunction", "pyopensn.fieldfunc.FieldFunctionGridBased", "pyopensn.fieldfunc.FieldFunctionInterpolationLine", "pyopensn.fieldfunc.FieldFunctionInterpolationPoint", "pyopensn.fieldfunc.FieldFunctionInterpolationVolume", "pyopensn.logvol.BooleanLogicalVolume", "pyopensn.logvol.LogicalVolume", "pyopensn.logvol.RCCLogicalVolume", "pyopensn.logvol.RPPLogicalVolume", "pyopensn.logvol.SphereLogicalVolume", "pyopensn.logvol.SurfaceMeshLogicalVolume", "pyopensn.math.Function", "pyopensn.math.ScalarMaterialFunction", "pyopensn.math.ScalarSpatialFunction", "pyopensn.math.ScalarSpatialMaterialFunction", "pyopensn.math.Vector3", "pyopensn.math.VectorSpatialFunction", "pyopensn.math.Ylm", "pyopensn.mesh.DistributedMeshGenerator", "pyopensn.mesh.ExtruderMeshGenerator", "pyopensn.mesh.FromFileMeshGenerator", "pyopensn.mesh.GraphPartitioner", "pyopensn.mesh.KBAGraphPartitioner", "pyopensn.mesh.LinearGraphPartitioner", "pyopensn.mesh.MeshContinuum", "pyopensn.mesh.MeshGenerator", "pyopensn.mesh.OrthogonalMeshGenerator", "pyopensn.mesh.PETScGraphPartitioner", "pyopensn.mesh.SplitFileMeshGenerator", "pyopensn.mesh.SurfaceMesh", "pyopensn.post.AggregateNodalValuePostProcessor", "pyopensn.post.CellVolumeIntegralPostProcessor", "pyopensn.post.PostProcessor", "pyopensn.post.Print", "pyopensn.post.SetPrinterOptions", "pyopensn.post.SolverInfoPostProcessor", "pyopensn.response.ResponseEvaluator", "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem", "pyopensn.solver.DiscreteOrdinatesProblem", "pyopensn.solver.LBSProblem", "pyopensn.solver.NonLinearKEigenSolver", "pyopensn.solver.PRKSolver", "pyopensn.solver.PowerIterationKEigenSCDSASolver", "pyopensn.solver.PowerIterationKEigenSMMSolver", "pyopensn.solver.PowerIterationKEigenSolver", "pyopensn.solver.Solver", "pyopensn.solver.SteadyStateSolver", "pyopensn.source.PointSource", "pyopensn.source.VolumetricSource", "pyopensn.xs.MultiGroupXS", "Python API", "<span class=\"section-number\">7. </span>Adjoint Flux Formalism", "<span class=\"section-number\">1. </span>Background on the Linear Boltzmann Equation", "<span class=\"section-number\">3. </span>Multigroup Cross-Section Data", "<span class=\"section-number\">2. </span>Phase-space Discretization", "Theory Manual", "<span class=\"section-number\">5. </span>Iterative Solution Algorithms", "<span class=\"section-number\">4. </span>Outcome of a Simulation: Particle Distribution, Reaction Rates, and Leakage Rates", "<span class=\"section-number\">6. </span>Parallel Sweeps", "<span class=\"section-number\">3. </span>Angular Quadrature", "<span class=\"section-number\">3.1. </span>Introduction to Angular Quadratures", "<span class=\"section-number\">3.2. </span>Product Quadrature", "<span class=\"section-number\">3.3. </span>Simplified Linear Discontinuous Finite Element (LDFE) Quadrature", "Tutorials", "<span class=\"section-number\">4.1. </span>A First Example", "<span class=\"section-number\">4. </span>Linear Boltzmann Solver", "<span class=\"section-number\">1. </span>Meshing and Partitioning", "<span class=\"section-number\">1.1. </span>Introduction to Meshing and Partitioning", "<span class=\"section-number\">1.8. </span>Reading a 2D mesh file and extruding it", "<span class=\"section-number\">1.2. </span>2D Orthogonal Grid Generation", "<span class=\"section-number\">1.3. </span>3D Orthogonal Grid Generation", "<span class=\"section-number\">1.9. </span>3D Orthogonal Grid Generation with multiple block IDs", "<span class=\"section-number\">1.4. </span>Reading a 2D gmsh file", "<span class=\"section-number\">1.5. </span>Reading a 3D gmsh file", "<span class=\"section-number\">1.6. </span>Reading a 2D obj file", "<span class=\"section-number\">1.7. </span>Reading a 3D VTU file", "<span class=\"section-number\">2.3. </span>Read ASCII file for 1-group cross sections", "<span class=\"section-number\">2.2. </span>Built-in method for 1-group cross sections", "<span class=\"section-number\">2. </span>Cross Sections", "<span class=\"section-number\">2.1. </span>Introduction to Cross Sections", "<span class=\"section-number\">2.4. </span>Read ASCII file for multi-group cross sections", "<span class=\"section-number\">2.5. </span>Read HDF5 file from OpenMC to load multi-group cross sections"], "titleterms": {"": 1, "1": [5, 8, 9, 10, 11, 92, 106, 107], "10": [8, 10], "2": [5, 8, 9, 10, 11, 92], "2d": [98, 99, 102, 104], "3": [8, 9, 10, 11], "3d": [100, 101, 103, 105], "4": [8, 9, 10, 11], "5": [8, 9, 10, 11], "6": [8, 9, 10, 11], "7": [8, 9, 10, 11], "768": 5, "8": [8, 10], "9": [8, 10], "A": 94, "The": [6, 82], "acceler": 86, "adjoint": 81, "again": [99, 100], "aggreg": 88, "aggregatenodalvaluepostprocessor": 60, "algorithm": 86, "angl": [82, 84, 88], "angular": [80, 89, 90, 94], "angularquadratur": 12, "api": 80, "aquad": [12, 13, 14, 15, 16, 17, 18, 19], "argument": 80, "ascii": [106, 110], "attent": 4, "background": [82, 86], "base": 80, "benchmark": 5, "bind": [2, 3], "block": 101, "boltzmann": [80, 82, 94, 95], "boolean": 0, "booleanlogicalvolum": 35, "boundari": 82, "branch": 4, "build": [8, 9, 10, 11], "built": 107, "c": [0, 2, 3], "c5g7": 5, "calip": [8, 10, 80], "call": [106, 107, 110, 111], "can": [106, 107, 110, 111], "capabl": 5, "cartesian": 82, "cellvolumeintegralpostprocessor": 61, "cfemdiffusionsolv": 27, "cite": 6, "class": [0, 2, 3, 80], "clone": [8, 9, 10, 11], "code": [0, 6], "command": 0, "comment": 0, "commit": 4, "compil": 3, "condit": [0, 82], "configur": [8, 9, 10, 11, 80], "consol": [8, 9, 10, 11], "constant": 0, "content": 6, "context": [20, 21, 22, 23, 24, 25, 26], "convent": 0, "convert": 94, "coordin": 82, "creat": [4, 91], "critic": 5, "cross": [80, 83, 94, 106, 107, 108, 109, 110, 111], "curvilinear": 82, "curvilinearquadratur": 13, "data": [83, 106, 107, 110, 111], "definit": 82, "detail": 2, "develop": [1, 3, 4, 8, 9, 11], "dfemdiffusionsolv": 28, "diffus": [27, 28, 29, 80], "diffusionsolverbas": 29, "direct": [0, 91], "discontinu": 92, "discret": [6, 84], "discreteordinatescurvilinearproblem": 67, "discreteordinatesproblem": 68, "distribut": 87, "distributedmeshgener": 48, "document": [8, 9, 10, 11], "each": 101, "easi": [9, 11], "eigen": 80, "element": 92, "enablecalip": 20, "enablepetscerrorhandl": 21, "energi": 84, "entri": 101, "enum": [0, 2], "environ": [8, 9, 11], "equat": 82, "evalu": 80, "exampl": [92, 94, 101], "expans": 82, "export": [99, 100, 101], "extens": 94, "extrud": 98, "extrudermeshgener": 49, "field": [80, 94], "fieldfunc": [30, 31, 32, 33, 34], "fieldfunct": 30, "fieldfunctiongridbas": 31, "fieldfunctioninterpolationlin": 32, "fieldfunctioninterpolationpoint": 33, "fieldfunctioninterpolationvolum": 34, "file": [0, 98, 102, 103, 104, 105, 106, 110, 111], "final": [22, 91, 92, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "finit": 92, "first": 94, "fix": 4, "flux": [81, 86], "formal": 81, "format": 4, "from": [94, 111], "fromfilemeshgener": 50, "function": [2, 41, 80, 91, 94], "futur": 3, "galleri": 5, "gcc": 10, "gener": [80, 94, 99, 100, 101], "getter": 0, "ggener": 101, "glcproductquadrature2drz": 14, "glcproductquadrature2dxi": 15, "glcproductquadrature3dxyz": 16, "glproductquadrature1dslab": 17, "gmsh": [102, 103], "graph": 80, "graphpartition": 51, "grid": [80, 99, 100, 101], "group": [86, 88, 106, 107, 110, 111], "guid": [1, 7], "harmon": 80, "hdf5": 111, "i": 101, "id": [94, 99, 100, 101], "import": 94, "includ": 0, "initi": 82, "initializewithargv": 23, "ins": 3, "instal": [7, 8, 9, 10, 11], "interfac": [8, 9, 10, 11], "interpol": 80, "introduct": [88, 90, 97, 109], "iter": [80, 86], "j": 101, "jupyt": [91, 92, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "k": [80, 101], "kba": [99, 100], "kbagraphpartition": 52, "kinet": 80, "kit": [8, 10], "krylov": 86, "lb": 94, "lbsproblem": 69, "ldfe": [80, 92], "leakag": 87, "librari": 9, "line": 0, "linear": [80, 82, 92, 94, 95], "lineargraphpartition": 53, "linux": [8, 9], "list": [94, 99, 100, 101], "load": 111, "log": 80, "logic": 80, "logicalvolum": 36, "logvol": [35, 36, 37, 38, 39, 40], "lua": [2, 8, 9, 10, 11], "machin": [8, 9], "maco": [10, 11], "macro": 0, "manual": 85, "materi": [94, 99, 100, 101], "material_id": 101, "math": [41, 42, 43, 44, 45, 46, 47, 80], "member": 2, "mesh": [5, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 80, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105], "meshcontinuum": 54, "meshgener": 55, "method": [84, 86, 107], "more": 2, "mpich": [10, 11], "multi": [110, 111], "multigroup": [83, 86], "multigroupx": 79, "multipl": 101, "name": 0, "namespac": [0, 2, 3], "node": [94, 99, 100, 101], "non": 80, "nonlinearkeigensolv": 70, "notebook": [91, 92, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "number": 0, "obj": 104, "onli": [91, 92, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111], "openmc": 111, "opensn": [6, 8, 9, 10, 11, 82], "oper": 0, "option": 94, "ordin": 6, "orthogon": [94, 99, 100, 101], "orthogonalmeshgener": 56, "outcom": 87, "parallel": 88, "paramet": [0, 2, 91, 92], "parmeti": [99, 100], "parti": 9, "particl": 87, "partit": [88, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105], "partition": 80, "petsc": [8, 10], "petscgraphpartition": 57, "phase": 84, "plot": [91, 92], "plug": 3, "point": 80, "pointer": 0, "pointsourc": 77, "polyhedr": 5, "possibl": 94, "post": [60, 61, 62, 63, 64, 65, 80, 94], "postprocessor": 62, "power": [80, 86], "poweriterationkeigenscdsasolv": 72, "poweriterationkeigensmmsolv": 73, "poweriterationkeigensolv": 74, "print": 63, "printer": 80, "prksolver": 71, "problem": 94, "process": [86, 94], "processor": [5, 80], "product": [80, 91], "productquadratur": 18, "public": 6, "pull": 4, "pure": 3, "put": 94, "pyopensn": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79], "python": [3, 8, 9, 10, 11, 80, 106, 107, 110, 111], "quadratur": [80, 89, 90, 91, 92, 94], "quick": 7, "rate": 87, "rcclogicalvolum": 37, "reaction": 87, "read": [98, 102, 103, 104, 105, 106, 110, 111], "reader": [106, 110, 111], "real": 5, "recommend": 6, "redistribut": 82, "refer": [0, 82, 84, 86, 88], "regress": [8, 9, 10, 11], "request": 4, "requir": 94, "respons": [66, 80], "responseevalu": 66, "result": 92, "retriev": [91, 106, 107, 110, 111], "rpplogicalvolum": 38, "run": [8, 9, 10, 11, 94], "scalarmaterialfunct": 42, "scalarspatialfunct": 43, "scalarspatialmaterialfunct": 44, "schedul": 88, "section": [80, 83, 94, 106, 107, 108, 109, 110, 111], "send": 4, "set": [11, 80, 88], "setcaliperconfig": 24, "setprinteropt": 64, "setter": 0, "setverbositylevel": 25, "short": 82, "simplifi": [80, 92], "simul": [5, 87], "sldfe": 92, "sldfesquadratur": 19, "sn": 84, "solut": 86, "solv": 82, "solver": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 80, 86, 94, 95], "solverinfopostprocessor": 65, "some": [106, 107, 110, 111], "sourc": [77, 78, 80, 86, 94], "space": 84, "spatial": 84, "spherelogicalvolum": 39, "spheric": 80, "splitfilemeshgener": 58, "squash": 4, "standard": 0, "state": 80, "static": 0, "steadi": 80, "steadystatesolv": 76, "step": [8, 9, 10, 11], "stream": 82, "struct": 0, "subspac": 86, "summari": 82, "surfac": 80, "surfacemesh": 59, "surfacemeshlogicalvolum": 40, "sweep": [5, 88], "system": 82, "target": 101, "term": 82, "termin": 94, "test": [8, 9, 10, 11], "theori": 85, "thermal": 86, "thi": 94, "third": 9, "togeth": 94, "tool": [8, 9, 10, 11], "transport": 82, "treatment": 86, "trnasient": 80, "tupl": 101, "tutori": 93, "type": 80, "uncollid": 86, "up": 11, "updat": 4, "upscatt": 86, "us": 94, "usecolor": 26, "variabl": 2, "vector": 80, "vector3": 45, "vectorspatialfunct": 46, "via": 94, "visual": [8, 10, 98, 102, 103, 104, 105], "volum": 80, "volumetr": 94, "volumetricsourc": 78, "vtk": 8, "vtu": 105, "where": 101, "within": 86, "workflow": 4, "world": 5, "wrapper": 80, "x": 79, "ylm": 47, "your": 4}})