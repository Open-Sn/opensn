Search.setIndex({"alltitles": {"1. Capable of sweeps on Polyhedral meshes": [[5, "capable-of-sweeps-on-polyhedral-meshes"]], "2. C5G7 Criticality Benchmark with 768 processors": [[5, "c5g7-criticality-benchmark-with-768-processors"]], "2. Real world simulations": [[5, "real-world-simulations"]], "2D Orthogonal Grid Generation": [[100, null]], "3D Orthogonal Grid Generation": [[101, null]], "3D Orthogonal Grid Generation with multiple block IDs": [[102, null]], "A First Example": [[95, null]], "Acceleration of Power Iterations": [[87, "acceleration-of-power-iterations"]], "Adjoint Flux Formalism": [[82, null]], "Aggregation": [[89, "aggregation"]], "Angle Discretization (the Sn method)": [[85, "angle-discretization-the-sn-method"]], "Angle-sets": [[89, "angle-sets"]], "Angular Quadrature": [[90, null], [95, "Angular-Quadrature"]], "Angular quadrature": [[81, "angular-quadrature"]], "Argument vector": [[81, "argument-vector"]], "Attention": [[4, null], [4, null]], "Background on the Linear Boltzmann Equation": [[83, null]], "Base class": [[81, "base-class"], [81, "id1"], [81, "id3"], [81, "id4"], [81, "id5"]], "Binding C++ classes to Lua": [[2, null]], "Binding C++ classes to Python": [[3, null]], "Boolean operators": [[0, "boolean-operators"]], "Boundary Conditions": [[83, "boundary-conditions"]], "Built-in method for 1-group cross sections": [[108, null]], "C++ conventions": [[0, "c-conventions"]], "Caliper configuration": [[81, "caliper-configuration"]], "Call OpenMC cross-section reader": [[112, "Call-OpenMC-cross-section-reader"]], "Call built-in method": [[108, "Call-built-in-method"]], "Call cross-section reader": [[107, "Call-cross-section-reader"], [111, "Call-cross-section-reader"]], "Classes": [[2, "classes"], [3, "classes"]], "Classes and Structs": [[0, "classes-and-structs"]], "Classes as Parameters": [[2, "classes-as-parameters"]], "Coding Standards": [[0, null]], "Command-line parameters": [[0, "command-line-parameters"]], "Comments": [[0, "comments"]], "Compilation for developers": [[3, "compilation-for-developers"]], "Conditionals": [[0, "conditionals"]], "Contents": [[6, "contents"]], "Converting and Running this Notebook from the Terminal": [[95, "Converting-and-Running-this-Notebook-from-the-Terminal"]], "Create a Branch": [[4, "create-a-branch"]], "Create a Commit": [[4, "create-a-commit"]], "Create a function to plot the quadrature": [[92, "Create-a-function-to-plot-the-quadrature"]], "Cross Sections": [[95, "Cross-Sections"], [109, null]], "Cross section": [[81, "cross-section"]], "Definitions": [[83, "definitions"]], "Developer Workflow": [[4, null]], "Developer\u2019s Guide": [[1, null]], "Diffusion solver": [[81, "diffusion-solver"]], "Easy Install on Linux Machines": [[9, null]], "Easy Install on macOS": [[11, null]], "Energy Discretization": [[85, "energy-discretization"]], "Enums": [[0, "enums"], [2, "enums"]], "Example-1: sLDFE Quadrature parameters": [[93, "Example-1:-sLDFE-Quadrature-parameters"], [93, "id1"]], "Example-2: sLDFE Quadrature parameters": [[93, "Example-2:-sLDFE-Quadrature-parameters"]], "Example: List of target blocks, where each entry is a tuple: ((i, j, k), material_id)": [[102, "Example:-List-of-target-blocks,-where-each-entry-is-a-tuple:-((i,-j,-k),-material_id)"]], "Expansion of the Angle Redistribution Term": [[83, "expansion-of-the-angle-redistribution-term"]], "Export the mesh": [[100, "Export-the-mesh"], [100, "id1"], [101, "Export-the-mesh"], [101, "id1"], [102, "Export-the-mesh"]], "Field functions": [[81, "field-functions"]], "File names": [[0, "file-names"]], "Finalize (for Jupyter Notebook only)": [[92, "Finalize-(for-Jupyter-Notebook-only)"], [93, "Finalize-(for-Jupyter-Notebook-only)"], [95, "Finalize-(for-Jupyter-Notebook-only)"], [99, "Finalize-(for-Jupyter-Notebook-only)"], [100, "Finalize-(for-Jupyter-Notebook-only)"], [101, "Finalize-(for-Jupyter-Notebook-only)"], [102, "Finalize-(for-Jupyter-Notebook-only)"], [103, "Finalize-(for-Jupyter-Notebook-only)"], [104, "Finalize-(for-Jupyter-Notebook-only)"], [105, "Finalize-(for-Jupyter-Notebook-only)"], [106, "Finalize-(for-Jupyter-Notebook-only)"], [107, "Finalize-(for-Jupyter-Notebook-only)"], [108, "Finalize-(for-Jupyter-Notebook-only)"], [111, "Finalize-(for-Jupyter-Notebook-only)"], [112, "Finalize-(for-Jupyter-Notebook-only)"]], "Fixing your branch": [[4, "fixing-your-branch"]], "Formating": [[4, "formating"]], "Function wrappers": [[81, "function-wrappers"]], "Gallery": [[5, null]], "Getters and Setters": [[0, "getters-and-setters"]], "Graph partitioner": [[81, "graph-partitioner"]], "Grid-based": [[81, "grid-based"]], "Group-sets": [[89, "group-sets"]], "Import Requirements": [[95, "Import-Requirements"]], "Include directives": [[0, "include-directives"]], "Initial Conditions": [[83, "initial-conditions"]], "Install on Linux Machines": [[8, null]], "Install on macOS": [[10, null]], "Interpolation": [[81, "interpolation"]], "Introduction": [[89, "introduction"]], "Introduction to Angular Quadratures": [[91, null]], "Introduction to Cross Sections": [[110, null]], "Introduction to Meshing and Partitioning": [[98, null]], "Iterative Solution Algorithms": [[87, null]], "Krylov Subspace Method:": [[87, "krylov-subspace-method"]], "Linear Boltzmann Solver": [[95, "Linear-Boltzmann-Solver"], [96, null]], "Linear Boltzmann solver": [[81, "linear-boltzmann-solver"]], "List of Nodes": [[95, "List-of-Nodes"], [100, "List-of-Nodes"], [101, "List-of-Nodes"]], "List of Nodes, Mesh GGeneration and Partition": [[102, "List-of-Nodes,-Mesh-GGeneration-and-Partition"]], "Logical volume": [[81, "logical-volume"]], "Logical volume types": [[81, "logical-volume-types"]], "Logs": [[81, "logs"]], "Lua interface": [[8, "lua-interface"], [9, "lua-interface"], [10, "lua-interface"], [11, "lua-interface"]], "Macros": [[0, "macros"]], "Material IDs": [[95, "Material-IDs"], [100, "Material-IDs"], [101, "Material-IDs"], [102, "Material-IDs"]], "Math": [[81, "math"]], "Member functions": [[2, "member-functions"]], "Member variables": [[2, "member-variables"]], "Mesh": [[81, "mesh"], [81, "id2"], [95, "Mesh"]], "Mesh (again) and Parmetis partition": [[100, "Mesh-(again)-and-Parmetis-partition"], [101, "Mesh-(again)-and-Parmetis-partition"]], "Mesh and KBA Partition": [[100, "Mesh-and-KBA-Partition"], [101, "Mesh-and-KBA-Partition"]], "Mesh and Partition": [[99, "Mesh-and-Partition"], [103, "Mesh-and-Partition"], [104, "Mesh-and-Partition"], [105, "Mesh-and-Partition"], [106, "Mesh-and-Partition"]], "Mesh generator": [[81, "mesh-generator"]], "Meshing": [[98, "meshing"]], "Meshing and Partitioning": [[97, null]], "More details": [[2, "more-details"]], "Multigroup Cross-Section Data": [[84, null]], "Multigroup Solution Process: Background": [[87, "multigroup-solution-process-background"]], "Namespaces": [[0, "namespaces"], [2, "namespaces"], [3, "namespaces"]], "Naming Conventions": [[0, "naming-conventions"]], "Non-linear k-eigen": [[81, "non-linear-k-eigen"]], "Numbers": [[0, "numbers"]], "Options for the Linear Boltzmann Problem (LBS)": [[95, "Options-for-the-Linear-Boltzmann-Problem-(LBS)"]], "Orthogonal Mesh Generation": [[95, "Orthogonal-Mesh-Generation"]], "Outcome of a Simulation: Particle Distribution, Reaction Rates, and Leakage Rates": [[88, null]], "Parallel Sweeps": [[89, null]], "Partitioning": [[98, "partitioning"]], "Partitioning and Scheduling": [[89, "partitioning-and-scheduling"]], "Phase-space Discretization": [[85, null]], "Plot the resulting quadrature": [[93, "Plot-the-resulting-quadrature"], [93, "id2"]], "Point": [[81, "point"]], "Point kinetic trnasient solver": [[81, "point-kinetic-trnasient-solver"]], "Pointers": [[0, "pointers"]], "Possible Extensions": [[95, "Possible-Extensions"]], "Post-Processing via Field Functions": [[95, "Post-Processing-via-Field-Functions"]], "Post-processor": [[81, "post-processor"]], "Post-processors": [[81, "post-processors"]], "Power Iterations": [[87, "power-iterations"]], "Power iteration solver": [[81, "power-iteration-solver"]], "Printer": [[81, "printer"]], "Product Quadrature": [[92, null]], "Product quadratures": [[81, "product-quadratures"]], "Pure Python plug-ins (future development)": [[3, "pure-python-plug-ins-future-development"]], "Putting the Linear Boltzmann Solver Together": [[95, "Putting-the-Linear-Boltzmann-Solver-Together"]], "Python API": [[81, null]], "Python console/interface": [[8, "python-console-interface"], [9, "python-console-interface"], [10, "python-console-interface"], [11, "python-console-interface"]], "Quadrature parameters": [[92, "Quadrature-parameters"]], "Quick Install Guide": [[7, null]], "Read ASCII file for 1-group cross sections": [[107, null]], "Read ASCII file for multi-group cross sections": [[111, null]], "Read HDF5 file from OpenMC to load multi-group cross sections": [[112, null]], "Reading a 2D gmsh file": [[103, null]], "Reading a 2D mesh file and extruding it": [[99, null]], "Reading a 2D obj file": [[105, null]], "Reading a 3D VTU file": [[106, null]], "Reading a 3D gmsh file": [[104, null]], "Recommended publication for citing": [[6, null]], "References": [[0, "references"], [83, "references"], [85, "references"], [87, "references"], [89, "references"]], "Response evaluator": [[81, "response-evaluator"]], "Retrieve directions": [[92, "Retrieve-directions"]], "Sending a Pull Request": [[4, "sending-a-pull-request"]], "Settings": [[81, "settings"]], "Short summary of Transport Equations Solved in OpenSn": [[83, "short-summary-of-transport-equations-solved-in-opensn"]], "Simplified LDFES quadrature": [[81, "simplified-ldfes-quadrature"]], "Simplified Linear Discontinuous Finite Element (LDFE) Quadrature": [[93, null]], "Solver": [[81, "solver"]], "Some cross-section data can be retrieved in Python": [[107, "Some-cross-section-data-can-be-retrieved-in-Python"], [108, "Some-cross-section-data-can-be-retrieved-in-Python"], [111, "Some-cross-section-data-can-be-retrieved-in-Python"], [112, "Some-cross-section-data-can-be-retrieved-in-Python"]], "Source": [[81, "source"]], "Source Iteration and Krylov Solvers": [[87, "source-iteration-and-krylov-solvers"]], "Source Iteration:": [[87, "source-iteration"]], "Spatial Discretization": [[85, "spatial-discretization"]], "Spherical harmonics": [[81, "spherical-harmonics"]], "Squashing Commits": [[4, "squashing-commits"]], "Static constants": [[0, "static-constants"]], "Steady state solver": [[81, "steady-state-solver"]], "Step 1 - Install Development Tools": [[8, "step-1-install-development-tools"], [9, "step-1-install-development-tools"], [11, "step-1-install-development-tools"]], "Step 1 - Install GCC": [[10, "step-1-install-gcc"]], "Step 10 - Build the OpenSn Documentation": [[8, "step-10-build-the-opensn-documentation"]], "Step 10 - OpenSn Documentation": [[10, "step-10-opensn-documentation"]], "Step 2 - Clone OpenSn": [[9, "step-2-clone-opensn"]], "Step 2 - Install MPICH": [[10, "step-2-install-mpich"], [11, "step-2-install-mpich"]], "Step 2 - Install PETSc": [[8, "step-2-install-petsc"]], "Step 3 - Clone OpenSn": [[11, "step-3-clone-opensn"]], "Step 3 - Install PETSc": [[10, "step-3-install-petsc"]], "Step 3 - Install Third-Party Libraries": [[9, "step-3-install-third-party-libraries"]], "Step 3 - Install the Visualization Tool Kit (VTK)": [[8, "step-3-install-the-visualization-tool-kit-vtk"]], "Step 4 - Configure Environment": [[9, "step-4-configure-environment"]], "Step 4 - Install Lua": [[8, "step-4-install-lua"]], "Step 4 - Install the Visualization Tool Kit": [[10, "step-4-install-the-visualization-tool-kit"]], "Step 4 - Set Up the Environment": [[11, "step-4-set-up-the-environment"]], "Step 5 - Build OpenSn": [[9, "step-5-build-opensn"]], "Step 5 - Configure and Build OpenSn": [[11, "step-5-configure-and-build-opensn"]], "Step 5 - Install Caliper": [[8, "step-5-install-caliper"]], "Step 5 - Install Lua": [[10, "step-5-install-lua"]], "Step 6 - Configure Environment": [[8, "step-6-configure-environment"]], "Step 6 - Install Caliper": [[10, "step-6-install-caliper"]], "Step 6 - Run Regression Tests": [[9, "step-6-run-regression-tests"], [11, "step-6-run-regression-tests"]], "Step 7 - Build the OpenSn Documentation": [[9, "step-7-build-the-opensn-documentation"]], "Step 7 - Clone OpenSn": [[8, "step-7-clone-opensn"], [10, "step-7-clone-opensn"]], "Step 7 - OpenSn Documentation": [[11, "step-7-opensn-documentation"]], "Step 8 - Build OpenSn": [[8, "step-8-build-opensn"]], "Step 8 - Configure and Build OpenSn": [[10, "step-8-configure-and-build-opensn"]], "Step 9 - Run Regression Tests": [[8, "step-9-run-regression-tests"], [10, "step-9-run-regression-tests"]], "Streaming Term in Cartesian and Curvilinear Coordinate Systems": [[83, "streaming-term-in-cartesian-and-curvilinear-coordinate-systems"]], "Surface mesh": [[81, "surface-mesh"]], "The Linear Boltzmann Equation": [[83, "the-linear-boltzmann-equation"]], "The OpenSn Discrete-Ordinates Code": [[6, null]], "Theory Manual": [[86, null]], "Thermal Upscattering Acceleration": [[87, "thermal-upscattering-acceleration"]], "Tutorials": [[94, null]], "Uncollided-flux Treatment": [[87, "uncollided-flux-treatment"]], "Updating Your Branch": [[4, "updating-your-branch"]], "Using this Notebook": [[95, "Using-this-Notebook"]], "Visualization": [[99, "Visualization"], [103, "Visualization"], [104, "Visualization"], [105, "Visualization"], [106, "Visualization"]], "Volumetric Source": [[95, "Volumetric-Source"]], "Within-group Acceleration": [[87, "within-group-acceleration"]], "pyopensn.aquad.AngularQuadrature": [[12, null]], "pyopensn.aquad.CurvilinearQuadrature": [[13, null]], "pyopensn.aquad.GLCProductQuadrature2DRZ": [[14, null]], "pyopensn.aquad.GLCProductQuadrature2DXY": [[15, null]], "pyopensn.aquad.GLCProductQuadrature3DXYZ": [[16, null]], "pyopensn.aquad.GLProductQuadrature1DSlab": [[17, null]], "pyopensn.aquad.ProductQuadrature": [[18, null]], "pyopensn.aquad.SLDFESQuadrature": [[19, null]], "pyopensn.context.EnableCaliper": [[20, null]], "pyopensn.context.EnablePETScErrorHandler": [[21, null]], "pyopensn.context.Finalize": [[22, null]], "pyopensn.context.InitializeWithArgv": [[23, null]], "pyopensn.context.SetCaliperConfig": [[24, null]], "pyopensn.context.SetVerbosityLevel": [[25, null]], "pyopensn.context.UseColor": [[26, null]], "pyopensn.diffusion.CFEMDiffusionSolver": [[27, null]], "pyopensn.diffusion.DFEMDiffusionSolver": [[28, null]], "pyopensn.diffusion.DiffusionSolverBase": [[29, null]], "pyopensn.fieldfunc.FieldFunction": [[30, null]], "pyopensn.fieldfunc.FieldFunctionGridBased": [[31, null]], "pyopensn.fieldfunc.FieldFunctionInterpolationLine": [[32, null]], "pyopensn.fieldfunc.FieldFunctionInterpolationPoint": [[33, null]], "pyopensn.fieldfunc.FieldFunctionInterpolationVolume": [[34, null]], "pyopensn.logvol.BooleanLogicalVolume": [[35, null]], "pyopensn.logvol.LogicalVolume": [[36, null]], "pyopensn.logvol.RCCLogicalVolume": [[37, null]], "pyopensn.logvol.RPPLogicalVolume": [[38, null]], "pyopensn.logvol.SphereLogicalVolume": [[39, null]], "pyopensn.logvol.SurfaceMeshLogicalVolume": [[40, null]], "pyopensn.math.Function": [[41, null]], "pyopensn.math.ScalarMaterialFunction": [[42, null]], "pyopensn.math.ScalarSpatialFunction": [[43, null]], "pyopensn.math.ScalarSpatialMaterialFunction": [[44, null]], "pyopensn.math.Vector3": [[45, null]], "pyopensn.math.VectorSpatialFunction": [[46, null]], "pyopensn.math.Ylm": [[47, null]], "pyopensn.mesh.DistributedMeshGenerator": [[48, null]], "pyopensn.mesh.ExtruderMeshGenerator": [[49, null]], "pyopensn.mesh.FromFileMeshGenerator": [[50, null]], "pyopensn.mesh.GraphPartitioner": [[51, null]], "pyopensn.mesh.KBAGraphPartitioner": [[52, null]], "pyopensn.mesh.LinearGraphPartitioner": [[53, null]], "pyopensn.mesh.MeshContinuum": [[54, null]], "pyopensn.mesh.MeshGenerator": [[55, null]], "pyopensn.mesh.OrthogonalMeshGenerator": [[56, null]], "pyopensn.mesh.PETScGraphPartitioner": [[57, null]], "pyopensn.mesh.SplitFileMeshGenerator": [[58, null]], "pyopensn.mesh.SurfaceMesh": [[59, null]], "pyopensn.post.AggregateNodalValuePostProcessor": [[60, null]], "pyopensn.post.CellVolumeIntegralPostProcessor": [[61, null]], "pyopensn.post.PostProcessor": [[62, null]], "pyopensn.post.Print": [[63, null]], "pyopensn.post.SetPrinterOptions": [[64, null]], "pyopensn.post.SolverInfoPostProcessor": [[65, null]], "pyopensn.response.ResponseEvaluator": [[66, null]], "pyopensn.solver.DiffusionDFEMSolver": [[67, null]], "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem": [[68, null]], "pyopensn.solver.DiscreteOrdinatesProblem": [[69, null]], "pyopensn.solver.LBSProblem": [[70, null]], "pyopensn.solver.NonLinearKEigenSolver": [[71, null]], "pyopensn.solver.PRKSolver": [[72, null]], "pyopensn.solver.PowerIterationKEigenSCDSASolver": [[73, null]], "pyopensn.solver.PowerIterationKEigenSMMSolver": [[74, null]], "pyopensn.solver.PowerIterationKEigenSolver": [[75, null]], "pyopensn.solver.Solver": [[76, null]], "pyopensn.solver.SteadyStateSolver": [[77, null]], "pyopensn.source.PointSource": [[78, null]], "pyopensn.source.VolumetricSource": [[79, null]], "pyopensn.xs.MultiGroupXS": [[80, null]]}, "docnames": ["devguide/coding_standard", "devguide/index", "devguide/lua_bindings", "devguide/py_bindings", "devguide/workflow", "gallery", "index", "install/index", "install/install_linux", "install/install_linux_easy", "install/install_macos", "install/install_macos_easy", "pyapi/generated/pyopensn.aquad.AngularQuadrature", "pyapi/generated/pyopensn.aquad.CurvilinearQuadrature", "pyapi/generated/pyopensn.aquad.GLCProductQuadrature2DRZ", "pyapi/generated/pyopensn.aquad.GLCProductQuadrature2DXY", "pyapi/generated/pyopensn.aquad.GLCProductQuadrature3DXYZ", "pyapi/generated/pyopensn.aquad.GLProductQuadrature1DSlab", "pyapi/generated/pyopensn.aquad.ProductQuadrature", "pyapi/generated/pyopensn.aquad.SLDFESQuadrature", "pyapi/generated/pyopensn.context.EnableCaliper", "pyapi/generated/pyopensn.context.EnablePETScErrorHandler", "pyapi/generated/pyopensn.context.Finalize", "pyapi/generated/pyopensn.context.InitializeWithArgv", "pyapi/generated/pyopensn.context.SetCaliperConfig", "pyapi/generated/pyopensn.context.SetVerbosityLevel", "pyapi/generated/pyopensn.context.UseColor", "pyapi/generated/pyopensn.diffusion.CFEMDiffusionSolver", "pyapi/generated/pyopensn.diffusion.DFEMDiffusionSolver", "pyapi/generated/pyopensn.diffusion.DiffusionSolverBase", "pyapi/generated/pyopensn.fieldfunc.FieldFunction", "pyapi/generated/pyopensn.fieldfunc.FieldFunctionGridBased", "pyapi/generated/pyopensn.fieldfunc.FieldFunctionInterpolationLine", "pyapi/generated/pyopensn.fieldfunc.FieldFunctionInterpolationPoint", "pyapi/generated/pyopensn.fieldfunc.FieldFunctionInterpolationVolume", "pyapi/generated/pyopensn.logvol.BooleanLogicalVolume", "pyapi/generated/pyopensn.logvol.LogicalVolume", "pyapi/generated/pyopensn.logvol.RCCLogicalVolume", "pyapi/generated/pyopensn.logvol.RPPLogicalVolume", "pyapi/generated/pyopensn.logvol.SphereLogicalVolume", "pyapi/generated/pyopensn.logvol.SurfaceMeshLogicalVolume", "pyapi/generated/pyopensn.math.Function", "pyapi/generated/pyopensn.math.ScalarMaterialFunction", "pyapi/generated/pyopensn.math.ScalarSpatialFunction", "pyapi/generated/pyopensn.math.ScalarSpatialMaterialFunction", "pyapi/generated/pyopensn.math.Vector3", "pyapi/generated/pyopensn.math.VectorSpatialFunction", "pyapi/generated/pyopensn.math.Ylm", "pyapi/generated/pyopensn.mesh.DistributedMeshGenerator", "pyapi/generated/pyopensn.mesh.ExtruderMeshGenerator", "pyapi/generated/pyopensn.mesh.FromFileMeshGenerator", "pyapi/generated/pyopensn.mesh.GraphPartitioner", "pyapi/generated/pyopensn.mesh.KBAGraphPartitioner", "pyapi/generated/pyopensn.mesh.LinearGraphPartitioner", "pyapi/generated/pyopensn.mesh.MeshContinuum", "pyapi/generated/pyopensn.mesh.MeshGenerator", "pyapi/generated/pyopensn.mesh.OrthogonalMeshGenerator", "pyapi/generated/pyopensn.mesh.PETScGraphPartitioner", "pyapi/generated/pyopensn.mesh.SplitFileMeshGenerator", "pyapi/generated/pyopensn.mesh.SurfaceMesh", "pyapi/generated/pyopensn.post.AggregateNodalValuePostProcessor", "pyapi/generated/pyopensn.post.CellVolumeIntegralPostProcessor", "pyapi/generated/pyopensn.post.PostProcessor", "pyapi/generated/pyopensn.post.Print", "pyapi/generated/pyopensn.post.SetPrinterOptions", "pyapi/generated/pyopensn.post.SolverInfoPostProcessor", "pyapi/generated/pyopensn.response.ResponseEvaluator", "pyapi/generated/pyopensn.solver.DiffusionDFEMSolver", "pyapi/generated/pyopensn.solver.DiscreteOrdinatesCurvilinearProblem", "pyapi/generated/pyopensn.solver.DiscreteOrdinatesProblem", "pyapi/generated/pyopensn.solver.LBSProblem", "pyapi/generated/pyopensn.solver.NonLinearKEigenSolver", "pyapi/generated/pyopensn.solver.PRKSolver", "pyapi/generated/pyopensn.solver.PowerIterationKEigenSCDSASolver", "pyapi/generated/pyopensn.solver.PowerIterationKEigenSMMSolver", "pyapi/generated/pyopensn.solver.PowerIterationKEigenSolver", "pyapi/generated/pyopensn.solver.Solver", "pyapi/generated/pyopensn.solver.SteadyStateSolver", "pyapi/generated/pyopensn.source.PointSource", "pyapi/generated/pyopensn.source.VolumetricSource", "pyapi/generated/pyopensn.xs.MultiGroupXS", "pyapi/index", "theory/adjoint", "theory/background", "theory/cross_sections", "theory/discretization", "theory/index", "theory/iterative", "theory/outcome", "theory/parallelization", "tutorials/aquad/index", "tutorials/aquad/introduction", "tutorials/aquad/product_GLC", "tutorials/aquad/sLDFE", "tutorials/index", "tutorials/lbs/first/first_example", "tutorials/lbs/index", "tutorials/mesh/index", "tutorials/mesh/introduction", "tutorials/mesh/mesh_extrude", "tutorials/mesh/mesh_ortho_2D", "tutorials/mesh/mesh_ortho_3D", "tutorials/mesh/mesh_ortho_3D_blockIDs", "tutorials/mesh/mesh_read_gmsh_2D", "tutorials/mesh/mesh_read_gmsh_3D", "tutorials/mesh/mesh_read_obj_2D", "tutorials/mesh/mesh_read_vtu_3D", "tutorials/xs/1g_xs_read_file", "tutorials/xs/1g_xs_simple", "tutorials/xs/index", "tutorials/xs/introduction", "tutorials/xs/mg_xs_read_file", "tutorials/xs/mg_xs_read_openmc"], "envversion": {"nbsphinx": 4, "sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinxcontrib.bibtex": 9}, "filenames": ["devguide/coding_standard.md", "devguide/index.rst", "devguide/lua_bindings.md", "devguide/py_bindings.rst", "devguide/workflow.md", "gallery.md", "index.rst", "install/index.rst", "install/install_linux.rst", "install/install_linux_easy.rst", "install/install_macos.rst", "install/install_macos_easy.rst", "pyapi/generated/pyopensn.aquad.AngularQuadrature.rst", "pyapi/generated/pyopensn.aquad.CurvilinearQuadrature.rst", "pyapi/generated/pyopensn.aquad.GLCProductQuadrature2DRZ.rst", "pyapi/generated/pyopensn.aquad.GLCProductQuadrature2DXY.rst", "pyapi/generated/pyopensn.aquad.GLCProductQuadrature3DXYZ.rst", "pyapi/generated/pyopensn.aquad.GLProductQuadrature1DSlab.rst", "pyapi/generated/pyopensn.aquad.ProductQuadrature.rst", "pyapi/generated/pyopensn.aquad.SLDFESQuadrature.rst", "pyapi/generated/pyopensn.context.EnableCaliper.rst", "pyapi/generated/pyopensn.context.EnablePETScErrorHandler.rst", "pyapi/generated/pyopensn.context.Finalize.rst", "pyapi/generated/pyopensn.context.InitializeWithArgv.rst", "pyapi/generated/pyopensn.context.SetCaliperConfig.rst", "pyapi/generated/pyopensn.context.SetVerbosityLevel.rst", "pyapi/generated/pyopensn.context.UseColor.rst", "pyapi/generated/pyopensn.diffusion.CFEMDiffusionSolver.rst", "pyapi/generated/pyopensn.diffusion.DFEMDiffusionSolver.rst", "pyapi/generated/pyopensn.diffusion.DiffusionSolverBase.rst", "pyapi/generated/pyopensn.fieldfunc.FieldFunction.rst", "pyapi/generated/pyopensn.fieldfunc.FieldFunctionGridBased.rst", "pyapi/generated/pyopensn.fieldfunc.FieldFunctionInterpolationLine.rst", "pyapi/generated/pyopensn.fieldfunc.FieldFunctionInterpolationPoint.rst", "pyapi/generated/pyopensn.fieldfunc.FieldFunctionInterpolationVolume.rst", "pyapi/generated/pyopensn.logvol.BooleanLogicalVolume.rst", "pyapi/generated/pyopensn.logvol.LogicalVolume.rst", "pyapi/generated/pyopensn.logvol.RCCLogicalVolume.rst", "pyapi/generated/pyopensn.logvol.RPPLogicalVolume.rst", "pyapi/generated/pyopensn.logvol.SphereLogicalVolume.rst", "pyapi/generated/pyopensn.logvol.SurfaceMeshLogicalVolume.rst", "pyapi/generated/pyopensn.math.Function.rst", "pyapi/generated/pyopensn.math.ScalarMaterialFunction.rst", "pyapi/generated/pyopensn.math.ScalarSpatialFunction.rst", "pyapi/generated/pyopensn.math.ScalarSpatialMaterialFunction.rst", "pyapi/generated/pyopensn.math.Vector3.rst", "pyapi/generated/pyopensn.math.VectorSpatialFunction.rst", "pyapi/generated/pyopensn.math.Ylm.rst", "pyapi/generated/pyopensn.mesh.DistributedMeshGenerator.rst", "pyapi/generated/pyopensn.mesh.ExtruderMeshGenerator.rst", "pyapi/generated/pyopensn.mesh.FromFileMeshGenerator.rst", "pyapi/generated/pyopensn.mesh.GraphPartitioner.rst", "pyapi/generated/pyopensn.mesh.KBAGraphPartitioner.rst", "pyapi/generated/pyopensn.mesh.LinearGraphPartitioner.rst", "pyapi/generated/pyopensn.mesh.MeshContinuum.rst", "pyapi/generated/pyopensn.mesh.MeshGenerator.rst", "pyapi/generated/pyopensn.mesh.OrthogonalMeshGenerator.rst", "pyapi/generated/pyopensn.mesh.PETScGraphPartitioner.rst", "pyapi/generated/pyopensn.mesh.SplitFileMeshGenerator.rst", "pyapi/generated/pyopensn.mesh.SurfaceMesh.rst", "pyapi/generated/pyopensn.post.AggregateNodalValuePostProcessor.rst", "pyapi/generated/pyopensn.post.CellVolumeIntegralPostProcessor.rst", "pyapi/generated/pyopensn.post.PostProcessor.rst", "pyapi/generated/pyopensn.post.Print.rst", "pyapi/generated/pyopensn.post.SetPrinterOptions.rst", "pyapi/generated/pyopensn.post.SolverInfoPostProcessor.rst", "pyapi/generated/pyopensn.response.ResponseEvaluator.rst", "pyapi/generated/pyopensn.solver.DiffusionDFEMSolver.rst", "pyapi/generated/pyopensn.solver.DiscreteOrdinatesCurvilinearProblem.rst", "pyapi/generated/pyopensn.solver.DiscreteOrdinatesProblem.rst", "pyapi/generated/pyopensn.solver.LBSProblem.rst", "pyapi/generated/pyopensn.solver.NonLinearKEigenSolver.rst", "pyapi/generated/pyopensn.solver.PRKSolver.rst", "pyapi/generated/pyopensn.solver.PowerIterationKEigenSCDSASolver.rst", "pyapi/generated/pyopensn.solver.PowerIterationKEigenSMMSolver.rst", "pyapi/generated/pyopensn.solver.PowerIterationKEigenSolver.rst", "pyapi/generated/pyopensn.solver.Solver.rst", "pyapi/generated/pyopensn.solver.SteadyStateSolver.rst", "pyapi/generated/pyopensn.source.PointSource.rst", "pyapi/generated/pyopensn.source.VolumetricSource.rst", "pyapi/generated/pyopensn.xs.MultiGroupXS.rst", "pyapi/index.rst", "theory/adjoint.rst", "theory/background.rst", "theory/cross_sections.rst", "theory/discretization.rst", "theory/index.rst", "theory/iterative.rst", "theory/outcome.rst", "theory/parallelization.rst", "tutorials/aquad/index.rst", "tutorials/aquad/introduction.rst", "tutorials/aquad/product_GLC.ipynb", "tutorials/aquad/sLDFE.ipynb", "tutorials/index.rst", "tutorials/lbs/first/first_example.ipynb", "tutorials/lbs/index.rst", "tutorials/mesh/index.rst", "tutorials/mesh/introduction.rst", "tutorials/mesh/mesh_extrude.ipynb", "tutorials/mesh/mesh_ortho_2D.ipynb", "tutorials/mesh/mesh_ortho_3D.ipynb", "tutorials/mesh/mesh_ortho_3D_blockIDs.ipynb", "tutorials/mesh/mesh_read_gmsh_2D.ipynb", "tutorials/mesh/mesh_read_gmsh_3D.ipynb", "tutorials/mesh/mesh_read_obj_2D.ipynb", "tutorials/mesh/mesh_read_vtu_3D.ipynb", "tutorials/xs/1g_xs_read_file.ipynb", "tutorials/xs/1g_xs_simple.ipynb", "tutorials/xs/index.rst", "tutorials/xs/introduction.rst", "tutorials/xs/mg_xs_read_file.ipynb", "tutorials/xs/mg_xs_read_openmc.ipynb"], "indexentries": {"__call__() (pyopensn.math.scalarmaterialfunction method)": [[42, "pyopensn.math.ScalarMaterialFunction.__call__", false]], "__call__() (pyopensn.math.scalarspatialfunction method)": [[43, "pyopensn.math.ScalarSpatialFunction.__call__", false]], "__call__() (pyopensn.math.scalarspatialmaterialfunction method)": [[44, "pyopensn.math.ScalarSpatialMaterialFunction.__call__", false]], "__call__() (pyopensn.math.vectorspatialfunction method)": [[46, "pyopensn.math.VectorSpatialFunction.__call__", false]], "__init__() (pyopensn.aquad.glcproductquadrature2drz method)": [[14, "pyopensn.aquad.GLCProductQuadrature2DRZ.__init__", false]], "__init__() (pyopensn.aquad.glcproductquadrature2dxy method)": [[15, "pyopensn.aquad.GLCProductQuadrature2DXY.__init__", false]], "__init__() (pyopensn.aquad.glcproductquadrature3dxyz method)": [[16, "pyopensn.aquad.GLCProductQuadrature3DXYZ.__init__", false]], "__init__() (pyopensn.aquad.glproductquadrature1dslab method)": [[17, "pyopensn.aquad.GLProductQuadrature1DSlab.__init__", false]], "__init__() (pyopensn.aquad.sldfesquadrature method)": [[19, "pyopensn.aquad.SLDFESQuadrature.__init__", false]], "__init__() (pyopensn.diffusion.cfemdiffusionsolver method)": [[27, "pyopensn.diffusion.CFEMDiffusionSolver.__init__", false]], "__init__() (pyopensn.diffusion.dfemdiffusionsolver method)": [[28, "pyopensn.diffusion.DFEMDiffusionSolver.__init__", false]], "__init__() (pyopensn.fieldfunc.fieldfunctioninterpolationline method)": [[32, "pyopensn.fieldfunc.FieldFunctionInterpolationLine.__init__", false]], "__init__() (pyopensn.fieldfunc.fieldfunctioninterpolationpoint method)": [[33, "pyopensn.fieldfunc.FieldFunctionInterpolationPoint.__init__", false]], "__init__() (pyopensn.fieldfunc.fieldfunctioninterpolationvolume method)": [[34, "pyopensn.fieldfunc.FieldFunctionInterpolationVolume.__init__", false]], "__init__() (pyopensn.logvol.booleanlogicalvolume method)": [[35, "pyopensn.logvol.BooleanLogicalVolume.__init__", false]], "__init__() (pyopensn.logvol.rcclogicalvolume method)": [[37, "pyopensn.logvol.RCCLogicalVolume.__init__", false]], "__init__() (pyopensn.logvol.rpplogicalvolume method)": [[38, "pyopensn.logvol.RPPLogicalVolume.__init__", false]], "__init__() (pyopensn.logvol.spherelogicalvolume method)": [[39, "pyopensn.logvol.SphereLogicalVolume.__init__", false]], "__init__() (pyopensn.logvol.surfacemeshlogicalvolume method)": [[40, "pyopensn.logvol.SurfaceMeshLogicalVolume.__init__", false]], "__init__() (pyopensn.math.function method)": [[41, "pyopensn.math.Function.__init__", false]], "__init__() (pyopensn.math.scalarmaterialfunction method)": [[42, "pyopensn.math.ScalarMaterialFunction.__init__", false]], "__init__() (pyopensn.math.scalarspatialfunction method)": [[43, "pyopensn.math.ScalarSpatialFunction.__init__", false]], "__init__() (pyopensn.math.scalarspatialmaterialfunction method)": [[44, "pyopensn.math.ScalarSpatialMaterialFunction.__init__", false]], "__init__() (pyopensn.math.vector3 method)": [[45, "pyopensn.math.Vector3.__init__", false]], "__init__() (pyopensn.math.vectorspatialfunction method)": [[46, "pyopensn.math.VectorSpatialFunction.__init__", false]], "__init__() (pyopensn.mesh.distributedmeshgenerator method)": [[48, "pyopensn.mesh.DistributedMeshGenerator.__init__", false]], "__init__() (pyopensn.mesh.extrudermeshgenerator method)": [[49, "pyopensn.mesh.ExtruderMeshGenerator.__init__", false]], "__init__() (pyopensn.mesh.fromfilemeshgenerator method)": [[50, "pyopensn.mesh.FromFileMeshGenerator.__init__", false]], "__init__() (pyopensn.mesh.kbagraphpartitioner method)": [[52, "pyopensn.mesh.KBAGraphPartitioner.__init__", false]], "__init__() (pyopensn.mesh.lineargraphpartitioner method)": [[53, "pyopensn.mesh.LinearGraphPartitioner.__init__", false]], "__init__() (pyopensn.mesh.orthogonalmeshgenerator method)": [[56, "pyopensn.mesh.OrthogonalMeshGenerator.__init__", false]], "__init__() (pyopensn.mesh.petscgraphpartitioner method)": [[57, "pyopensn.mesh.PETScGraphPartitioner.__init__", false]], "__init__() (pyopensn.mesh.splitfilemeshgenerator method)": [[58, "pyopensn.mesh.SplitFileMeshGenerator.__init__", false]], "__init__() (pyopensn.mesh.surfacemesh method)": [[59, "pyopensn.mesh.SurfaceMesh.__init__", false]], "__init__() (pyopensn.post.aggregatenodalvaluepostprocessor method)": [[60, "pyopensn.post.AggregateNodalValuePostProcessor.__init__", false]], "__init__() (pyopensn.post.cellvolumeintegralpostprocessor method)": [[61, "pyopensn.post.CellVolumeIntegralPostProcessor.__init__", false]], "__init__() (pyopensn.post.solverinfopostprocessor method)": [[65, "pyopensn.post.SolverInfoPostProcessor.__init__", false]], "__init__() (pyopensn.response.responseevaluator method)": [[66, "pyopensn.response.ResponseEvaluator.__init__", false]], "__init__() (pyopensn.solver.diffusiondfemsolver method)": [[67, "pyopensn.solver.DiffusionDFEMSolver.__init__", false]], "__init__() (pyopensn.solver.discreteordinatescurvilinearproblem method)": [[68, "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem.__init__", false]], "__init__() (pyopensn.solver.discreteordinatesproblem method)": [[69, "pyopensn.solver.DiscreteOrdinatesProblem.__init__", false]], "__init__() (pyopensn.solver.nonlinearkeigensolver method)": [[71, "pyopensn.solver.NonLinearKEigenSolver.__init__", false]], "__init__() (pyopensn.solver.poweriterationkeigenscdsasolver method)": [[73, "pyopensn.solver.PowerIterationKEigenSCDSASolver.__init__", false]], "__init__() (pyopensn.solver.poweriterationkeigensmmsolver method)": [[74, "pyopensn.solver.PowerIterationKEigenSMMSolver.__init__", false]], "__init__() (pyopensn.solver.poweriterationkeigensolver method)": [[75, "pyopensn.solver.PowerIterationKEigenSolver.__init__", false]], "__init__() (pyopensn.solver.prksolver method)": [[72, "pyopensn.solver.PRKSolver.__init__", false]], "__init__() (pyopensn.solver.steadystatesolver method)": [[77, "pyopensn.solver.SteadyStateSolver.__init__", false]], "__init__() (pyopensn.source.pointsource method)": [[78, "pyopensn.source.PointSource.__init__", false]], "__init__() (pyopensn.source.volumetricsource method)": [[79, "pyopensn.source.VolumetricSource.__init__", false]], "__init__() (pyopensn.xs.multigroupxs method)": [[80, "pyopensn.xs.MultiGroupXS.__init__", false]], "abscissae (pyopensn.aquad.angularquadrature property)": [[12, "pyopensn.aquad.AngularQuadrature.abscissae", false]], "abscissae (pyopensn.aquad.curvilinearquadrature property)": [[13, "pyopensn.aquad.CurvilinearQuadrature.abscissae", false]], "abscissae (pyopensn.aquad.glcproductquadrature2drz property)": [[14, "pyopensn.aquad.GLCProductQuadrature2DRZ.abscissae", false]], "abscissae (pyopensn.aquad.glcproductquadrature2dxy property)": [[15, "pyopensn.aquad.GLCProductQuadrature2DXY.abscissae", false]], "abscissae (pyopensn.aquad.glcproductquadrature3dxyz property)": [[16, "pyopensn.aquad.GLCProductQuadrature3DXYZ.abscissae", false]], "abscissae (pyopensn.aquad.glproductquadrature1dslab property)": [[17, "pyopensn.aquad.GLProductQuadrature1DSlab.abscissae", false]], "abscissae (pyopensn.aquad.productquadrature property)": [[18, "pyopensn.aquad.ProductQuadrature.abscissae", false]], "abscissae (pyopensn.aquad.sldfesquadrature property)": [[19, "pyopensn.aquad.SLDFESQuadrature.abscissae", false]], "addfieldfunction() (pyopensn.fieldfunc.fieldfunctioninterpolationline method)": [[32, "pyopensn.fieldfunc.FieldFunctionInterpolationLine.AddFieldFunction", false]], "addfieldfunction() (pyopensn.fieldfunc.fieldfunctioninterpolationpoint method)": [[33, "pyopensn.fieldfunc.FieldFunctionInterpolationPoint.AddFieldFunction", false]], "addfieldfunction() (pyopensn.fieldfunc.fieldfunctioninterpolationvolume method)": [[34, "pyopensn.fieldfunc.FieldFunctionInterpolationVolume.AddFieldFunction", false]], "advance() (pyopensn.diffusion.cfemdiffusionsolver method)": [[27, "pyopensn.diffusion.CFEMDiffusionSolver.Advance", false]], "advance() (pyopensn.diffusion.dfemdiffusionsolver method)": [[28, "pyopensn.diffusion.DFEMDiffusionSolver.Advance", false]], "advance() (pyopensn.diffusion.diffusionsolverbase method)": [[29, "pyopensn.diffusion.DiffusionSolverBase.Advance", false]], "advance() (pyopensn.solver.nonlinearkeigensolver method)": [[71, "pyopensn.solver.NonLinearKEigenSolver.Advance", false]], "advance() (pyopensn.solver.poweriterationkeigenscdsasolver method)": [[73, "pyopensn.solver.PowerIterationKEigenSCDSASolver.Advance", false]], "advance() (pyopensn.solver.poweriterationkeigensmmsolver method)": [[74, "pyopensn.solver.PowerIterationKEigenSMMSolver.Advance", false]], "advance() (pyopensn.solver.poweriterationkeigensolver method)": [[75, "pyopensn.solver.PowerIterationKEigenSolver.Advance", false]], "advance() (pyopensn.solver.prksolver method)": [[72, "pyopensn.solver.PRKSolver.Advance", false]], "advance() (pyopensn.solver.solver method)": [[76, "pyopensn.solver.Solver.Advance", false]], "advance() (pyopensn.solver.steadystatesolver method)": [[77, "pyopensn.solver.SteadyStateSolver.Advance", false]], "aggregatenodalvaluepostprocessor (class in pyopensn.post)": [[60, "pyopensn.post.AggregateNodalValuePostProcessor", false]], "angularquadrature (class in pyopensn.aquad)": [[12, "pyopensn.aquad.AngularQuadrature", false]], "booleanlogicalvolume (class in pyopensn.logvol)": [[35, "pyopensn.logvol.BooleanLogicalVolume", false]], "cellvolumeintegralpostprocessor (class in pyopensn.post)": [[61, "pyopensn.post.CellVolumeIntegralPostProcessor", false]], "cfemdiffusionsolver (class in pyopensn.diffusion)": [[27, "pyopensn.diffusion.CFEMDiffusionSolver", false]], "chi (pyopensn.xs.multigroupxs property)": [[80, "pyopensn.xs.MultiGroupXS.chi", false]], "clearforwardsources() (pyopensn.response.responseevaluator method)": [[66, "pyopensn.response.ResponseEvaluator.ClearForwardSources", false]], "computebalance() (pyopensn.solver.discreteordinatescurvilinearproblem method)": [[68, "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem.ComputeBalance", false]], "computebalance() (pyopensn.solver.discreteordinatesproblem method)": [[69, "pyopensn.solver.DiscreteOrdinatesProblem.ComputeBalance", false]], "computefissionrate() (pyopensn.solver.diffusiondfemsolver method)": [[67, "pyopensn.solver.DiffusionDFEMSolver.ComputeFissionRate", false]], "computefissionrate() (pyopensn.solver.discreteordinatescurvilinearproblem method)": [[68, "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem.ComputeFissionRate", false]], "computefissionrate() (pyopensn.solver.discreteordinatesproblem method)": [[69, "pyopensn.solver.DiscreteOrdinatesProblem.ComputeFissionRate", false]], "computefissionrate() (pyopensn.solver.lbsproblem method)": [[70, "pyopensn.solver.LBSProblem.ComputeFissionRate", false]], "computeleakage() (pyopensn.solver.discreteordinatescurvilinearproblem method)": [[68, "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem.ComputeLeakage", false]], "computeleakage() (pyopensn.solver.discreteordinatesproblem method)": [[69, "pyopensn.solver.DiscreteOrdinatesProblem.ComputeLeakage", false]], "computevolumeperblockid() (pyopensn.mesh.meshcontinuum method)": [[54, "pyopensn.mesh.MeshContinuum.ComputeVolumePerBlockID", false]], "createandwritesourcemoments() (pyopensn.solver.diffusiondfemsolver method)": [[67, "pyopensn.solver.DiffusionDFEMSolver.CreateAndWriteSourceMoments", false]], "createandwritesourcemoments() (pyopensn.solver.discreteordinatescurvilinearproblem method)": [[68, "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem.CreateAndWriteSourceMoments", false]], "createandwritesourcemoments() (pyopensn.solver.discreteordinatesproblem method)": [[69, "pyopensn.solver.DiscreteOrdinatesProblem.CreateAndWriteSourceMoments", false]], "createandwritesourcemoments() (pyopensn.solver.lbsproblem method)": [[70, "pyopensn.solver.LBSProblem.CreateAndWriteSourceMoments", false]], "createsimpleonegroup() (pyopensn.xs.multigroupxs method)": [[80, "pyopensn.xs.MultiGroupXS.CreateSimpleOneGroup", false]], "curvilinearquadrature (class in pyopensn.aquad)": [[13, "pyopensn.aquad.CurvilinearQuadrature", false]], "dfemdiffusionsolver (class in pyopensn.diffusion)": [[28, "pyopensn.diffusion.DFEMDiffusionSolver", false]], "diffusiondfemsolver (class in pyopensn.solver)": [[67, "pyopensn.solver.DiffusionDFEMSolver", false]], "diffusionsolverbase (class in pyopensn.diffusion)": [[29, "pyopensn.diffusion.DiffusionSolverBase", false]], "dimension (pyopensn.mesh.meshcontinuum property)": [[54, "pyopensn.mesh.MeshContinuum.dimension", false]], "discreteordinatescurvilinearproblem (class in pyopensn.solver)": [[68, "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem", false]], "discreteordinatesproblem (class in pyopensn.solver)": [[69, "pyopensn.solver.DiscreteOrdinatesProblem", false]], "distributedmeshgenerator (class in pyopensn.mesh)": [[48, "pyopensn.mesh.DistributedMeshGenerator", false]], "enablecaliper() (in module pyopensn.context)": [[20, "pyopensn.context.EnableCaliper", false]], "enablepetscerrorhandler() (in module pyopensn.context)": [[21, "pyopensn.context.EnablePETScErrorHandler", false]], "evaluateresponse() (pyopensn.response.responseevaluator method)": [[66, "pyopensn.response.ResponseEvaluator.EvaluateResponse", false]], "execute() (pyopensn.diffusion.cfemdiffusionsolver method)": [[27, "pyopensn.diffusion.CFEMDiffusionSolver.Execute", false]], "execute() (pyopensn.diffusion.dfemdiffusionsolver method)": [[28, "pyopensn.diffusion.DFEMDiffusionSolver.Execute", false]], "execute() (pyopensn.diffusion.diffusionsolverbase method)": [[29, "pyopensn.diffusion.DiffusionSolverBase.Execute", false]], "execute() (pyopensn.fieldfunc.fieldfunctioninterpolationline method)": [[32, "pyopensn.fieldfunc.FieldFunctionInterpolationLine.Execute", false]], "execute() (pyopensn.fieldfunc.fieldfunctioninterpolationpoint method)": [[33, "pyopensn.fieldfunc.FieldFunctionInterpolationPoint.Execute", false]], "execute() (pyopensn.fieldfunc.fieldfunctioninterpolationvolume method)": [[34, "pyopensn.fieldfunc.FieldFunctionInterpolationVolume.Execute", false]], "execute() (pyopensn.mesh.distributedmeshgenerator method)": [[48, "pyopensn.mesh.DistributedMeshGenerator.Execute", false]], "execute() (pyopensn.mesh.extrudermeshgenerator method)": [[49, "pyopensn.mesh.ExtruderMeshGenerator.Execute", false]], "execute() (pyopensn.mesh.fromfilemeshgenerator method)": [[50, "pyopensn.mesh.FromFileMeshGenerator.Execute", false]], "execute() (pyopensn.mesh.meshgenerator method)": [[55, "pyopensn.mesh.MeshGenerator.Execute", false]], "execute() (pyopensn.mesh.orthogonalmeshgenerator method)": [[56, "pyopensn.mesh.OrthogonalMeshGenerator.Execute", false]], "execute() (pyopensn.mesh.splitfilemeshgenerator method)": [[58, "pyopensn.mesh.SplitFileMeshGenerator.Execute", false]], "execute() (pyopensn.post.aggregatenodalvaluepostprocessor method)": [[60, "pyopensn.post.AggregateNodalValuePostProcessor.Execute", false]], "execute() (pyopensn.post.cellvolumeintegralpostprocessor method)": [[61, "pyopensn.post.CellVolumeIntegralPostProcessor.Execute", false]], "execute() (pyopensn.post.postprocessor method)": [[62, "pyopensn.post.PostProcessor.Execute", false]], "execute() (pyopensn.post.solverinfopostprocessor method)": [[65, "pyopensn.post.SolverInfoPostProcessor.Execute", false]], "execute() (pyopensn.solver.nonlinearkeigensolver method)": [[71, "pyopensn.solver.NonLinearKEigenSolver.Execute", false]], "execute() (pyopensn.solver.poweriterationkeigenscdsasolver method)": [[73, "pyopensn.solver.PowerIterationKEigenSCDSASolver.Execute", false]], "execute() (pyopensn.solver.poweriterationkeigensmmsolver method)": [[74, "pyopensn.solver.PowerIterationKEigenSMMSolver.Execute", false]], "execute() (pyopensn.solver.poweriterationkeigensolver method)": [[75, "pyopensn.solver.PowerIterationKEigenSolver.Execute", false]], "execute() (pyopensn.solver.prksolver method)": [[72, "pyopensn.solver.PRKSolver.Execute", false]], "execute() (pyopensn.solver.solver method)": [[76, "pyopensn.solver.Solver.Execute", false]], "execute() (pyopensn.solver.steadystatesolver method)": [[77, "pyopensn.solver.SteadyStateSolver.Execute", false]], "exportmultipletovtk() (pyopensn.fieldfunc.fieldfunctiongridbased static method)": [[31, "pyopensn.fieldfunc.FieldFunctionGridBased.ExportMultipleToVTK", false]], "exporttocsv() (pyopensn.fieldfunc.fieldfunctioninterpolationline method)": [[32, "pyopensn.fieldfunc.FieldFunctionInterpolationLine.ExportToCSV", false]], "exporttocsv() (pyopensn.fieldfunc.fieldfunctioninterpolationpoint method)": [[33, "pyopensn.fieldfunc.FieldFunctionInterpolationPoint.ExportToCSV", false]], "exporttocsv() (pyopensn.fieldfunc.fieldfunctioninterpolationvolume method)": [[34, "pyopensn.fieldfunc.FieldFunctionInterpolationVolume.ExportToCSV", false]], "exporttopvtu() (pyopensn.mesh.meshcontinuum method)": [[54, "pyopensn.mesh.MeshContinuum.ExportToPVTU", false]], "extrudermeshgenerator (class in pyopensn.mesh)": [[49, "pyopensn.mesh.ExtruderMeshGenerator", false]], "fieldfunction (class in pyopensn.fieldfunc)": [[30, "pyopensn.fieldfunc.FieldFunction", false]], "fieldfunctiongridbased (class in pyopensn.fieldfunc)": [[31, "pyopensn.fieldfunc.FieldFunctionGridBased", false]], "fieldfunctioninterpolationline (class in pyopensn.fieldfunc)": [[32, "pyopensn.fieldfunc.FieldFunctionInterpolationLine", false]], "fieldfunctioninterpolationpoint (class in pyopensn.fieldfunc)": [[33, "pyopensn.fieldfunc.FieldFunctionInterpolationPoint", false]], "fieldfunctioninterpolationvolume (class in pyopensn.fieldfunc)": [[34, "pyopensn.fieldfunc.FieldFunctionInterpolationVolume", false]], "finalize() (in module pyopensn.context)": [[22, "pyopensn.context.Finalize", false]], "fromfilemeshgenerator (class in pyopensn.mesh)": [[50, "pyopensn.mesh.FromFileMeshGenerator", false]], "function (class in pyopensn.math)": [[41, "pyopensn.math.Function", false]], "geteigenvalue() (pyopensn.solver.nonlinearkeigensolver method)": [[71, "pyopensn.solver.NonLinearKEigenSolver.GetEigenvalue", false]], "geteigenvalue() (pyopensn.solver.poweriterationkeigenscdsasolver method)": [[73, "pyopensn.solver.PowerIterationKEigenSCDSASolver.GetEigenvalue", false]], "geteigenvalue() (pyopensn.solver.poweriterationkeigensmmsolver method)": [[74, "pyopensn.solver.PowerIterationKEigenSMMSolver.GetEigenvalue", false]], "geteigenvalue() (pyopensn.solver.poweriterationkeigensolver method)": [[75, "pyopensn.solver.PowerIterationKEigenSolver.GetEigenvalue", false]], "getfieldfunctionbyname() (pyopensn.fieldfunc.fieldfunctioninterpolationline static method)": [[32, "pyopensn.fieldfunc.FieldFunctionInterpolationLine.GetFieldFunctionByName", false]], "getfieldfunctionbyname() (pyopensn.fieldfunc.fieldfunctioninterpolationpoint static method)": [[33, "pyopensn.fieldfunc.FieldFunctionInterpolationPoint.GetFieldFunctionByName", false]], "getfieldfunctionbyname() (pyopensn.fieldfunc.fieldfunctioninterpolationvolume static method)": [[34, "pyopensn.fieldfunc.FieldFunctionInterpolationVolume.GetFieldFunctionByName", false]], "getfieldfunctions() (pyopensn.diffusion.cfemdiffusionsolver method)": [[27, "pyopensn.diffusion.CFEMDiffusionSolver.GetFieldFunctions", false]], "getfieldfunctions() (pyopensn.diffusion.dfemdiffusionsolver method)": [[28, "pyopensn.diffusion.DFEMDiffusionSolver.GetFieldFunctions", false]], "getfieldfunctions() (pyopensn.diffusion.diffusionsolverbase method)": [[29, "pyopensn.diffusion.DiffusionSolverBase.GetFieldFunctions", false]], "getfieldfunctions() (pyopensn.solver.diffusiondfemsolver method)": [[67, "pyopensn.solver.DiffusionDFEMSolver.GetFieldFunctions", false]], "getfieldfunctions() (pyopensn.solver.discreteordinatescurvilinearproblem method)": [[68, "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem.GetFieldFunctions", false]], "getfieldfunctions() (pyopensn.solver.discreteordinatesproblem method)": [[69, "pyopensn.solver.DiscreteOrdinatesProblem.GetFieldFunctions", false]], "getfieldfunctions() (pyopensn.solver.lbsproblem method)": [[70, "pyopensn.solver.LBSProblem.GetFieldFunctions", false]], "getperiod() (pyopensn.solver.prksolver method)": [[72, "pyopensn.solver.PRKSolver.GetPeriod", false]], "getpointvalue() (pyopensn.fieldfunc.fieldfunctioninterpolationpoint method)": [[33, "pyopensn.fieldfunc.FieldFunctionInterpolationPoint.GetPointValue", false]], "getpopulationnew() (pyopensn.solver.prksolver method)": [[72, "pyopensn.solver.PRKSolver.GetPopulationNew", false]], "getpopulationprev() (pyopensn.solver.prksolver method)": [[72, "pyopensn.solver.PRKSolver.GetPopulationPrev", false]], "getpowerfieldfunction() (pyopensn.solver.diffusiondfemsolver method)": [[67, "pyopensn.solver.DiffusionDFEMSolver.GetPowerFieldFunction", false]], "getpowerfieldfunction() (pyopensn.solver.discreteordinatescurvilinearproblem method)": [[68, "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem.GetPowerFieldFunction", false]], "getpowerfieldfunction() (pyopensn.solver.discreteordinatesproblem method)": [[69, "pyopensn.solver.DiscreteOrdinatesProblem.GetPowerFieldFunction", false]], "getpowerfieldfunction() (pyopensn.solver.lbsproblem method)": [[70, "pyopensn.solver.LBSProblem.GetPowerFieldFunction", false]], "getscalarfieldfunctionlist() (pyopensn.solver.diffusiondfemsolver method)": [[67, "pyopensn.solver.DiffusionDFEMSolver.GetScalarFieldFunctionList", false]], "getscalarfieldfunctionlist() (pyopensn.solver.discreteordinatescurvilinearproblem method)": [[68, "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem.GetScalarFieldFunctionList", false]], "getscalarfieldfunctionlist() (pyopensn.solver.discreteordinatesproblem method)": [[69, "pyopensn.solver.DiscreteOrdinatesProblem.GetScalarFieldFunctionList", false]], "getscalarfieldfunctionlist() (pyopensn.solver.lbsproblem method)": [[70, "pyopensn.solver.LBSProblem.GetScalarFieldFunctionList", false]], "getsolutionnew() (pyopensn.solver.prksolver method)": [[72, "pyopensn.solver.PRKSolver.GetSolutionNew", false]], "getsolutionprev() (pyopensn.solver.prksolver method)": [[72, "pyopensn.solver.PRKSolver.GetSolutionPrev", false]], "gettimenew() (pyopensn.solver.prksolver method)": [[72, "pyopensn.solver.PRKSolver.GetTimeNew", false]], "gettimeprev() (pyopensn.solver.prksolver method)": [[72, "pyopensn.solver.PRKSolver.GetTimePrev", false]], "getvalue() (pyopensn.fieldfunc.fieldfunctioninterpolationvolume method)": [[34, "pyopensn.fieldfunc.FieldFunctionInterpolationVolume.GetValue", false]], "getvalue() (pyopensn.post.aggregatenodalvaluepostprocessor method)": [[60, "pyopensn.post.AggregateNodalValuePostProcessor.GetValue", false]], "getvalue() (pyopensn.post.cellvolumeintegralpostprocessor method)": [[61, "pyopensn.post.CellVolumeIntegralPostProcessor.GetValue", false]], "getvalue() (pyopensn.post.postprocessor method)": [[62, "pyopensn.post.PostProcessor.GetValue", false]], "getvalue() (pyopensn.post.solverinfopostprocessor method)": [[65, "pyopensn.post.SolverInfoPostProcessor.GetValue", false]], "glcproductquadrature2drz (class in pyopensn.aquad)": [[14, "pyopensn.aquad.GLCProductQuadrature2DRZ", false]], "glcproductquadrature2dxy (class in pyopensn.aquad)": [[15, "pyopensn.aquad.GLCProductQuadrature2DXY", false]], "glcproductquadrature3dxyz (class in pyopensn.aquad)": [[16, "pyopensn.aquad.GLCProductQuadrature3DXYZ", false]], "glproductquadrature1dslab (class in pyopensn.aquad)": [[17, "pyopensn.aquad.GLProductQuadrature1DSlab", false]], "graphpartitioner (class in pyopensn.mesh)": [[51, "pyopensn.mesh.GraphPartitioner", false]], "importfrommshfiles() (pyopensn.mesh.surfacemesh method)": [[59, "pyopensn.mesh.SurfaceMesh.ImportFromMshFiles", false]], "importfromobjfile() (pyopensn.mesh.surfacemesh method)": [[59, "pyopensn.mesh.SurfaceMesh.ImportFromOBJFile", false]], "importfromtrianglefiles() (pyopensn.mesh.surfacemesh method)": [[59, "pyopensn.mesh.SurfaceMesh.ImportFromTriangleFiles", false]], "initialize() (pyopensn.diffusion.cfemdiffusionsolver method)": [[27, "pyopensn.diffusion.CFEMDiffusionSolver.Initialize", false]], "initialize() (pyopensn.diffusion.dfemdiffusionsolver method)": [[28, "pyopensn.diffusion.DFEMDiffusionSolver.Initialize", false]], "initialize() (pyopensn.diffusion.diffusionsolverbase method)": [[29, "pyopensn.diffusion.DiffusionSolverBase.Initialize", false]], "initialize() (pyopensn.fieldfunc.fieldfunctioninterpolationline method)": [[32, "pyopensn.fieldfunc.FieldFunctionInterpolationLine.Initialize", false]], "initialize() (pyopensn.fieldfunc.fieldfunctioninterpolationpoint method)": [[33, "pyopensn.fieldfunc.FieldFunctionInterpolationPoint.Initialize", false]], "initialize() (pyopensn.fieldfunc.fieldfunctioninterpolationvolume method)": [[34, "pyopensn.fieldfunc.FieldFunctionInterpolationVolume.Initialize", false]], "initialize() (pyopensn.solver.nonlinearkeigensolver method)": [[71, "pyopensn.solver.NonLinearKEigenSolver.Initialize", false]], "initialize() (pyopensn.solver.poweriterationkeigenscdsasolver method)": [[73, "pyopensn.solver.PowerIterationKEigenSCDSASolver.Initialize", false]], "initialize() (pyopensn.solver.poweriterationkeigensmmsolver method)": [[74, "pyopensn.solver.PowerIterationKEigenSMMSolver.Initialize", false]], "initialize() (pyopensn.solver.poweriterationkeigensolver method)": [[75, "pyopensn.solver.PowerIterationKEigenSolver.Initialize", false]], "initialize() (pyopensn.solver.prksolver method)": [[72, "pyopensn.solver.PRKSolver.Initialize", false]], "initialize() (pyopensn.solver.solver method)": [[76, "pyopensn.solver.Solver.Initialize", false]], "initialize() (pyopensn.solver.steadystatesolver method)": [[77, "pyopensn.solver.SteadyStateSolver.Initialize", false]], "initializewithargv() (in module pyopensn.context)": [[23, "pyopensn.context.InitializeWithArgv", false]], "inside() (pyopensn.logvol.booleanlogicalvolume method)": [[35, "pyopensn.logvol.BooleanLogicalVolume.Inside", false]], "inside() (pyopensn.logvol.logicalvolume method)": [[36, "pyopensn.logvol.LogicalVolume.Inside", false]], "inside() (pyopensn.logvol.rcclogicalvolume method)": [[37, "pyopensn.logvol.RCCLogicalVolume.Inside", false]], "inside() (pyopensn.logvol.rpplogicalvolume method)": [[38, "pyopensn.logvol.RPPLogicalVolume.Inside", false]], "inside() (pyopensn.logvol.spherelogicalvolume method)": [[39, "pyopensn.logvol.SphereLogicalVolume.Inside", false]], "inside() (pyopensn.logvol.surfacemeshlogicalvolume method)": [[40, "pyopensn.logvol.SurfaceMeshLogicalVolume.Inside", false]], "inv_velocity (pyopensn.xs.multigroupxs property)": [[80, "pyopensn.xs.MultiGroupXS.inv_velocity", false]], "is_fissionable (pyopensn.xs.multigroupxs property)": [[80, "pyopensn.xs.MultiGroupXS.is_fissionable", false]], "kbagraphpartitioner (class in pyopensn.mesh)": [[52, "pyopensn.mesh.KBAGraphPartitioner", false]], "lbsproblem (class in pyopensn.solver)": [[70, "pyopensn.solver.LBSProblem", false]], "lineargraphpartitioner (class in pyopensn.mesh)": [[53, "pyopensn.mesh.LinearGraphPartitioner", false]], "loadfromopenmc() (pyopensn.xs.multigroupxs method)": [[80, "pyopensn.xs.MultiGroupXS.LoadFromOpenMC", false]], "loadfromopensn() (pyopensn.xs.multigroupxs method)": [[80, "pyopensn.xs.MultiGroupXS.LoadFromOpenSn", false]], "locallyrefine() (pyopensn.aquad.sldfesquadrature method)": [[19, "pyopensn.aquad.SLDFESQuadrature.LocallyRefine", false]], "logicalvolume (class in pyopensn.logvol)": [[36, "pyopensn.logvol.LogicalVolume", false]], "meshcontinuum (class in pyopensn.mesh)": [[54, "pyopensn.mesh.MeshContinuum", false]], "meshgenerator (class in pyopensn.mesh)": [[55, "pyopensn.mesh.MeshGenerator", false]], "multigroupxs (class in pyopensn.xs)": [[80, "pyopensn.xs.MultiGroupXS", false]], "nonlinearkeigensolver (class in pyopensn.solver)": [[71, "pyopensn.solver.NonLinearKEigenSolver", false]], "norm() (pyopensn.math.vector3 method)": [[45, "pyopensn.math.Vector3.Norm", false]], "nu_delayed_sigma_f (pyopensn.xs.multigroupxs property)": [[80, "pyopensn.xs.MultiGroupXS.nu_delayed_sigma_f", false]], "nu_prompt_sigma_f (pyopensn.xs.multigroupxs property)": [[80, "pyopensn.xs.MultiGroupXS.nu_prompt_sigma_f", false]], "nu_sigma_f (pyopensn.xs.multigroupxs property)": [[80, "pyopensn.xs.MultiGroupXS.nu_sigma_f", false]], "num_groups (pyopensn.xs.multigroupxs property)": [[80, "pyopensn.xs.MultiGroupXS.num_groups", false]], "num_precursors (pyopensn.xs.multigroupxs property)": [[80, "pyopensn.xs.MultiGroupXS.num_precursors", false]], "omegas (pyopensn.aquad.angularquadrature property)": [[12, "pyopensn.aquad.AngularQuadrature.omegas", false]], "omegas (pyopensn.aquad.curvilinearquadrature property)": [[13, "pyopensn.aquad.CurvilinearQuadrature.omegas", false]], "omegas (pyopensn.aquad.glcproductquadrature2drz property)": [[14, "pyopensn.aquad.GLCProductQuadrature2DRZ.omegas", false]], "omegas (pyopensn.aquad.glcproductquadrature2dxy property)": [[15, "pyopensn.aquad.GLCProductQuadrature2DXY.omegas", false]], "omegas (pyopensn.aquad.glcproductquadrature3dxyz property)": [[16, "pyopensn.aquad.GLCProductQuadrature3DXYZ.omegas", false]], "omegas (pyopensn.aquad.glproductquadrature1dslab property)": [[17, "pyopensn.aquad.GLProductQuadrature1DSlab.omegas", false]], "omegas (pyopensn.aquad.productquadrature property)": [[18, "pyopensn.aquad.ProductQuadrature.omegas", false]], "omegas (pyopensn.aquad.sldfesquadrature property)": [[19, "pyopensn.aquad.SLDFESQuadrature.omegas", false]], "orthogonalmeshgenerator (class in pyopensn.mesh)": [[56, "pyopensn.mesh.OrthogonalMeshGenerator", false]], "petscgraphpartitioner (class in pyopensn.mesh)": [[57, "pyopensn.mesh.PETScGraphPartitioner", false]], "pointsource (class in pyopensn.source)": [[78, "pyopensn.source.PointSource", false]], "postprocessor (class in pyopensn.post)": [[62, "pyopensn.post.PostProcessor", false]], "poweriterationkeigenscdsasolver (class in pyopensn.solver)": [[73, "pyopensn.solver.PowerIterationKEigenSCDSASolver", false]], "poweriterationkeigensmmsolver (class in pyopensn.solver)": [[74, "pyopensn.solver.PowerIterationKEigenSMMSolver", false]], "poweriterationkeigensolver (class in pyopensn.solver)": [[75, "pyopensn.solver.PowerIterationKEigenSolver", false]], "print() (in module pyopensn.post)": [[63, "pyopensn.post.Print", false]], "printquadraturetofile() (pyopensn.aquad.sldfesquadrature method)": [[19, "pyopensn.aquad.SLDFESQuadrature.PrintQuadratureToFile", false]], "prksolver (class in pyopensn.solver)": [[72, "pyopensn.solver.PRKSolver", false]], "productquadrature (class in pyopensn.aquad)": [[18, "pyopensn.aquad.ProductQuadrature", false]], "rcclogicalvolume (class in pyopensn.logvol)": [[37, "pyopensn.logvol.RCCLogicalVolume", false]], "readangularfluxes() (pyopensn.solver.diffusiondfemsolver method)": [[67, "pyopensn.solver.DiffusionDFEMSolver.ReadAngularFluxes", false]], "readangularfluxes() (pyopensn.solver.discreteordinatescurvilinearproblem method)": [[68, "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem.ReadAngularFluxes", false]], "readangularfluxes() (pyopensn.solver.discreteordinatesproblem method)": [[69, "pyopensn.solver.DiscreteOrdinatesProblem.ReadAngularFluxes", false]], "readangularfluxes() (pyopensn.solver.lbsproblem method)": [[70, "pyopensn.solver.LBSProblem.ReadAngularFluxes", false]], "readfluxmoments() (pyopensn.solver.diffusiondfemsolver method)": [[67, "pyopensn.solver.DiffusionDFEMSolver.ReadFluxMoments", false]], "readfluxmoments() (pyopensn.solver.discreteordinatescurvilinearproblem method)": [[68, "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem.ReadFluxMoments", false]], "readfluxmoments() (pyopensn.solver.discreteordinatesproblem method)": [[69, "pyopensn.solver.DiscreteOrdinatesProblem.ReadFluxMoments", false]], "readfluxmoments() (pyopensn.solver.lbsproblem method)": [[70, "pyopensn.solver.LBSProblem.ReadFluxMoments", false]], "readfluxmomentsandmakesourcemoments() (pyopensn.solver.diffusiondfemsolver method)": [[67, "pyopensn.solver.DiffusionDFEMSolver.ReadFluxMomentsAndMakeSourceMoments", false]], "readfluxmomentsandmakesourcemoments() (pyopensn.solver.discreteordinatescurvilinearproblem method)": [[68, "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem.ReadFluxMomentsAndMakeSourceMoments", false]], "readfluxmomentsandmakesourcemoments() (pyopensn.solver.discreteordinatesproblem method)": [[69, "pyopensn.solver.DiscreteOrdinatesProblem.ReadFluxMomentsAndMakeSourceMoments", false]], "readfluxmomentsandmakesourcemoments() (pyopensn.solver.lbsproblem method)": [[70, "pyopensn.solver.LBSProblem.ReadFluxMomentsAndMakeSourceMoments", false]], "readsourcemoments() (pyopensn.solver.diffusiondfemsolver method)": [[67, "pyopensn.solver.DiffusionDFEMSolver.ReadSourceMoments", false]], "readsourcemoments() (pyopensn.solver.discreteordinatescurvilinearproblem method)": [[68, "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem.ReadSourceMoments", false]], "readsourcemoments() (pyopensn.solver.discreteordinatesproblem method)": [[69, "pyopensn.solver.DiscreteOrdinatesProblem.ReadSourceMoments", false]], "readsourcemoments() (pyopensn.solver.lbsproblem method)": [[70, "pyopensn.solver.LBSProblem.ReadSourceMoments", false]], "responseevaluator (class in pyopensn.response)": [[66, "pyopensn.response.ResponseEvaluator", false]], "rpplogicalvolume (class in pyopensn.logvol)": [[38, "pyopensn.logvol.RPPLogicalVolume", false]], "scalarmaterialfunction (class in pyopensn.math)": [[42, "pyopensn.math.ScalarMaterialFunction", false]], "scalarspatialfunction (class in pyopensn.math)": [[43, "pyopensn.math.ScalarSpatialFunction", false]], "scalarspatialmaterialfunction (class in pyopensn.math)": [[44, "pyopensn.math.ScalarSpatialMaterialFunction", false]], "scaling_factor (pyopensn.xs.multigroupxs property)": [[80, "pyopensn.xs.MultiGroupXS.scaling_factor", false]], "scattering_order (pyopensn.xs.multigroupxs property)": [[80, "pyopensn.xs.MultiGroupXS.scattering_order", false]], "setblockidfromfunction() (pyopensn.mesh.meshcontinuum method)": [[54, "pyopensn.mesh.MeshContinuum.SetBlockIDFromFunction", false]], "setblockidfromlogicalvolume() (pyopensn.mesh.meshcontinuum method)": [[54, "pyopensn.mesh.MeshContinuum.SetBlockIDFromLogicalVolume", false]], "setboundaryidfromlogicalvolume() (pyopensn.mesh.meshcontinuum method)": [[54, "pyopensn.mesh.MeshContinuum.SetBoundaryIDFromLogicalVolume", false]], "setbufferoptions() (pyopensn.response.responseevaluator method)": [[66, "pyopensn.response.ResponseEvaluator.SetBufferOptions", false]], "setcaliperconfig() (in module pyopensn.context)": [[24, "pyopensn.context.SetCaliperConfig", false]], "setdcoeffunction() (pyopensn.diffusion.cfemdiffusionsolver method)": [[27, "pyopensn.diffusion.CFEMDiffusionSolver.SetDCoefFunction", false]], "setdcoeffunction() (pyopensn.diffusion.dfemdiffusionsolver method)": [[28, "pyopensn.diffusion.DFEMDiffusionSolver.SetDCoefFunction", false]], "setdcoeffunction() (pyopensn.diffusion.diffusionsolverbase method)": [[29, "pyopensn.diffusion.DiffusionSolverBase.SetDCoefFunction", false]], "setfinalpoint() (pyopensn.fieldfunc.fieldfunctioninterpolationline method)": [[32, "pyopensn.fieldfunc.FieldFunctionInterpolationLine.SetFinalPoint", false]], "setinitialpoint() (pyopensn.fieldfunc.fieldfunctioninterpolationline method)": [[32, "pyopensn.fieldfunc.FieldFunctionInterpolationLine.SetInitialPoint", false]], "setlogicalvolume() (pyopensn.fieldfunc.fieldfunctioninterpolationvolume method)": [[34, "pyopensn.fieldfunc.FieldFunctionInterpolationVolume.SetLogicalVolume", false]], "setnumberofpoints() (pyopensn.fieldfunc.fieldfunctioninterpolationline method)": [[32, "pyopensn.fieldfunc.FieldFunctionInterpolationLine.SetNumberOfPoints", false]], "setoperationfunction() (pyopensn.fieldfunc.fieldfunctioninterpolationvolume method)": [[34, "pyopensn.fieldfunc.FieldFunctionInterpolationVolume.SetOperationFunction", false]], "setoperationtype() (pyopensn.fieldfunc.fieldfunctioninterpolationvolume method)": [[34, "pyopensn.fieldfunc.FieldFunctionInterpolationVolume.SetOperationType", false]], "setoptions() (pyopensn.diffusion.cfemdiffusionsolver method)": [[27, "pyopensn.diffusion.CFEMDiffusionSolver.SetOptions", false]], "setoptions() (pyopensn.diffusion.dfemdiffusionsolver method)": [[28, "pyopensn.diffusion.DFEMDiffusionSolver.SetOptions", false]], "setoptions() (pyopensn.diffusion.diffusionsolverbase method)": [[29, "pyopensn.diffusion.DiffusionSolverBase.SetOptions", false]], "setoptions() (pyopensn.response.responseevaluator method)": [[66, "pyopensn.response.ResponseEvaluator.SetOptions", false]], "setoptions() (pyopensn.solver.diffusiondfemsolver method)": [[67, "pyopensn.solver.DiffusionDFEMSolver.SetOptions", false]], "setoptions() (pyopensn.solver.discreteordinatescurvilinearproblem method)": [[68, "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem.SetOptions", false]], "setoptions() (pyopensn.solver.discreteordinatesproblem method)": [[69, "pyopensn.solver.DiscreteOrdinatesProblem.SetOptions", false]], "setoptions() (pyopensn.solver.lbsproblem method)": [[70, "pyopensn.solver.LBSProblem.SetOptions", false]], "setorthogonalboundaries() (pyopensn.mesh.meshcontinuum method)": [[54, "pyopensn.mesh.MeshContinuum.SetOrthogonalBoundaries", false]], "setprinteroptions() (in module pyopensn.post)": [[64, "pyopensn.post.SetPrinterOptions", false]], "setqextfunction() (pyopensn.diffusion.cfemdiffusionsolver method)": [[27, "pyopensn.diffusion.CFEMDiffusionSolver.SetQExtFunction", false]], "setqextfunction() (pyopensn.diffusion.dfemdiffusionsolver method)": [[28, "pyopensn.diffusion.DFEMDiffusionSolver.SetQExtFunction", false]], "setqextfunction() (pyopensn.diffusion.diffusionsolverbase method)": [[29, "pyopensn.diffusion.DiffusionSolverBase.SetQExtFunction", false]], "setrho() (pyopensn.solver.prksolver method)": [[72, "pyopensn.solver.PRKSolver.SetRho", false]], "setscalingfactor() (pyopensn.xs.multigroupxs method)": [[80, "pyopensn.xs.MultiGroupXS.SetScalingFactor", false]], "setsigmaafunction() (pyopensn.diffusion.cfemdiffusionsolver method)": [[27, "pyopensn.diffusion.CFEMDiffusionSolver.SetSigmaAFunction", false]], "setsigmaafunction() (pyopensn.diffusion.dfemdiffusionsolver method)": [[28, "pyopensn.diffusion.DFEMDiffusionSolver.SetSigmaAFunction", false]], "setsigmaafunction() (pyopensn.diffusion.diffusionsolverbase method)": [[29, "pyopensn.diffusion.DiffusionSolverBase.SetSigmaAFunction", false]], "setsourceoptions() (pyopensn.response.responseevaluator method)": [[66, "pyopensn.response.ResponseEvaluator.SetSourceOptions", false]], "setuniformblockid() (pyopensn.mesh.meshcontinuum method)": [[54, "pyopensn.mesh.MeshContinuum.SetUniformBlockID", false]], "setverbositylevel() (in module pyopensn.context)": [[25, "pyopensn.context.SetVerbosityLevel", false]], "sigma_a (pyopensn.xs.multigroupxs property)": [[80, "pyopensn.xs.MultiGroupXS.sigma_a", false]], "sigma_f (pyopensn.xs.multigroupxs property)": [[80, "pyopensn.xs.MultiGroupXS.sigma_f", false]], "sigma_t (pyopensn.xs.multigroupxs property)": [[80, "pyopensn.xs.MultiGroupXS.sigma_t", false]], "sldfesquadrature (class in pyopensn.aquad)": [[19, "pyopensn.aquad.SLDFESQuadrature", false]], "solver (class in pyopensn.solver)": [[76, "pyopensn.solver.Solver", false]], "solverinfopostprocessor (class in pyopensn.post)": [[65, "pyopensn.post.SolverInfoPostProcessor", false]], "spherelogicalvolume (class in pyopensn.logvol)": [[39, "pyopensn.logvol.SphereLogicalVolume", false]], "splitfilemeshgenerator (class in pyopensn.mesh)": [[58, "pyopensn.mesh.SplitFileMeshGenerator", false]], "steadystatesolver (class in pyopensn.solver)": [[77, "pyopensn.solver.SteadyStateSolver", false]], "step() (pyopensn.diffusion.cfemdiffusionsolver method)": [[27, "pyopensn.diffusion.CFEMDiffusionSolver.Step", false]], "step() (pyopensn.diffusion.dfemdiffusionsolver method)": [[28, "pyopensn.diffusion.DFEMDiffusionSolver.Step", false]], "step() (pyopensn.diffusion.diffusionsolverbase method)": [[29, "pyopensn.diffusion.DiffusionSolverBase.Step", false]], "step() (pyopensn.solver.nonlinearkeigensolver method)": [[71, "pyopensn.solver.NonLinearKEigenSolver.Step", false]], "step() (pyopensn.solver.poweriterationkeigenscdsasolver method)": [[73, "pyopensn.solver.PowerIterationKEigenSCDSASolver.Step", false]], "step() (pyopensn.solver.poweriterationkeigensmmsolver method)": [[74, "pyopensn.solver.PowerIterationKEigenSMMSolver.Step", false]], "step() (pyopensn.solver.poweriterationkeigensolver method)": [[75, "pyopensn.solver.PowerIterationKEigenSolver.Step", false]], "step() (pyopensn.solver.prksolver method)": [[72, "pyopensn.solver.PRKSolver.Step", false]], "step() (pyopensn.solver.solver method)": [[76, "pyopensn.solver.Solver.Step", false]], "step() (pyopensn.solver.steadystatesolver method)": [[77, "pyopensn.solver.SteadyStateSolver.Step", false]], "surfacemesh (class in pyopensn.mesh)": [[59, "pyopensn.mesh.SurfaceMesh", false]], "surfacemeshlogicalvolume (class in pyopensn.logvol)": [[40, "pyopensn.logvol.SurfaceMeshLogicalVolume", false]], "updatefieldfunctions() (pyopensn.diffusion.cfemdiffusionsolver method)": [[27, "pyopensn.diffusion.CFEMDiffusionSolver.UpdateFieldFunctions", false]], "updatefieldfunctions() (pyopensn.diffusion.dfemdiffusionsolver method)": [[28, "pyopensn.diffusion.DFEMDiffusionSolver.UpdateFieldFunctions", false]], "updatefieldfunctions() (pyopensn.diffusion.diffusionsolverbase method)": [[29, "pyopensn.diffusion.DiffusionSolverBase.UpdateFieldFunctions", false]], "usecolor() (in module pyopensn.context)": [[26, "pyopensn.context.UseColor", false]], "vector3 (class in pyopensn.math)": [[45, "pyopensn.math.Vector3", false]], "vectorspatialfunction (class in pyopensn.math)": [[46, "pyopensn.math.VectorSpatialFunction", false]], "volumetricsource (class in pyopensn.source)": [[79, "pyopensn.source.VolumetricSource", false]], "weights (pyopensn.aquad.angularquadrature property)": [[12, "pyopensn.aquad.AngularQuadrature.weights", false]], "weights (pyopensn.aquad.curvilinearquadrature property)": [[13, "pyopensn.aquad.CurvilinearQuadrature.weights", false]], "weights (pyopensn.aquad.glcproductquadrature2drz property)": [[14, "pyopensn.aquad.GLCProductQuadrature2DRZ.weights", false]], "weights (pyopensn.aquad.glcproductquadrature2dxy property)": [[15, "pyopensn.aquad.GLCProductQuadrature2DXY.weights", false]], "weights (pyopensn.aquad.glcproductquadrature3dxyz property)": [[16, "pyopensn.aquad.GLCProductQuadrature3DXYZ.weights", false]], "weights (pyopensn.aquad.glproductquadrature1dslab property)": [[17, "pyopensn.aquad.GLProductQuadrature1DSlab.weights", false]], "weights (pyopensn.aquad.productquadrature property)": [[18, "pyopensn.aquad.ProductQuadrature.weights", false]], "weights (pyopensn.aquad.sldfesquadrature property)": [[19, "pyopensn.aquad.SLDFESQuadrature.weights", false]], "writeangularfluxes() (pyopensn.solver.diffusiondfemsolver method)": [[67, "pyopensn.solver.DiffusionDFEMSolver.WriteAngularFluxes", false]], "writeangularfluxes() (pyopensn.solver.discreteordinatescurvilinearproblem method)": [[68, "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem.WriteAngularFluxes", false]], "writeangularfluxes() (pyopensn.solver.discreteordinatesproblem method)": [[69, "pyopensn.solver.DiscreteOrdinatesProblem.WriteAngularFluxes", false]], "writeangularfluxes() (pyopensn.solver.lbsproblem method)": [[70, "pyopensn.solver.LBSProblem.WriteAngularFluxes", false]], "writefluxmoments() (pyopensn.solver.diffusiondfemsolver method)": [[67, "pyopensn.solver.DiffusionDFEMSolver.WriteFluxMoments", false]], "writefluxmoments() (pyopensn.solver.discreteordinatescurvilinearproblem method)": [[68, "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem.WriteFluxMoments", false]], "writefluxmoments() (pyopensn.solver.discreteordinatesproblem method)": [[69, "pyopensn.solver.DiscreteOrdinatesProblem.WriteFluxMoments", false]], "writefluxmoments() (pyopensn.solver.lbsproblem method)": [[70, "pyopensn.solver.LBSProblem.WriteFluxMoments", false]], "x (pyopensn.math.vector3 property)": [[45, "pyopensn.math.Vector3.x", false]], "y (pyopensn.math.vector3 property)": [[45, "pyopensn.math.Vector3.y", false]], "ylm() (in module pyopensn.math)": [[47, "pyopensn.math.Ylm", false]], "z (pyopensn.math.vector3 property)": [[45, "pyopensn.math.Vector3.z", false]]}, "objects": {"pyopensn.aquad": [[12, 0, 1, "", "AngularQuadrature"], [13, 0, 1, "", "CurvilinearQuadrature"], [14, 0, 1, "", "GLCProductQuadrature2DRZ"], [15, 0, 1, "", "GLCProductQuadrature2DXY"], [16, 0, 1, "", "GLCProductQuadrature3DXYZ"], [17, 0, 1, "", "GLProductQuadrature1DSlab"], [18, 0, 1, "", "ProductQuadrature"], [19, 0, 1, "", "SLDFESQuadrature"]], "pyopensn.aquad.AngularQuadrature": [[12, 1, 1, "", "abscissae"], [12, 1, 1, "", "omegas"], [12, 1, 1, "", "weights"]], "pyopensn.aquad.CurvilinearQuadrature": [[13, 1, 1, "", "abscissae"], [13, 1, 1, "", "omegas"], [13, 1, 1, "", "weights"]], "pyopensn.aquad.GLCProductQuadrature2DRZ": [[14, 2, 1, "", "__init__"], [14, 1, 1, "", "abscissae"], [14, 1, 1, "", "omegas"], [14, 1, 1, "", "weights"]], "pyopensn.aquad.GLCProductQuadrature2DXY": [[15, 2, 1, "", "__init__"], [15, 1, 1, "", "abscissae"], [15, 1, 1, "", "omegas"], [15, 1, 1, "", "weights"]], "pyopensn.aquad.GLCProductQuadrature3DXYZ": [[16, 2, 1, "", "__init__"], [16, 1, 1, "", "abscissae"], [16, 1, 1, "", "omegas"], [16, 1, 1, "", "weights"]], "pyopensn.aquad.GLProductQuadrature1DSlab": [[17, 2, 1, "", "__init__"], [17, 1, 1, "", "abscissae"], [17, 1, 1, "", "omegas"], [17, 1, 1, "", "weights"]], "pyopensn.aquad.ProductQuadrature": [[18, 1, 1, "", "abscissae"], [18, 1, 1, "", "omegas"], [18, 1, 1, "", "weights"]], "pyopensn.aquad.SLDFESQuadrature": [[19, 2, 1, "", "LocallyRefine"], [19, 2, 1, "", "PrintQuadratureToFile"], [19, 2, 1, "", "__init__"], [19, 1, 1, "", "abscissae"], [19, 1, 1, "", "omegas"], [19, 1, 1, "", "weights"]], "pyopensn.context": [[20, 3, 1, "", "EnableCaliper"], [21, 3, 1, "", "EnablePETScErrorHandler"], [22, 3, 1, "", "Finalize"], [23, 3, 1, "", "InitializeWithArgv"], [24, 3, 1, "", "SetCaliperConfig"], [25, 3, 1, "", "SetVerbosityLevel"], [26, 3, 1, "", "UseColor"]], "pyopensn.diffusion": [[27, 0, 1, "", "CFEMDiffusionSolver"], [28, 0, 1, "", "DFEMDiffusionSolver"], [29, 0, 1, "", "DiffusionSolverBase"]], "pyopensn.diffusion.CFEMDiffusionSolver": [[27, 2, 1, "", "Advance"], [27, 2, 1, "", "Execute"], [27, 2, 1, "", "GetFieldFunctions"], [27, 2, 1, "", "Initialize"], [27, 2, 1, "", "SetDCoefFunction"], [27, 2, 1, "", "SetOptions"], [27, 2, 1, "", "SetQExtFunction"], [27, 2, 1, "", "SetSigmaAFunction"], [27, 2, 1, "", "Step"], [27, 2, 1, "", "UpdateFieldFunctions"], [27, 2, 1, "", "__init__"]], "pyopensn.diffusion.DFEMDiffusionSolver": [[28, 2, 1, "", "Advance"], [28, 2, 1, "", "Execute"], [28, 2, 1, "", "GetFieldFunctions"], [28, 2, 1, "", "Initialize"], [28, 2, 1, "", "SetDCoefFunction"], [28, 2, 1, "", "SetOptions"], [28, 2, 1, "", "SetQExtFunction"], [28, 2, 1, "", "SetSigmaAFunction"], [28, 2, 1, "", "Step"], [28, 2, 1, "", "UpdateFieldFunctions"], [28, 2, 1, "", "__init__"]], "pyopensn.diffusion.DiffusionSolverBase": [[29, 2, 1, "", "Advance"], [29, 2, 1, "", "Execute"], [29, 2, 1, "", "GetFieldFunctions"], [29, 2, 1, "", "Initialize"], [29, 2, 1, "", "SetDCoefFunction"], [29, 2, 1, "", "SetOptions"], [29, 2, 1, "", "SetQExtFunction"], [29, 2, 1, "", "SetSigmaAFunction"], [29, 2, 1, "", "Step"], [29, 2, 1, "", "UpdateFieldFunctions"]], "pyopensn.fieldfunc": [[30, 0, 1, "", "FieldFunction"], [31, 0, 1, "", "FieldFunctionGridBased"], [32, 0, 1, "", "FieldFunctionInterpolationLine"], [33, 0, 1, "", "FieldFunctionInterpolationPoint"], [34, 0, 1, "", "FieldFunctionInterpolationVolume"]], "pyopensn.fieldfunc.FieldFunctionGridBased": [[31, 2, 1, "", "ExportMultipleToVTK"]], "pyopensn.fieldfunc.FieldFunctionInterpolationLine": [[32, 2, 1, "", "AddFieldFunction"], [32, 2, 1, "", "Execute"], [32, 2, 1, "", "ExportToCSV"], [32, 2, 1, "", "GetFieldFunctionByName"], [32, 2, 1, "", "Initialize"], [32, 2, 1, "", "SetFinalPoint"], [32, 2, 1, "", "SetInitialPoint"], [32, 2, 1, "", "SetNumberOfPoints"], [32, 2, 1, "", "__init__"]], "pyopensn.fieldfunc.FieldFunctionInterpolationPoint": [[33, 2, 1, "", "AddFieldFunction"], [33, 2, 1, "", "Execute"], [33, 2, 1, "", "ExportToCSV"], [33, 2, 1, "", "GetFieldFunctionByName"], [33, 2, 1, "", "GetPointValue"], [33, 2, 1, "", "Initialize"], [33, 2, 1, "", "__init__"]], "pyopensn.fieldfunc.FieldFunctionInterpolationVolume": [[34, 2, 1, "", "AddFieldFunction"], [34, 2, 1, "", "Execute"], [34, 2, 1, "", "ExportToCSV"], [34, 2, 1, "", "GetFieldFunctionByName"], [34, 2, 1, "", "GetValue"], [34, 2, 1, "", "Initialize"], [34, 2, 1, "", "SetLogicalVolume"], [34, 2, 1, "", "SetOperationFunction"], [34, 2, 1, "", "SetOperationType"], [34, 2, 1, "", "__init__"]], "pyopensn.logvol": [[35, 0, 1, "", "BooleanLogicalVolume"], [36, 0, 1, "", "LogicalVolume"], [37, 0, 1, "", "RCCLogicalVolume"], [38, 0, 1, "", "RPPLogicalVolume"], [39, 0, 1, "", "SphereLogicalVolume"], [40, 0, 1, "", "SurfaceMeshLogicalVolume"]], "pyopensn.logvol.BooleanLogicalVolume": [[35, 2, 1, "", "Inside"], [35, 2, 1, "", "__init__"]], "pyopensn.logvol.LogicalVolume": [[36, 2, 1, "", "Inside"]], "pyopensn.logvol.RCCLogicalVolume": [[37, 2, 1, "", "Inside"], [37, 2, 1, "", "__init__"]], "pyopensn.logvol.RPPLogicalVolume": [[38, 2, 1, "", "Inside"], [38, 2, 1, "", "__init__"]], "pyopensn.logvol.SphereLogicalVolume": [[39, 2, 1, "", "Inside"], [39, 2, 1, "", "__init__"]], "pyopensn.logvol.SurfaceMeshLogicalVolume": [[40, 2, 1, "", "Inside"], [40, 2, 1, "", "__init__"]], "pyopensn.math": [[41, 0, 1, "", "Function"], [42, 0, 1, "", "ScalarMaterialFunction"], [43, 0, 1, "", "ScalarSpatialFunction"], [44, 0, 1, "", "ScalarSpatialMaterialFunction"], [45, 0, 1, "", "Vector3"], [46, 0, 1, "", "VectorSpatialFunction"], [47, 3, 1, "", "Ylm"]], "pyopensn.math.Function": [[41, 2, 1, "", "__init__"]], "pyopensn.math.ScalarMaterialFunction": [[42, 2, 1, "", "__call__"], [42, 2, 1, "", "__init__"]], "pyopensn.math.ScalarSpatialFunction": [[43, 2, 1, "", "__call__"], [43, 2, 1, "", "__init__"]], "pyopensn.math.ScalarSpatialMaterialFunction": [[44, 2, 1, "", "__call__"], [44, 2, 1, "", "__init__"]], "pyopensn.math.Vector3": [[45, 2, 1, "", "Norm"], [45, 2, 1, "", "__init__"], [45, 1, 1, "", "x"], [45, 1, 1, "", "y"], [45, 1, 1, "", "z"]], "pyopensn.math.VectorSpatialFunction": [[46, 2, 1, "", "__call__"], [46, 2, 1, "", "__init__"]], "pyopensn.mesh": [[48, 0, 1, "", "DistributedMeshGenerator"], [49, 0, 1, "", "ExtruderMeshGenerator"], [50, 0, 1, "", "FromFileMeshGenerator"], [51, 0, 1, "", "GraphPartitioner"], [52, 0, 1, "", "KBAGraphPartitioner"], [53, 0, 1, "", "LinearGraphPartitioner"], [54, 0, 1, "", "MeshContinuum"], [55, 0, 1, "", "MeshGenerator"], [56, 0, 1, "", "OrthogonalMeshGenerator"], [57, 0, 1, "", "PETScGraphPartitioner"], [58, 0, 1, "", "SplitFileMeshGenerator"], [59, 0, 1, "", "SurfaceMesh"]], "pyopensn.mesh.DistributedMeshGenerator": [[48, 2, 1, "", "Execute"], [48, 2, 1, "", "__init__"]], "pyopensn.mesh.ExtruderMeshGenerator": [[49, 2, 1, "", "Execute"], [49, 2, 1, "", "__init__"]], "pyopensn.mesh.FromFileMeshGenerator": [[50, 2, 1, "", "Execute"], [50, 2, 1, "", "__init__"]], "pyopensn.mesh.KBAGraphPartitioner": [[52, 2, 1, "", "__init__"]], "pyopensn.mesh.LinearGraphPartitioner": [[53, 2, 1, "", "__init__"]], "pyopensn.mesh.MeshContinuum": [[54, 2, 1, "", "ComputeVolumePerBlockID"], [54, 2, 1, "", "ExportToPVTU"], [54, 2, 1, "", "SetBlockIDFromFunction"], [54, 2, 1, "", "SetBlockIDFromLogicalVolume"], [54, 2, 1, "", "SetBoundaryIDFromLogicalVolume"], [54, 2, 1, "", "SetOrthogonalBoundaries"], [54, 2, 1, "", "SetUniformBlockID"], [54, 1, 1, "", "dimension"]], "pyopensn.mesh.MeshGenerator": [[55, 2, 1, "", "Execute"]], "pyopensn.mesh.OrthogonalMeshGenerator": [[56, 2, 1, "", "Execute"], [56, 2, 1, "", "__init__"]], "pyopensn.mesh.PETScGraphPartitioner": [[57, 2, 1, "", "__init__"]], "pyopensn.mesh.SplitFileMeshGenerator": [[58, 2, 1, "", "Execute"], [58, 2, 1, "", "__init__"]], "pyopensn.mesh.SurfaceMesh": [[59, 2, 1, "", "ImportFromMshFiles"], [59, 2, 1, "", "ImportFromOBJFile"], [59, 2, 1, "", "ImportFromTriangleFiles"], [59, 2, 1, "", "__init__"]], "pyopensn.post": [[60, 0, 1, "", "AggregateNodalValuePostProcessor"], [61, 0, 1, "", "CellVolumeIntegralPostProcessor"], [62, 0, 1, "", "PostProcessor"], [63, 3, 1, "", "Print"], [64, 3, 1, "", "SetPrinterOptions"], [65, 0, 1, "", "SolverInfoPostProcessor"]], "pyopensn.post.AggregateNodalValuePostProcessor": [[60, 2, 1, "", "Execute"], [60, 2, 1, "", "GetValue"], [60, 2, 1, "", "__init__"]], "pyopensn.post.CellVolumeIntegralPostProcessor": [[61, 2, 1, "", "Execute"], [61, 2, 1, "", "GetValue"], [61, 2, 1, "", "__init__"]], "pyopensn.post.PostProcessor": [[62, 2, 1, "", "Execute"], [62, 2, 1, "", "GetValue"]], "pyopensn.post.SolverInfoPostProcessor": [[65, 2, 1, "", "Execute"], [65, 2, 1, "", "GetValue"], [65, 2, 1, "", "__init__"]], "pyopensn.response": [[66, 0, 1, "", "ResponseEvaluator"]], "pyopensn.response.ResponseEvaluator": [[66, 2, 1, "", "ClearForwardSources"], [66, 2, 1, "", "EvaluateResponse"], [66, 2, 1, "", "SetBufferOptions"], [66, 2, 1, "", "SetOptions"], [66, 2, 1, "", "SetSourceOptions"], [66, 2, 1, "", "__init__"]], "pyopensn.solver": [[67, 0, 1, "", "DiffusionDFEMSolver"], [68, 0, 1, "", "DiscreteOrdinatesCurvilinearProblem"], [69, 0, 1, "", "DiscreteOrdinatesProblem"], [70, 0, 1, "", "LBSProblem"], [71, 0, 1, "", "NonLinearKEigenSolver"], [72, 0, 1, "", "PRKSolver"], [73, 0, 1, "", "PowerIterationKEigenSCDSASolver"], [74, 0, 1, "", "PowerIterationKEigenSMMSolver"], [75, 0, 1, "", "PowerIterationKEigenSolver"], [76, 0, 1, "", "Solver"], [77, 0, 1, "", "SteadyStateSolver"]], "pyopensn.solver.DiffusionDFEMSolver": [[67, 2, 1, "", "ComputeFissionRate"], [67, 2, 1, "", "CreateAndWriteSourceMoments"], [67, 2, 1, "", "GetFieldFunctions"], [67, 2, 1, "", "GetPowerFieldFunction"], [67, 2, 1, "", "GetScalarFieldFunctionList"], [67, 2, 1, "", "ReadAngularFluxes"], [67, 2, 1, "", "ReadFluxMoments"], [67, 2, 1, "", "ReadFluxMomentsAndMakeSourceMoments"], [67, 2, 1, "", "ReadSourceMoments"], [67, 2, 1, "", "SetOptions"], [67, 2, 1, "", "WriteAngularFluxes"], [67, 2, 1, "", "WriteFluxMoments"], [67, 2, 1, "", "__init__"]], "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem": [[68, 2, 1, "", "ComputeBalance"], [68, 2, 1, "", "ComputeFissionRate"], [68, 2, 1, "", "ComputeLeakage"], [68, 2, 1, "", "CreateAndWriteSourceMoments"], [68, 2, 1, "", "GetFieldFunctions"], [68, 2, 1, "", "GetPowerFieldFunction"], [68, 2, 1, "", "GetScalarFieldFunctionList"], [68, 2, 1, "", "ReadAngularFluxes"], [68, 2, 1, "", "ReadFluxMoments"], [68, 2, 1, "", "ReadFluxMomentsAndMakeSourceMoments"], [68, 2, 1, "", "ReadSourceMoments"], [68, 2, 1, "", "SetOptions"], [68, 2, 1, "", "WriteAngularFluxes"], [68, 2, 1, "", "WriteFluxMoments"], [68, 2, 1, "", "__init__"]], "pyopensn.solver.DiscreteOrdinatesProblem": [[69, 2, 1, "", "ComputeBalance"], [69, 2, 1, "", "ComputeFissionRate"], [69, 2, 1, "", "ComputeLeakage"], [69, 2, 1, "", "CreateAndWriteSourceMoments"], [69, 2, 1, "", "GetFieldFunctions"], [69, 2, 1, "", "GetPowerFieldFunction"], [69, 2, 1, "", "GetScalarFieldFunctionList"], [69, 2, 1, "", "ReadAngularFluxes"], [69, 2, 1, "", "ReadFluxMoments"], [69, 2, 1, "", "ReadFluxMomentsAndMakeSourceMoments"], [69, 2, 1, "", "ReadSourceMoments"], [69, 2, 1, "", "SetOptions"], [69, 2, 1, "", "WriteAngularFluxes"], [69, 2, 1, "", "WriteFluxMoments"], [69, 2, 1, "", "__init__"]], "pyopensn.solver.LBSProblem": [[70, 2, 1, "", "ComputeFissionRate"], [70, 2, 1, "", "CreateAndWriteSourceMoments"], [70, 2, 1, "", "GetFieldFunctions"], [70, 2, 1, "", "GetPowerFieldFunction"], [70, 2, 1, "", "GetScalarFieldFunctionList"], [70, 2, 1, "", "ReadAngularFluxes"], [70, 2, 1, "", "ReadFluxMoments"], [70, 2, 1, "", "ReadFluxMomentsAndMakeSourceMoments"], [70, 2, 1, "", "ReadSourceMoments"], [70, 2, 1, "", "SetOptions"], [70, 2, 1, "", "WriteAngularFluxes"], [70, 2, 1, "", "WriteFluxMoments"]], "pyopensn.solver.NonLinearKEigenSolver": [[71, 2, 1, "", "Advance"], [71, 2, 1, "", "Execute"], [71, 2, 1, "", "GetEigenvalue"], [71, 2, 1, "", "Initialize"], [71, 2, 1, "", "Step"], [71, 2, 1, "", "__init__"]], "pyopensn.solver.PRKSolver": [[72, 2, 1, "", "Advance"], [72, 2, 1, "", "Execute"], [72, 2, 1, "", "GetPeriod"], [72, 2, 1, "", "GetPopulationNew"], [72, 2, 1, "", "GetPopulationPrev"], [72, 2, 1, "", "GetSolutionNew"], [72, 2, 1, "", "GetSolutionPrev"], [72, 2, 1, "", "GetTimeNew"], [72, 2, 1, "", "GetTimePrev"], [72, 2, 1, "", "Initialize"], [72, 2, 1, "", "SetRho"], [72, 2, 1, "", "Step"], [72, 2, 1, "", "__init__"]], "pyopensn.solver.PowerIterationKEigenSCDSASolver": [[73, 2, 1, "", "Advance"], [73, 2, 1, "", "Execute"], [73, 2, 1, "", "GetEigenvalue"], [73, 2, 1, "", "Initialize"], [73, 2, 1, "", "Step"], [73, 2, 1, "", "__init__"]], "pyopensn.solver.PowerIterationKEigenSMMSolver": [[74, 2, 1, "", "Advance"], [74, 2, 1, "", "Execute"], [74, 2, 1, "", "GetEigenvalue"], [74, 2, 1, "", "Initialize"], [74, 2, 1, "", "Step"], [74, 2, 1, "", "__init__"]], "pyopensn.solver.PowerIterationKEigenSolver": [[75, 2, 1, "", "Advance"], [75, 2, 1, "", "Execute"], [75, 2, 1, "", "GetEigenvalue"], [75, 2, 1, "", "Initialize"], [75, 2, 1, "", "Step"], [75, 2, 1, "", "__init__"]], "pyopensn.solver.Solver": [[76, 2, 1, "", "Advance"], [76, 2, 1, "", "Execute"], [76, 2, 1, "", "Initialize"], [76, 2, 1, "", "Step"]], "pyopensn.solver.SteadyStateSolver": [[77, 2, 1, "", "Advance"], [77, 2, 1, "", "Execute"], [77, 2, 1, "", "Initialize"], [77, 2, 1, "", "Step"], [77, 2, 1, "", "__init__"]], "pyopensn.source": [[78, 0, 1, "", "PointSource"], [79, 0, 1, "", "VolumetricSource"]], "pyopensn.source.PointSource": [[78, 2, 1, "", "__init__"]], "pyopensn.source.VolumetricSource": [[79, 2, 1, "", "__init__"]], "pyopensn.xs": [[80, 0, 1, "", "MultiGroupXS"]], "pyopensn.xs.MultiGroupXS": [[80, 2, 1, "", "CreateSimpleOneGroup"], [80, 2, 1, "", "LoadFromOpenMC"], [80, 2, 1, "", "LoadFromOpenSn"], [80, 2, 1, "", "SetScalingFactor"], [80, 2, 1, "", "__init__"], [80, 1, 1, "", "chi"], [80, 1, 1, "", "inv_velocity"], [80, 1, 1, "", "is_fissionable"], [80, 1, 1, "", "nu_delayed_sigma_f"], [80, 1, 1, "", "nu_prompt_sigma_f"], [80, 1, 1, "", "nu_sigma_f"], [80, 1, 1, "", "num_groups"], [80, 1, 1, "", "num_precursors"], [80, 1, 1, "", "scaling_factor"], [80, 1, 1, "", "scattering_order"], [80, 1, 1, "", "sigma_a"], [80, 1, 1, "", "sigma_f"], [80, 1, 1, "", "sigma_t"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "property", "Python property"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "objtypes": {"0": "py:class", "1": "py:property", "2": "py:method", "3": "py:function"}, "terms": {"": [2, 4, 6, 8, 10, 11, 54, 58, 59, 65, 82, 83, 84, 85, 87, 88, 89, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "0": [0, 4, 5, 8, 10, 11, 25, 37, 38, 39, 42, 43, 44, 45, 46, 48, 49, 50, 54, 56, 58, 59, 67, 68, 69, 70, 80, 82, 83, 84, 85, 87, 88, 92, 93, 95, 99, 100, 101, 102, 108, 112], "000": 6, "00295639": 87, "00411458408211656": 87, "013": 85, "04": [8, 9], "044": 87, "05": 87, "09": 85, "0ac": 83, "0e": [0, 27, 28, 67, 68, 69, 70, 95], "0n": 84, "1": [0, 3, 27, 28, 37, 38, 39, 42, 43, 44, 45, 46, 48, 49, 50, 52, 53, 54, 56, 58, 67, 68, 69, 70, 80, 82, 83, 84, 85, 87, 88, 89, 92, 94, 95, 99, 100, 101, 102, 109], "10": [0, 4, 58, 85, 87, 92, 93, 95, 100, 101, 102], "100": [4, 5, 6, 67, 68, 69, 70, 92], "1000": 64, "100k": 5, "101": 85, "1016": [85, 87], "102": 87, "107": [87, 89], "1080": 87, "108848": 87, "109892": 89, "11": [8, 67, 68, 69, 70, 89], "111": [89, 92], "115": 87, "12": [0, 8, 9, 23, 45, 85, 89, 92], "120": 64, "123": 85, "1234": 0, "126": 87, "129": 85, "13": [4, 10, 11, 87, 89], "13182": 85, "133": 85, "136": 89, "137": 85, "138": 85, "14": 11, "140": 89, "144": 85, "145": 87, "147": 87, "14th": 89, "15": [0, 11, 64, 89, 93], "150": 92, "151": 85, "154": 85, "155": 87, "157": 85, "158": 85, "159": 87, "16": 4, "160": 85, "163": 85, "166": [85, 87], "167": 85, "169": 85, "17": [8, 9, 10, 89], "172": 5, "174": 87, "1767436": 87, "18": 5, "180": 93, "185": 85, "19": [4, 87], "194": 87, "195": 85, "1958": 85, "1961": 85, "1964": 85, "1965": 85, "1968": 85, "1969": 85, "197": 87, "1971": [85, 87], "1973": 85, "1974": 85, "1975": 85, "1976": 83, "1977": 85, "1978": 85, "1979": 83, "198": 89, "1982": [83, 87], "1984": [83, 87], "1986": 87, "1989": 85, "199": 89, "1992": 89, "1993": 87, "1996": 87, "1998": [87, 89], "1999": [87, 89], "1d": [17, 83, 85, 98], "1n": 84, "2": [27, 28, 42, 43, 44, 45, 46, 49, 58, 82, 83, 84, 85, 87, 89, 92, 95, 99, 100, 101, 108], "20": 11, "200": [5, 67, 68, 69, 70, 89], "2000": 89, "2001": 85, "2002": [87, 89], "2003": [85, 87], "2004": [87, 89], "2005": 85, "2008": 85, "2009": [85, 87, 89], "2010": [83, 85, 87], "2011": 85, "2012": 89, "2013": 89, "2014": [85, 87], "2015": 85, "2017": 85, "2019": 87, "2020": [5, 87], "2021": 89, "2022": 87, "2023": [10, 11, 87], "2024": [5, 87], "20435e": [67, 68, 69, 70], "20684": 83, "2123205": 87, "213": 85, "218": 87, "22": [8, 9, 85, 87], "228": 87, "230": 85, "2303107": 87, "233": 85, "24": 92, "245": 87, "248": 87, "253": 87, "255": [85, 89], "256": 85, "2573": 85, "263": 89, "264": 87, "268": 85, "274": 87, "28": [85, 87], "280": 85, "294": 112, "298": 85, "2d": [14, 15, 49, 83, 85, 87, 89, 92, 94, 95, 97, 98, 101], "2d_c5g7_coars": 103, "2n": 84, "2r": [82, 88], "3": [23, 25, 43, 44, 45, 46, 67, 68, 69, 70, 84, 85, 87, 89, 92, 93, 99, 110], "30": [89, 92, 93, 95], "300": 95, "3000": 5, "31": 85, "3178": 85, "3188": 85, "32": [4, 85], "32768": [67, 68, 69, 70], "33": 87, "333": 85, "34": 87, "348": 85, "356": 87, "357": 85, "36": 85, "369": [85, 87], "37": 4, "38": 4, "384": 87, "385": 85, "390": 85, "391": 85, "398": 87, "3d": [5, 16, 43, 83, 85, 92, 94, 97, 98], "3n": 84, "3r": [82, 88], "3rd": 0, "4": [4, 43, 45, 82, 83, 84, 85, 87, 92, 93, 95, 100, 102, 104, 105, 106], "40": 87, "400": 85, "411": 85, "425": 89, "442": 83, "45": [85, 87], "452": 83, "454": 5, "46": 87, "477": 89, "479": 85, "481": 89, "491": 5, "4imnyvpq": 83, "4x4": 89, "5": [4, 45, 49, 89, 92, 102, 108], "500": [27, 28], "500k": 5, "517": 87, "52": 85, "533": 87, "55": 102, "56": 85, "584": 5, "5990": 85, "6": [5, 44, 45, 46, 60, 61, 65, 67, 68, 69, 70, 85, 89, 95, 99], "62": 85, "64": [8, 10], "65": 89, "7": [5, 43, 45, 85, 87, 95, 102], "70": [4, 92], "72": 85, "73": 85, "75": 92, "763": 85, "788": 85, "8": [101, 103], "80": [24, 64], "82": 87, "83": 87, "8413": 87, "8426": 87, "856": 87, "869": 87, "87": 85, "873": 87, "89": 85, "893": 87, "89448": 83, "9": [9, 43, 87, 102], "931": 85, "939": 85, "978": 83, "9789048134113": 83, "99": 89, "A": [0, 4, 6, 8, 9, 10, 11, 34, 48, 49, 50, 56, 58, 64, 66, 67, 68, 69, 70, 83, 85, 87, 89, 91, 94, 96], "As": [82, 89], "At": [4, 87, 89], "By": [3, 67, 68, 69, 70], "FOR": [10, 11], "For": [0, 2, 8, 9, 83, 85, 87, 88, 89, 98], "If": [0, 2, 4, 8, 9, 10, 11, 19, 54, 58, 64, 67, 68, 69, 70, 83, 84, 89, 102], "In": [0, 3, 4, 8, 9, 10, 11, 22, 83, 84, 85, 87, 89, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "It": [4, 6, 8, 9, 10, 11, 53, 81, 83, 84, 85, 102], "NO": [8, 10, 11], "NOT": 4, "ON": [3, 8, 9, 10, 11], "Of": 84, "On": [4, 85, 88, 100, 101], "One": [82, 110], "Or": 10, "The": [0, 2, 3, 4, 8, 9, 10, 11, 32, 33, 34, 42, 43, 44, 46, 48, 49, 50, 58, 60, 64, 66, 67, 68, 69, 70, 82, 84, 85, 86, 87, 88, 89, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106], "Their": 85, "Then": [4, 8, 9, 10, 11, 66, 85, 87, 105], "There": [0, 10, 11], "These": [3, 10, 85, 87, 102], "To": [2, 4, 5, 8, 9, 10, 11, 66, 87, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "With": [66, 83, 88, 89], "_": [0, 4, 82, 83, 84, 85, 87, 88, 110], "_0": 82, "__call__": [42, 43, 44, 46], "__init__": [3, 14, 15, 16, 17, 19, 27, 28, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 52, 53, 56, 57, 58, 59, 60, 61, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 77, 78, 79, 80, 92], "__main__": [8, 9, 10, 11], "_c": 85, "_d": 85, "_f": 85, "_g": 87, "_j": 85, "_n": 82, "_power_gener": [67, 68, 69, 70], "_r": 83, "_t": 82, "_verts3d": 92, "_work": 23, "_x": 88, "_y": 88, "_z": [83, 88], "aah": 89, "about": 8, "abov": [10, 11, 83, 84, 85], "abscissa": [12, 13, 14, 15, 16, 17, 18, 19], "absorpt": [80, 84, 87], "acceler": [5, 6, 86], "accept": [42, 43, 44, 46], "access": [3, 4, 6, 100, 101, 105], "accomplish": [8, 9], "accord": 4, "account": [10, 11, 84, 85], "accuraci": 85, "achiev": 85, "acm": 89, "across": [6, 67, 68, 69, 70, 88], "act": 83, "action": [4, 23, 87], "activ": 4, "actual": [53, 82], "ad": [3, 10, 11, 66, 87, 91, 98], "ada01": 85, "adam": [85, 87, 89], "adapt": [6, 85], "add": [2, 4, 8, 9, 10, 11, 32, 33, 34, 66, 80, 84, 93], "add_artist": 92, "add_subplot": 92, "addfieldfunct": [32, 33, 34], "addfunct": 2, "addit": [3, 8, 9, 65, 67, 68, 69, 70, 83, 85, 98], "addition": [8, 9, 10, 11], "addparamet": 2, "addproperti": 2, "addstaticfunct": 2, "addvari": 2, "adequ": 85, "adjoint": [6, 66, 67, 68, 69, 70, 86], "adjust": 82, "administr": [8, 9], "advanc": [6, 27, 28, 29, 71, 72, 73, 74, 75, 76, 77], "advantag": 89, "affect": 89, "after": [0, 8, 10, 48, 49, 50, 56, 58, 60, 61, 65, 84], "ag": [67, 68, 69, 70], "against": 66, "aggreg": [6, 60, 86, 95], "ags_convergence_check": [67, 68, 69, 70], "ags_toler": [67, 68, 69, 70], "aka": 105, "akin": 87, "al": [85, 87, 89], "al02": 87, "alamo": 85, "albedo": 83, "alcouff": [52, 89], "algebra": 84, "algorithm": [6, 86, 89], "alias": 4, "align": [83, 85, 87], "all": [2, 3, 4, 5, 8, 9, 10, 11, 48, 53, 54, 58, 62, 64, 66, 67, 68, 69, 70, 76, 84, 85, 87, 89, 93, 95, 100, 101, 102], "all_to_rank": 53, "allow": [5, 21, 22, 59, 89, 91, 110], "along": [91, 92, 100, 101], "alongsid": 3, "alpha": [84, 92], "alreadi": 87, "also": [2, 3, 4, 8, 9, 10, 11, 23, 60, 61, 65, 82, 83, 85, 87, 88, 89, 95, 98, 103, 104, 105, 106], "altern": 4, "alwai": 85, "am93": 87, "amato": 89, "amend": [4, 83, 84, 85], "american": 89, "among": [60, 89], "amort": 89, "amount": [64, 87], "amplitud": 87, "an": [2, 4, 6, 8, 9, 10, 11, 19, 22, 27, 28, 29, 37, 38, 49, 52, 56, 60, 66, 79, 80, 82, 83, 84, 85, 87, 89, 95, 98, 105, 110, 112], "analys": 87, "analysi": [83, 85, 89], "analyt": 82, "ang_quad_plot": 93, "angl": [12, 13, 14, 15, 16, 17, 18, 19, 47, 86, 91, 92, 95], "angle_aggregation_num_subset": 95, "angular": [2, 3, 6, 12, 67, 68, 69, 70, 83, 85, 87, 88, 89, 92, 93, 94], "angular_quadratur": 95, "ani": [0, 4, 8, 9, 10, 11, 59, 85, 87, 88, 93], "anil": 87, "anisotrop": 87, "anisotropi": [83, 84], "anl": 8, "annal": 85, "anoth": [85, 102], "another_fil": 0, "another_member_variable_": 0, "answer": 87, "anthoni": 87, "api": [3, 6, 8, 9, 10, 11], "appear": [11, 48, 49, 50, 56, 58, 85], "append": [3, 10, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "appli": [6, 48, 49, 50, 56, 58, 85, 87, 89, 95, 102], "applic": [3, 8, 9, 10, 11, 85, 87, 89], "approach": [3, 8, 9, 10, 11, 22, 85, 88], "appropri": [10, 87, 92], "approxim": [6, 83, 85, 87], "apt": [8, 9], "aquad": [2, 3, 92, 93, 95], "ar": [0, 2, 3, 4, 6, 8, 9, 10, 11, 35, 49, 53, 54, 60, 61, 64, 65, 66, 67, 68, 69, 70, 82, 83, 84, 85, 87, 89, 91, 92, 95, 100, 101, 102, 106, 107, 108, 110, 111, 112], "arbitrari": [5, 6, 80, 85, 87, 89], "arbitrarili": 6, "archiv": 8, "arg": [3, 92], "argument": [3, 10, 11, 23, 32, 33, 34, 59, 93, 102], "argument_nam": 0, "argv": 23, "arithmet": 95, "around": 93, "arrai": [27, 28, 29, 79, 84, 95, 107, 108, 111, 112], "arriv": 80, "arrow": 92, "arrow3d": 92, "arrowstyl": 92, "articl": [4, 83, 85, 87], "as10": 83, "as_poli": 59, "ascii": [94, 109, 110], "aspect": [85, 95], "asset": [105, 106], "assign": [54, 89, 95, 100, 101, 102], "assist": [8, 9], "associ": [27, 28, 29, 40, 42, 43, 44, 46, 47, 49, 83, 85], "assum": [4, 8, 9, 10, 11, 85, 95], "assumpt": 83, "atexit": 22, "atom": 85, "attempt": [8, 9, 10, 11], "attent": 11, "auhtor": 6, "author": 4, "auto": 3, "autom": 9, "automat": [22, 49, 58, 64, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "autosquash": 4, "avail": [3, 6, 8, 9, 10, 11, 66, 89], "averag": [61, 82, 85, 87], "avg": [34, 60], "avg_func": 34, "avoid": [8, 9, 10, 11, 65, 87, 95], "ax": [87, 92], "axi": 95, "axial": 68, "azimuth": [12, 13, 14, 15, 16, 17, 18, 19, 47, 83, 85, 91, 92, 95], "azmi": 83, "b": [0, 3, 4, 23, 45, 85, 87, 89, 92], "b_": 85, "b_j": 85, "ba23": 87, "background": [6, 86], "bacw08": 85, "bad": 53, "bai08": 85, "bailei": [85, 89], "baker": [52, 89], "balanc": 84, "band": 93, "barbu": 87, "base": [19, 29, 31, 32, 33, 34, 37, 41, 52, 53, 54, 57, 62, 69, 70, 76, 85, 87, 95], "base_nam": [31, 32, 33, 34], "baseclassifbind": 3, "basenam": [92, 93, 99, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "bash": [8, 9], "bash_profil": [10, 11], "bashrc": [8, 9, 10, 11], "basi": [85, 89], "basic": [2, 53, 65, 89], "bcd": 89, "bchw00": 89, "becaus": 82, "becom": [6, 67, 68, 69, 70, 87], "been": [8, 9, 82, 87, 88, 89, 105], "befor": [2, 8, 9, 24, 85, 87, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "begin": [0, 20, 66, 82, 83, 85, 87, 88, 89], "beginclass": 2, "beginnamespac": 2, "behavior": 88, "being": 89, "bell": [83, 85], "below": [4, 8, 9, 89, 95, 99, 100, 101, 102, 103, 104, 105], "bengt": 85, "better": [4, 89], "between": [3, 5, 87, 92, 99, 102], "bf09": 89, "bg": 85, "bg79": 83, "big": [4, 82, 83], "bigcup": 85, "bilinear": 85, "bin": [10, 11, 23, 82], "binari": [0, 58, 87], "bind": [1, 6], "bison": [8, 9, 11], "bit": [8, 10], "bk98": 89, "bla": [8, 9], "block": [0, 2, 50, 54, 79, 94, 95, 97, 98], "block_id": [54, 79, 95], "block_id_fieldnam": 50, "block_id_sett": 54, "blockid": 50, "blv": 35, "bmatrix": [83, 88], "bnd_name": [68, 69], "boi": 88, "boltzmann": [2, 6, 70, 85, 86, 88, 89, 94], "book": 83, "bool": [8, 14, 15, 17, 19, 26, 35, 36, 37, 38, 39, 40, 48, 49, 50, 54, 56, 58, 59, 61, 64, 66, 67, 68, 69, 70], "boolean": [35, 93], "bosler": 85, "both": [0, 4, 8, 9, 10, 11, 49, 85, 95, 100, 101], "bottom": [49, 89], "bottom_boundary_nam": 49, "bound": 2, "boundari": [27, 28, 29, 49, 50, 54, 67, 68, 69, 70, 82, 85, 86, 88, 95, 98, 103, 104, 105], "boundary_condit": [27, 28, 29, 67, 68, 69, 70], "boundary_id_fieldnam": 50, "boundary_nam": 54, "box": 5, "brace": 0, "branch": 1, "breath": [8, 9, 10, 11], "breviti": [85, 87], "brew": [10, 11], "brian": 87, "brief": 89, "brinklei": 85, "britton": 89, "broadcast": 58, "broken": 85, "brown": 89, "browser": [8, 9, 10, 11], "bruce": 87, "bruno": 87, "bt": 87, "buffer": 66, "buffer_nam": 66, "build": [3, 23], "build_arg": 3, "build_ext": 3, "builder": 3, "built": [10, 11, 85, 94, 95, 109, 110], "bw": 87, "c": [1, 4, 6, 8, 9, 10, 11, 23, 80, 84, 85, 87, 89, 92, 93, 95, 108], "c5g7": 103, "c5g7_mesh_onli": 103, "c_i": 83, "cach": 89, "calc": 24, "calcul": [82, 84, 87, 89], "california": 85, "calip": [20, 24], "caliper_dir": 10, "call": [0, 2, 4, 22, 24, 43, 44, 46, 60, 61, 65, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106], "callabl": [42, 43, 44, 46, 54], "can": [2, 3, 4, 6, 8, 9, 10, 11, 22, 24, 49, 53, 66, 69, 82, 83, 84, 85, 87, 88, 89, 98], "cannot": 89, "capabl": 98, "captur": 84, "car71": 85, "carlson": 85, "carol": 89, "cartesian": [86, 95, 100], "case": [0, 4, 10, 22, 83, 85, 87, 89], "caus": [11, 64, 85], "cb58": 85, "cc": [0, 2, 8, 9, 10, 11], "ccm": 5, "cd": [8, 9, 10, 11], "cdot": [19, 82, 83, 85, 88, 93], "cell": [5, 6, 19, 42, 44, 50, 53, 54, 58, 61, 85, 88, 89, 95, 100, 101, 102], "cell_centroid": 54, "center": [5, 95, 100], "centroid": [54, 85, 93], "centuri": 83, "cert": 5, "certain": 88, "cfem": 27, "cfem_diffus": 0, "cfem_diffusion_solv": 0, "cflag": [8, 10], "chang": [2, 3, 4, 10, 11, 54, 83, 85, 89, 95], "char": 4, "charg": 85, "chebyshev": [14, 15, 16, 85, 91, 92, 95], "check": [4, 11, 35, 36, 37, 38, 39, 40, 67, 68, 69, 70, 80, 85, 87, 102], "checkout": 4, "cheuk": 85, "chi": [80, 84], "chi_": 83, "chi_p": 83, "choic": [4, 89, 91], "chosen": [84, 85, 87, 105], "circa": 5, "circular": 37, "cl61": 85, "cl65": 85, "clang": [3, 4, 8, 9], "clang_format": 4, "clarenc": 85, "clariti": 0, "class": [1, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 92, 95], "class_": 3, "clean": 4, "clear": [10, 11, 66, 67, 68, 69, 70, 82], "clear_boundary_condit": [67, 68, 69, 70], "clear_point_sourc": [67, 68, 69, 70], "clear_sourc": 66, "clear_volumetric_sourc": [67, 68, 69, 70], "clearforwardsourc": 66, "click": 105, "clone": 4, "close": [11, 87], "closest": 85, "closeup": 5, "clr": 92, "cls_name": 2, "cm": 89, "cmake": [3, 8, 9, 10, 11], "cmake_arg": 3, "cmake_prefix_path": [8, 9, 10, 11], "cmakelist": 11, "co": [19, 83, 92, 93], "coars": 87, "code": [1, 2, 3, 4, 8, 9, 10, 11, 82, 85, 89, 91, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "collect": 89, "collid": 87, "collis": [83, 87, 89], "colloc": [6, 85], "color": [5, 26, 92], "column": [64, 89], "columnar": 89, "com": [4, 8, 9, 10, 11, 83, 85, 87], "combin": [87, 89], "combinatori": 35, "comm_world": 95, "comma": 64, "command": [1, 3, 4, 8, 9, 10, 11, 23], "comment": [4, 80], "commiss": 85, "commit": 1, "common": [4, 89], "commun": [3, 8, 9, 10, 11, 89], "compani": 83, "compar": 5, "compat": [6, 8, 9, 10, 11], "compil": [0, 1, 6, 8, 9, 10, 11], "complain": 8, "complet": [4, 5, 8, 9, 10, 11, 58, 95], "complex": 89, "compon": [8, 9, 37, 87, 89], "compress": 4, "compris": 89, "comput": [3, 6, 47, 49, 54, 61, 66, 72, 82, 83, 84, 85, 87, 88, 89, 91, 102], "computation": 83, "compute_volume_averag": 61, "computebal": [68, 69], "computefissionr": [67, 68, 69, 70], "computeleakag": [68, 69], "computevolumeperblockid": 54, "concav": 5, "concentr": 83, "concept": [89, 95], "concis": 85, "concurr": 89, "condit": [10, 11, 67, 68, 69, 70, 82, 85, 86, 93, 95, 102], "cone": [19, 93], "cone_s": 19, "confer": [85, 89], "config": [24, 26], "configur": [3, 4, 24, 66, 87], "configure_depend": [9, 11], "conflict": [4, 8, 9, 10, 11], "connect": 85, "connor": 87, "consequ": 82, "conserv": [82, 83, 84], "consid": [85, 89], "consist": [8, 9, 10, 11, 85, 87], "consol": [2, 3, 22, 23, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "const": [0, 3], "construct": [2, 14, 15, 16, 17, 27, 28, 35, 37, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 52, 53, 56, 57, 58, 59, 60, 61, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 77, 78, 79, 85], "constructor": [3, 32, 33, 34, 41], "consult": [8, 10, 83, 85], "contain": [27, 28, 29, 32, 33, 34, 58, 59, 66, 67, 68, 69, 70, 83, 84, 85, 87, 89], "content": 89, "context": [92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "continu": [4, 27, 85], "continuum": 54, "contribut": [8, 9, 10, 11, 85, 87], "control": [8, 9, 58, 60, 61, 64, 65, 67, 68, 69, 70], "contruct": 2, "convent": [1, 85], "converg": [67, 68, 69, 70, 85, 87, 88, 89], "convert": [92, 93, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "convolv": 66, "coordin": [32, 37, 43, 44, 45, 46, 68, 78, 86, 92], "copi": [8, 9, 10, 11], "coptflag": [8, 10], "copyright": [10, 11], "corner": 89, "correct": [2, 10, 87], "correctli": [10, 11], "correspond": [0, 67, 68, 69, 70, 87], "cosin": [83, 92, 95], "cost": 89, "could": 89, "count": [4, 89], "coupl": 85, "cours": 84, "cover": 85, "cpath": 10, "cpp": [0, 3], "creat": [1, 2, 8, 9, 42, 43, 44, 46, 58, 67, 68, 69, 70, 80, 93, 95, 100, 101, 102, 103, 104, 105], "createandwritesourcemo": [67, 68, 69, 70], "createobjectptr": 2, "createsimpleonegroup": [80, 95, 108], "creation": [67, 68, 69, 70], "crimson": 92, "critic": 6, "cross": [2, 3, 6, 67, 68, 69, 70, 80, 82, 83, 85, 86, 88, 94], "csv": [32, 33, 34, 93], "csv_filenam": 64, "cube": 19, "cur_id": 102, "curl": [9, 11], "current": [3, 8, 10, 66, 67, 68, 69, 70, 71, 73, 74, 75, 83, 84, 85, 87, 88, 102], "curvilinear": [13, 68, 86], "custom": [65, 92], "customari": [83, 85], "cut": [5, 52, 100, 101], "cwm24": 87, "cxx": [8, 9, 10, 11], "cxxflag": [8, 10], "cxxoptflag": [8, 10], "cycl": [5, 85, 92], "cyclic": [5, 89], "cylind": 37, "cylindr": [83, 85], "d": [4, 9, 11, 23, 82, 83, 84, 85, 87, 88, 89, 92], "d_": 85, "d_skip": 92, "dagger": 82, "darkorang": 92, "daryl": 89, "dash": [4, 92], "data": [3, 5, 6, 27, 28, 29, 67, 68, 69, 70, 86, 89, 92, 105, 110], "data_typ": 0, "dataset_nam": 80, "date": [4, 6], "davi": 85, "dbuild_shared_lib": [8, 10], "dcmake_build_typ": [8, 10], "dcmake_cxx_flag": 8, "dcmake_install_prefix": [8, 10], "de": [83, 85], "deal": 23, "debug": [3, 8, 10], "decad": 6, "decai": 87, "decent": 53, "decim": [0, 60, 61, 65], "decompos": 89, "decomposit": [89, 95], "decreas": [85, 95], "def": [3, 22, 42, 43, 44, 46, 54, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "def_stat": 3, "def_submodul": 3, "default": [3, 14, 15, 17, 19, 23, 24, 25, 26, 27, 28, 32, 33, 34, 37, 38, 39, 45, 48, 49, 50, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70], "defin": [0, 3, 65, 66, 78, 79, 83, 84, 85, 87, 92, 98, 102], "definit": [84, 85, 86, 87, 89], "degener": 85, "degrad": 87, "degre": [47, 83, 93], "delai": [67, 68, 69, 70, 80, 83], "delet": 4, "delta": [4, 87], "demonstr": 102, "deng": 87, "denot": [80, 83, 84, 85, 87], "densiti": [83, 85, 87], "depart": 80, "depend": [5, 8, 9, 10, 11, 82, 83, 84, 85, 89], "depth": 92, "deriv": [69, 82, 87], "deriveclass": 2, "describ": [0, 83, 84, 85, 87], "descript": [0, 3, 4, 87, 89], "design": 6, "desir": [11, 66], "destin": 4, "det": 82, "detail": [1, 4, 8, 9, 10, 11, 85, 89, 95], "detector": 82, "determin": 54, "determinist": [6, 88], "dev": [8, 9], "develop": [2, 6], "devolv": [83, 85], "dfem": [28, 67], "dgfem": [85, 87], "dh76": 83, "dhawkin": 23, "dialect": 8, "dict": [27, 28, 29, 35, 49, 54, 60, 61, 65, 66, 67, 68, 69, 70], "dictat": 84, "dictionari": [27, 28, 29, 35, 49, 60, 61, 65, 66], "did": [4, 5], "diff": 4, "differ": [8, 9, 48, 65, 66, 87, 89], "differenti": [83, 85], "diffus": [3, 67, 85, 87], "diffusionsolverbas": [27, 28], "digit": [60, 61, 65, 67, 68, 69, 70], "dim": 92, "dimens": [54, 56, 84, 85, 95, 100, 101, 102], "dimension": [83, 85, 89, 92], "dir": [85, 95], "dir_as_plane_norm": 19, "direct": [2, 3, 5, 12, 13, 14, 15, 16, 17, 18, 19, 82, 83, 85, 89, 91, 102], "directli": 87, "directori": [0, 3, 8, 9, 10, 11, 58], "dirichlet": 82, "disabl": 26, "discontinu": [28, 85, 87, 90, 91, 94], "discret": [67, 68, 69, 70, 83, 86, 87, 89, 91, 95], "discreteordinatesproblem": [68, 95], "discuss": [85, 89], "displai": [60, 61, 65], "distinct": 87, "distribut": [6, 8, 9, 48, 83, 85, 86], "divid": [85, 89], "divis": 89, "dm79": 83, "do": [4, 8, 9, 67, 68, 69, 70, 82, 87, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "do_3d_project": 92, "doc": [3, 8, 9, 10, 11, 23, 110], "docstr": 3, "doctre": 23, "document": [2, 3], "docuument": 33, "doe": [2, 24, 59, 65, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "doi": [85, 87], "domain": [6, 54, 82, 83, 85, 87, 88, 89, 95, 98, 100, 101, 102], "domin": 87, "don": [0, 8, 9, 89], "done": [2, 4, 65, 87, 95], "dont_want": 10, "dopensn_with_doc": [3, 8, 9, 10, 11], "dopensn_with_python": [8, 9, 10, 11], "dorr": 89, "dose": 84, "dot": 82, "doubl": [0, 83, 85], "down": 4, "download": [8, 9, 10, 11], "downscatt": [85, 87, 89], "downstream": 89, "doxygen": [0, 8, 9, 11], "dpi": 92, "dragon": 110, "draw": 92, "driven": [6, 83], "dsa": 87, "dt": 82, "dualiti": 82, "duderstadt": 83, "due": [80, 82, 85, 87, 89], "dummi": 92, "dump": [67, 68, 69, 70], "dure": [3, 67, 68, 69, 70, 88], "dvtk_build_test": 8, "dvtk_group_enable_imag": [8, 10], "dvtk_group_enable_qt": [8, 10], "dvtk_group_enable_rend": [8, 10], "dvtk_group_enable_standalon": [8, 10], "dvtk_group_enable_web": [8, 10], "dvtk_group_mpi": 8, "dvtk_module_use_external_vtk_hdf5": [8, 10], "dvtk_use_mpi": 10, "dwith_kokko": 8, "dwith_mpi": 8, "dx": [95, 100, 101, 102], "dx_geo": 102, "dynam": 6, "e": [3, 4, 6, 8, 9, 50, 83, 84, 85, 87, 88, 89, 95, 98, 110], "e_": [83, 85], "e_g": 85, "each": [8, 9, 10, 11, 27, 28, 29, 35, 48, 49, 50, 56, 58, 65, 67, 68, 69, 70, 84, 85, 87, 89, 93, 95, 100, 101], "earli": 87, "earlier": 85, "easi": [6, 7, 85], "easier": 4, "easiest": 4, "easili": 85, "eddington": 87, "edg": 85, "edit": 4, "editor": 4, "edward": 87, "ee": 89, "eff": [83, 87], "effect": [6, 84, 85, 87], "effici": [6, 87, 89], "eigen": [71, 73, 74, 75], "eigenproblem": 87, "eigenvalu": [6, 69, 71, 73, 74, 75, 83, 87], "either": [3, 10, 49, 82, 83, 98], "elast": 84, "element": [6, 19, 27, 28, 32, 33, 34, 45, 85, 87, 90, 91, 94], "ell": [82, 83, 84, 85, 88], "elmer": 83, "els": 2, "elsewher": [67, 68, 69, 70, 92], "em": 85, "email": 4, "embed": [2, 5], "emg": 49, "emploi": [6, 83, 84, 85, 87, 102], "empti": [0, 3, 4, 32, 33, 34, 41, 64, 67, 68, 69, 70, 80], "en": 110, "enabl": [3, 26, 67, 68, 69, 70], "enablecalip": 24, "enclos": 0, "encod": 85, "end": [0, 2, 22, 82, 83, 85, 87, 88, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "endclass": 2, "endnamespac": 2, "energi": [5, 6, 67, 68, 69, 70, 80, 82, 83, 84, 86, 87, 88, 95], "enforc": 64, "engin": [83, 85, 87, 89], "ensight": 98, "ensur": [8, 9, 10, 11, 60, 61, 65], "entir": 87, "entri": [52, 82, 85, 95], "enum": 1, "enum_value_1": 0, "enum_value_2": 0, "enumer": 4, "environ": [3, 10, 22, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "eq": 85, "equal": [83, 85], "equat": [3, 6, 82, 85, 86, 87, 88, 89], "equatori": 85, "equiv": 85, "equival": [53, 85], "erin": 87, "error": [8, 9, 10, 11, 21, 22, 85, 87], "essenti": [2, 8, 9], "establish": 69, "estim": 87, "et": [85, 87, 89], "eta": 83, "etc": [8, 9, 10], "eugen": 83, "evalu": [3, 6, 42, 43, 44, 46, 47, 66, 82, 83, 85, 87], "evaluaterespons": 66, "even": [4, 10, 11], "evenli": [100, 101, 102], "event": [2, 22, 60, 61, 64, 65, 83, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "event_nam": [60, 61, 62, 65], "events_on_which_to_print_postproc": 64, "everi": [4, 8, 9, 88], "everyth": [3, 10], "ew": 87, "exact": 87, "exampl": [0, 2, 3, 4, 8, 9, 35, 42, 43, 44, 45, 46, 49, 54, 82, 84, 85, 88, 89, 92, 94, 96], "exascal": 5, "except": 0, "exclud": 35, "execut": [6, 10, 11, 22, 27, 28, 29, 32, 33, 34, 48, 49, 50, 55, 56, 58, 60, 61, 62, 65, 71, 72, 73, 74, 75, 76, 77, 89, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "execute_on": [60, 61, 65], "exhibit": 87, "exist": [0, 2, 66], "exodu": 98, "expand": 83, "expans": [67, 68, 69, 70, 84, 86], "expect": 110, "expens": 83, "experi": 5, "explain": 2, "explanatori": 2, "explicit": [85, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "explicitli": [3, 22], "export": [8, 9, 10, 11, 31, 32, 33, 34, 67, 68, 69, 70, 95, 99, 103, 104, 105, 106], "exportmultipletovtk": [31, 95], "exporttocsv": [32, 33, 34], "exporttopvtu": [54, 99, 100, 101, 102, 103, 104, 105, 106], "express": 83, "ext": [0, 82, 83, 85, 87], "extend": 89, "extens": 3, "extern": [82, 83, 85, 87, 95], "extra": 3, "extract": [8, 95], "extrud": [49, 94, 97], "extruded_mesh_onli": 99, "extrudermeshgener": 99, "extrus": [37, 49], "f": [3, 4, 42, 43, 44, 46, 82, 83, 84, 85, 87, 93, 95], "f1b3ad0": 4, "f77": [10, 11], "f77flag": [8, 10], "f90flag": [8, 10], "f_": 84, "f_0": [82, 83], "face": [59, 85], "facess": 54, "facet": 59, "facilit": 3, "fact": 83, "factor": [67, 68, 69, 70, 80, 87], "factori": 102, "fail": [8, 10], "falgout": 89, "fallow": [10, 11], "fals": [14, 15, 17, 19, 35, 38, 48, 49, 50, 56, 58, 59, 61, 64, 66, 67, 68, 69, 70, 87, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "fancyarrowpatch": 92, "fashion": 87, "fast": 87, "faster": [4, 85], "favorit": [8, 9, 11], "fblaslapack": [8, 10], "fc": [8, 9, 10, 11, 87], "fcflag": [8, 10, 11], "featur": [3, 4, 6], "ff": [32, 33, 34], "ff_list": 31, "ff_name": [32, 33, 34], "fffea64": 4, "fflag": [8, 10, 11], "fflist": 95, "fichtl": 87, "fidel": [48, 49, 50, 56, 58], "field": [2, 3, 6, 27, 28, 29, 30, 31, 32, 33, 34, 42, 50, 60, 61, 67, 68, 69, 70], "field_function_prefix": [67, 68, 69, 70], "field_function_prefix_opt": [67, 68, 69, 70], "fieldfunc": [2, 3, 27, 28, 29, 67, 68, 69, 70, 95], "fieldfunct": [32, 33, 34], "fieldfunctiongridbas": [27, 28, 29, 67, 68, 69, 70, 95], "fieldfunctioninterpol": [32, 33, 34], "fieldfunctioninterpolationlin": 33, "fig": 92, "figur": [3, 89, 92], "file": [1, 3, 4, 8, 9, 10, 11, 19, 32, 33, 34, 50, 54, 58, 59, 64, 66, 67, 68, 69, 70, 80, 92, 93, 94, 95, 97, 98, 100, 101, 102, 108, 109, 110], "file_bas": [19, 67, 68, 69, 70], "file_base_nam": 54, "file_nam": [59, 80], "file_name1": 0, "file_name2": 0, "file_prefix": 58, "filenam": [50, 59, 99, 103, 104, 105, 106], "filepath": [103, 112], "files_to_remov": 93, "filter": [60, 61, 65], "final": [32, 48, 49, 50, 55, 56, 58, 82, 83, 85], "finalize_env": [22, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "find": [2, 10], "fine": 87, "finish": [4, 89], "finit": [6, 19, 27, 28, 85, 87, 90, 91, 94], "first": [0, 2, 4, 8, 9, 10, 11, 82, 87, 88, 89, 93, 94, 96, 100, 101], "first_exampl": 95, "fissil": 80, "fission": [67, 68, 69, 70, 80, 82, 83, 84, 85, 87], "fit": [0, 10, 11], "fix": [1, 60, 61, 65, 67, 68, 69, 70, 85, 87], "fixup": 4, "flag": [38, 48, 49, 50, 56, 58, 61, 66, 67, 68, 69, 70], "flake8": 4, "flex": [8, 9], "flexibl": [3, 89], "flight": 83, "float": [19, 27, 28, 33, 34, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 56, 58, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80], "floating_point": [60, 61, 65], "flop": 89, "flux": [6, 67, 68, 69, 70, 83, 85, 86, 88, 89, 91, 95], "focu": 85, "fold": 66, "folder": [3, 58, 93], "follow": [0, 2, 3, 4, 8, 9, 10, 11, 22, 80, 82, 83, 87, 89, 92, 93, 98, 99], "foo": [42, 43, 44, 46], "fopenmp": [8, 10], "foptflag": [8, 10], "foral": [82, 83], "forc": 3, "forcibli": 3, "forget": 4, "fork": [4, 8, 9, 10, 11], "form": [4, 5, 85, 87, 89], "formal": [6, 86, 87], "format": [0, 1, 3, 8, 9, 10, 11, 31, 54, 59, 60, 61, 64, 65, 80, 95, 98, 100, 101, 102, 105, 107, 111], "formul": 85, "formula": 84, "forth": 84, "forward": [66, 82], "found": [4, 6, 93], "foundat": [10, 11], "four": [89, 95], "fpic": [8, 10], "frac": [82, 83, 84, 85, 87, 108], "fraction": 0, "framework": 0, "free": [10, 11, 87], "from": [2, 4, 6, 8, 9, 10, 11, 19, 22, 35, 42, 43, 44, 46, 50, 54, 59, 60, 61, 65, 66, 67, 68, 69, 70, 78, 80, 82, 83, 84, 85, 87, 92, 93, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111], "fromfilemeshgener": [99, 103, 104, 105, 106], "ftp": 8, "fu": 89, "full": [48, 49, 50, 56, 58, 67, 68, 69, 70, 89], "fulli": [6, 8, 9, 10, 11, 85, 87], "fun": 4, "func": [27, 28, 29, 42, 43, 44, 46, 54, 79, 102], "function": [0, 1, 3, 6, 8, 9, 10, 11, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 42, 43, 44, 46, 54, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 82, 83, 85, 102], "further": 85, "futur": [1, 4, 91, 98], "fuzzi": 95, "fw": 85, "fwp09": 87, "fyi": 105, "g": [3, 6, 8, 9, 10, 11, 42, 43, 44, 46, 80, 82, 84, 85, 87, 88, 89, 92, 95, 110], "g_": [85, 88, 89], "g_t": 82, "gain": 83, "galerkin": 85, "gamma": [6, 82, 83, 84, 85], "gather": [82, 83, 85], "gauss": [14, 15, 16, 17, 85, 91, 92, 95], "gb": 5, "gcc": 11, "gdh69": 85, "ge": [84, 85], "gelbard": 85, "gener": [2, 3, 5, 8, 9, 10, 11, 19, 22, 36, 45, 48, 49, 50, 51, 55, 56, 58, 60, 61, 65, 67, 68, 69, 70, 72, 87, 89, 94, 97, 98, 103, 104, 105, 108, 110], "geometr": 89, "geometri": [14, 15, 16, 17, 49, 85, 87, 89, 92, 95, 100, 102], "georg": 83, "get": [0, 4, 27, 28, 29, 32, 33, 34, 60, 67, 68, 69, 70, 72, 80, 89, 93, 102], "get_ipython": [22, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "get_proj": 92, "geteigenvalu": [71, 73, 74, 75], "getfieldfunct": [27, 28, 29, 67, 68, 69, 70], "getfieldfunctionbynam": [32, 33, 34], "getglobalnamespac": 2, "getmemb": 0, "getperiod": 72, "getpointvalu": 33, "getpopulationnew": 72, "getpopulationprev": 72, "getpowerfieldfunct": [67, 68, 69, 70], "getscalarfieldfunctionlist": [67, 68, 69, 70, 95], "getsolutionnew": 72, "getsolutionprev": 72, "gettimenew": 72, "gettimeprev": 72, "getvalu": [34, 60, 61, 62, 65], "gfortran": [8, 9, 10, 11], "ghp99": 87, "gi": 85, "git": [4, 8, 9, 10, 11], "github": [4, 8, 9, 10, 11], "give": [87, 89, 95, 100, 101], "given": [32, 33, 34, 82, 83, 84, 85, 87, 89, 93, 95, 102], "glasston": 83, "glcproductquadrature2dxi": [92, 95], "glob": 93, "global": [2, 3, 85, 87, 88], "global_id": 53, "gmre": 87, "gmres_restart_interv": 95, "gmsh": [59, 94, 97, 98], "gmsh_alltet": [105, 106], "gnu": 10, "go": 4, "goal": 85, "goe": 85, "gold": 98, "gone": 23, "good": [8, 9, 83, 87], "googl": 83, "gov": 8, "gprime": 80, "graph": [51, 52, 53, 57, 85, 89], "graphit": [5, 87], "graphpartition": [48, 49, 50, 56, 58], "greater": [58, 84], "greatli": 89, "grei": 92, "grid": [6, 31, 52, 53, 54, 85, 87, 89, 94, 95, 97, 98, 99, 103, 104, 105, 106], "grid2": [100, 101], "group": [0, 2, 5, 46, 67, 68, 69, 70, 78, 79, 80, 82, 83, 84, 85, 86, 88, 94, 95, 109, 110], "group_strength": [79, 95], "groups_from_to": 95, "groupset": [67, 68, 69, 70, 95], "gtrless": [82, 88], "guid": [2, 4, 6], "guthri": 87, "gz": 8, "h": [0, 3, 49, 82, 83, 85, 87], "h5": 112, "h_t": 82, "ha": [4, 8, 9, 11, 82, 85, 87, 89], "had": [2, 105], "hageman": 85, "half": 88, "hamilton": 83, "hand": 85, "handl": [6, 48, 49, 50, 56, 58, 66, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "handler": 21, "hanebutt": 89, "hanu": 87, "happen": 93, "harbour": 87, "hard": 4, "harmon": [47, 67, 68, 69, 70, 83], "hash": 4, "have": [0, 2, 3, 4, 8, 9, 67, 68, 69, 70, 83, 84, 85, 87, 88, 89, 92, 95, 100, 101, 105], "hawkin": 89, "hdf5": [94, 109, 110], "header": 0, "heat": [84, 88], "heavi": 87, "help": [3, 4, 8, 9], "henc": [82, 83, 84, 85, 87, 88, 92, 93], "here": [4, 69, 92, 93, 95, 100, 101, 105, 107, 108, 111, 112], "hereaft": 83, "heterogen": 98, "hhr": 87, "high": [5, 84, 85, 87, 89], "higher": [85, 87], "highest": 83, "highli": [4, 87], "hil75": 85, "hill": 85, "hiromi": 85, "histori": [64, 65], "hl92": 89, "hold": 82, "hollowai": 87, "home": 23, "homebrew": [10, 11], "homogen": [95, 100, 101], "horizont": 64, "hous": [95, 98, 100, 101], "how": [2, 4, 95], "howev": [22, 84, 85, 87, 89, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "hr20": 87, "hsa": 89, "html": [8, 9, 10, 11, 23, 110], "http": [4, 8, 9, 10, 11, 83, 85, 87, 110], "hybrid": 85, "hypr": [8, 10], "i": [0, 2, 3, 4, 6, 8, 9, 10, 11, 22, 23, 25, 26, 35, 36, 37, 38, 39, 40, 42, 43, 44, 46, 48, 49, 52, 53, 54, 58, 59, 64, 65, 66, 67, 68, 69, 70, 72, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 92, 93, 95, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 110, 111, 112], "ic": 89, "id": [42, 44, 50, 54, 79, 83, 94, 97, 98, 103, 104, 105], "idaho": 89, "idea": [8, 9, 87], "identif": 85, "identifi": 4, "ignor": [3, 38, 58, 67, 68, 69, 70, 84], "ii": [85, 98], "illustr": 89, "img": 3, "immedi": [24, 89], "implement": 87, "implicitli": [8, 9, 10, 11], "import": [8, 9, 10, 11, 22, 82, 85, 89, 92, 93, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "importfrommshfil": 59, "importfromobjfil": 59, "importfromtrianglefil": 59, "impos": 83, "inc": [10, 11, 82, 83], "incid": 89, "includ": [3, 6, 8, 10, 35, 67, 68, 69, 70, 82, 83, 84, 85, 89], "inclus": 24, "incom": [83, 85], "incorpor": [8, 9, 10, 11], "increas": [56, 83, 89, 95], "indent": 3, "index": [8, 9, 10, 11, 53, 67, 68, 69, 70, 85, 87, 95, 110], "indic": [8, 10, 59, 67, 68, 69, 70, 85], "individu": 48, "induc": 5, "inelast": 84, "infi": 38, "infinit": 87, "inflow": 85, "info": 65, "inform": [4, 8, 9, 65, 66, 83, 89, 105], "infx": 38, "infz": 38, "inherit": 2, "inhomogen": 87, "init": 3, "initi": [27, 28, 29, 32, 33, 34, 60, 61, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 82, 84, 86, 92, 93, 95, 102], "initial_valu": [60, 61, 65], "inner": [67, 68, 69, 70, 82, 85, 87], "inner_linear_method": 95, "innermost": 89, "inplac": 3, "input": [4, 27, 28, 42, 43, 44, 46, 48, 49, 50, 56, 58, 80, 84, 99, 110], "inputparamet": 2, "ins": 1, "inscatt": 85, "inscrib": 19, "insert": 99, "insid": [0, 2, 35, 36, 37, 38, 39, 40, 54], "instal": [3, 6, 95], "install_top": [8, 10], "instead": [0, 53, 58], "instruct": [3, 4, 8, 9, 10, 11], "int": [0, 3, 14, 15, 16, 17, 19, 25, 27, 28, 32, 42, 44, 46, 47, 52, 53, 54, 58, 59, 60, 61, 64, 65, 67, 68, 69, 70, 79, 83, 92], "int_": [82, 83, 85, 88], "int_0": 82, "integr": [61, 82, 83, 85], "intend": [11, 89], "intens": 3, "interact": [0, 4, 83, 84, 92], "interest": [66, 82, 88], "interfac": [3, 6, 95, 102], "interior": [85, 87, 88], "intern": [3, 52, 85, 89], "interplai": 89, "interpol": [32, 33, 34], "interpret": [9, 19, 22, 82], "interv": [67, 68, 69, 70, 85], "introduc": [11, 82, 83, 85, 89, 95], "introduct": [83, 86, 90, 94, 97, 109], "inv_veloc": 80, "invers": [80, 87], "invok": 22, "ipynb": [92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "ipython": [22, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "ipython_inst": [22, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "is_fission": 80, "isbn": 83, "isotrop": [79, 83, 84, 95, 108, 110], "issu": [4, 11, 95], "iter": [6, 66, 67, 68, 69, 70, 73, 74, 75, 85, 86, 88, 89], "itertool": 92, "its": [3, 10, 78, 83, 85, 87, 89], "j": [3, 8, 9, 10, 11, 83, 85, 87, 88], "jae": 85, "jame": [83, 85, 87], "jan": 89, "jcp": [85, 87], "je": 87, "jean": [85, 87, 89], "jim": [85, 87, 89], "job": 3, "john": [83, 85], "journal": [6, 85, 87, 89], "jp": 87, "jr": 85, "jupyt": 22, "just": 58, "k": [69, 71, 73, 74, 75, 83, 85, 87, 89, 92], "k_": [83, 87], "k_eff": 5, "kappa": [67, 68, 69, 70, 84], "kay": 85, "kba": [5, 52, 89, 98, 105], "kba92": 89, "kbagraphpartition": [95, 100, 101], "kd": 85, "kebab": 0, "keep": [89, 95], "kei": [2, 4, 35, 54], "kenneth": 89, "kept": 95, "kernel": 89, "keyword": 0, "kib": 4, "kill": 23, "kineat": 72, "kinet": 72, "known": [82, 83, 85, 87], "koch": [52, 89], "krieger": 83, "krylov": 86, "kwarg": [27, 28, 29, 35, 37, 38, 39, 40, 48, 49, 50, 52, 53, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 92], "l": [2, 47, 83, 85, 87, 88, 89, 100, 101, 102], "l2": [67, 68, 69, 70], "l_": [82, 83, 84, 85], "l_abs_tol": 95, "l_g": 87, "l_max_it": 95, "la": 85, "la17": 85, "lab": 85, "label": 85, "laboratori": 85, "lag": [85, 87], "lambda": [42, 43, 44, 46, 54, 87], "langl": 82, "laptop": 6, "lar84": 87, "larg": [6, 67, 68, 69, 70, 87], "largest": 87, "larsen": 87, "last": [72, 93], "lat68": 85, "lat71": 85, "later": 6, "latest": [4, 10, 27, 28, 29, 64, 87], "lathrop": 85, "latter": 85, "lau": 85, "law": 83, "lawrenc": 89, "layer": [49, 99], "layout": [99, 103, 104, 105], "lb": [2, 66], "lbs_problem": [66, 95], "lbsproblem": [67, 68, 69], "lc64": 85, "ld_classic": 11, "ldfe": [85, 90, 91, 94], "ldot": 84, "le": [82, 85, 87], "lead": [83, 84, 89, 93], "leakag": [6, 85, 86, 87], "leav": [4, 102], "lebedev": 91, "lee": 85, "lee61": 85, "left": [82, 83, 85, 87, 89], "leftarrow": 87, "legendr": [14, 15, 16, 17, 47, 80, 83, 85, 91, 92, 95], "len": 92, "length": [84, 95, 100, 101, 102], "lesaint": 85, "less": [5, 85], "let": [2, 4], "letter": 4, "level": [3, 8, 9, 19, 25, 49, 58, 67, 68, 69, 70, 85, 87, 89, 93], "lewi": [83, 89], "li": [85, 102], "lianxiang": 89, "lib": [2, 3, 10], "libncurses5": [8, 9], "libopenmpi": [8, 9], "librari": [0, 2, 3, 8, 10, 88, 110], "library_path": 10, "lifecycl": 22, "like": [0, 2, 4, 22], "likewis": [85, 89, 95], "limit": 64, "limits_": 85, "line": [1, 3, 4, 11, 23, 32, 33, 34, 80, 83, 92, 95], "linear": [2, 6, 19, 53, 70, 71, 85, 86, 87, 88, 90, 91, 94], "linear_boltzmann_solv": [103, 112], "linearli": 85, "linestyl": 92, "linewidth": 92, "link": 10, "link_librari": 11, "linker": 11, "linspac": 92, "lint": 4, "linux": [6, 7], "list": [4, 23, 27, 28, 29, 31, 32, 33, 34, 35, 46, 48, 49, 50, 52, 56, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 78, 79, 93, 107, 108, 111, 112], "llnl": 8, "lm84": 83, "lncurs": 10, "lo": 85, "load": [59, 80, 94, 95, 107, 108, 109, 111], "loadfromopenmc": [80, 112], "loadfromopensn": [80, 107, 111], "local": [4, 6, 8, 9, 10, 19, 23, 58, 85, 87, 91, 93], "locallyrefin": [19, 93], "locat": [2, 3, 8, 9, 10, 11, 39, 48, 52, 78, 95, 100, 101], "log": [2, 3, 4], "log_vol": 54, "logan": 87, "logic": [2, 3, 6, 34, 35, 36, 37, 38, 39, 40, 54, 79, 95], "logical_volum": 79, "logicalvolum": [2, 34, 35, 37, 38, 39, 40, 54, 79], "logiv": 54, "logvol": [2, 3, 34, 54, 79], "long": [3, 89], "longer": [81, 87, 89], "look": [2, 4], "loop": [87, 89, 93], "loss": 83, "loui": 83, "low": [85, 87], "lower": [4, 87], "lowri": 85, "lr74": 85, "lt": [8, 9], "lua": [1, 4, 6, 95], "lua_root": 10, "luabridg": 2, "luabridge3": 2, "lv": [34, 35], "lw": 92, "m": [47, 82, 83, 85, 87, 88, 89, 92], "m4": 11, "m_": [83, 85], "m_gprime_g_v": 80, "maa00": 89, "machin": [4, 6, 7, 89], "maco": [6, 7], "macosx": 10, "macport": 10, "macro": 87, "macro_paramet": 0, "macrodefinit": 0, "made": [4, 85, 89], "magnitud": 83, "mai": [0, 8, 9, 10, 11, 22, 32, 33, 34, 65, 87, 91, 98, 110], "main": [4, 88], "maintain": [8, 9, 10, 11, 89], "make": [4, 6, 8, 9, 10, 11, 48, 49, 50, 56, 58, 83, 95], "make_mat_id_funct": 102, "make_shar": 3, "manag": [8, 9, 20, 24], "mandatori": 84, "mani": 87, "manner": 6, "manual": [6, 10, 85], "manualexecut": [60, 61, 62, 65], "map": [0, 35, 82, 85], "march": 10, "mark": [20, 89], "martin": [83, 87], "marvin": [85, 87, 89], "mass": 85, "massiv": [6, 89], "mat_id": [42, 44, 54, 102], "mat_id_funct": 102, "match": [32, 33, 34, 93], "materi": [5, 42, 44, 80, 83, 84, 85, 87, 98, 99, 103, 104, 105], "math": [3, 6, 19, 27, 28, 29, 32, 34, 35, 36, 37, 38, 39, 40, 54, 59, 79, 93], "mathbb": 88, "mathcal": [82, 83, 85, 88], "mathemat": [85, 89], "mathi": 89, "matplotlib": 92, "matric": 85, "matrix": [83, 84, 85, 87, 89, 92], "max": [34, 38, 60, 82, 83, 84, 85], "max_ags_iter": [67, 68, 69, 70], "max_column_width": 24, "max_func": 34, "max_it": [27, 28], "max_mpi_message_s": [67, 68, 69, 70], "maxim": 6, "maximum": [64, 67, 68, 69, 70, 83], "mc": 8, "mccormick": 83, "mcghee": 85, "mean": [4, 35, 85, 87, 88, 92], "mechan": 85, "media": 87, "medium": 87, "meet": [85, 87], "member": [0, 1], "member_": 0, "memberfunctionwithanargu": 0, "memori": 5, "memoryview": [72, 107, 108, 111, 112], "mention": 4, "merchant": [10, 11], "merg": 4, "mesh": [2, 3, 6, 27, 28, 40, 85, 87, 89, 94], "mesh_ortho_2d": 100, "meshcontinuum": [27, 28, 48, 49, 50, 55, 56, 58], "meshgen": [95, 99, 100, 101, 102, 103, 104, 105, 106], "meshgen2": [100, 101], "meshgener": [48, 49, 50, 56, 58], "meshpi": 105, "messag": [3, 4, 11, 67, 68, 69, 70], "met": [93, 102], "method": [2, 6, 27, 28, 83, 86, 89, 94, 95, 109, 110], "meti": [8, 10], "mev": [67, 68, 69, 70], "mex": 85, "mf": 87, "mf_p": 83, "mg_src": 95, "mib": 4, "michael": [87, 89], "midpoint": 85, "might": [8, 9], "milan": 87, "miller": [83, 85], "milo": 89, "min": [5, 38, 60], "minim": [66, 87], "minimum": [64, 65, 95], "minor": [8, 9], "minu": 83, "minut": 5, "mip": 87, "mismatch": [10, 11], "miss": [8, 11], "mitig": [6, 85, 87], "mixtur": 49, "mjr77": 85, "mkdir": [8, 9, 10, 11], "ml": 87, "mo": 89, "mode": [3, 22, 23, 67, 68, 69, 70, 87, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112], "model": [83, 89], "modern": 6, "modif": 4, "modifi": [3, 4, 11, 87], "modul": [0, 3, 8, 9, 10, 11, 22, 93, 95, 103, 112], "mom": [83, 85], "moment": [67, 68, 69, 70, 80, 83, 85, 87, 88, 91, 95], "momentum": 83, "monoton": 56, "mor82": 87, "mor89": 85, "more": [1, 8, 9, 67, 68, 69, 70, 85, 89, 95, 105], "morel": [85, 87, 89], "most": [4, 6, 8, 9, 85, 87], "mostli": [69, 98], "move": 4, "mpi": [6, 8, 9, 10, 11, 22, 48, 58, 67, 68, 69, 70, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "mpi4pi": [8, 9, 10, 11, 95], "mpi_dir": [10, 11], "mpicc": [8, 9, 10, 11], "mpich": [8, 9], "mpicxx": [8, 9, 10, 11], "mpiexec": [95, 99, 100, 101, 102, 103, 104, 105, 106], "mpif77": [10, 11], "mpifort": [8, 9, 10, 11], "mpl_toolkit": 92, "mplot3d": 92, "msh": [98, 103, 104], "mtune": 10, "mu": [83, 85, 92], "mu_0": 83, "much": [4, 5], "multi": [0, 6, 79, 80, 87, 94, 109], "multidimension": 87, "multigrid": 87, "multigroup": [6, 82, 85, 86, 88, 89, 95, 110], "multigroupx": [95, 107, 108, 111, 112], "multipl": [0, 4, 32, 33, 34, 48, 84, 89, 94, 97], "multipli": 85, "must": [3, 4, 8, 9, 22, 56, 85, 87, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "mutation_scal": 92, "mv": 4, "mvapich": [8, 9], "mw05": 85, "mwlp03": 85, "my": [3, 4], "my_class": 3, "my_const": 0, "my_contain": 0, "my_member_vari": 0, "my_member_variable_": 0, "mycflag": [8, 10], "myclass": [0, 3], "myclassmethod": 3, "mycoolmemberfunct": 0, "myenum": 2, "myfunct": 2, "mylib": 10, "mylovelyclass": 2, "mylovelyclassptr": 2, "mymethod1": 3, "myst": [8, 9, 10, 11], "mystaticfunct": 2, "n": [3, 8, 9, 10, 11, 46, 49, 82, 83, 84, 85, 88, 89, 92, 95, 99, 100, 101, 102, 103, 104, 105, 106], "n_": [83, 85], "n_azimuth": [14, 15, 16], "n_cell": [95, 100, 101, 102], "n_cells_geo": 102, "n_dir_per_oct": 92, "n_direct": 92, "n_f": 85, "n_group": 46, "n_octant": 92, "n_polar": [14, 15, 16, 17], "n_refin": 102, "n_v": 85, "nabla": [82, 83, 85], "name": [1, 4, 8, 9, 10, 11, 19, 31, 32, 33, 34, 49, 50, 54, 60, 61, 65, 67, 68, 69, 70, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "namespac": 1, "nanci": 89, "nativ": 10, "natur": [67, 68, 69, 70, 89], "nazimu": 95, "nbconvert": [22, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "ncurs": [8, 9, 10], "ndir": 92, "ne": 93, "necessari": [8, 9, 10, 11, 66, 87, 95], "need": [2, 4, 8, 9, 10, 11, 65, 80, 82, 84, 87, 89, 91, 95, 100, 101], "neg": [67, 68, 69, 70], "neighbor": [85, 89], "net": 88, "netherland": 83, "neutral": [6, 68, 83, 85, 89], "neutron": [3, 5, 6, 67, 68, 69, 70, 80, 83, 84, 85, 87, 89], "new": [2, 4, 10, 11, 54, 67, 68, 69, 70, 83, 85, 87], "newli": 11, "next": [11, 72, 87, 89, 92], "ng": [80, 107, 108, 111, 112], "njoi": 110, "nm": 85, "nmom": 80, "nodal": 60, "node": 56, "node_set": [56, 95, 100, 101, 102], "nodes_geo": 102, "nodes_msh": 102, "nolimits_": 85, "non": [0, 3, 4, 5, 53, 71], "none": [14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "none_of": 0, "nonsymmetr": 87, "nor": 85, "norm": [43, 45, 54, 87], "normal": [67, 68, 69, 70, 83, 93], "norman": 83, "notag": 85, "notat": [82, 83, 87], "note": [4, 6, 8, 9, 24, 67, 68, 69, 70, 79, 82, 83, 84, 85, 87, 89, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "noth": 4, "notif": 4, "notion": 85, "now": [4, 66, 82, 83, 85, 89, 100, 101], "np": [92, 93, 107, 108, 111, 112], "npolar": 95, "ns_one": 0, "nse10": 85, "nse16": 85, "nu": 84, "nu_delayed_sigma_f": 80, "nu_p": 83, "nu_prompt_sigma_f": 80, "nu_sigma_f": 80, "nuanc": 89, "nuclear": [83, 85, 87, 89], "num_group": [46, 80, 95, 107, 108, 111, 112], "num_moment": 80, "num_partit": 58, "num_precursor": 80, "number": [3, 4, 6, 14, 15, 16, 17, 19, 32, 46, 52, 54, 58, 60, 61, 65, 67, 68, 69, 70, 80, 83, 85, 87, 89, 92, 95], "numer": [3, 6, 60, 61, 65, 85, 92], "numpi": [3, 92, 93, 107, 108, 111, 112], "nx": [52, 95, 100, 101], "ny": [52, 83, 89, 95, 100, 101], "nz": [52, 101], "o": [87, 89, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "o3": [8, 10], "obj": [59, 94, 97, 98, 99], "object": [4, 45, 48, 49, 50, 56, 58, 60, 61, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 77, 98, 105, 107, 108, 111, 112], "obtain": [67, 68, 69, 70, 84, 85, 87, 88, 93, 103, 104, 105, 106], "oc": [92, 93], "occur": [11, 22, 85, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "octant": [85, 92], "od98": 87, "off": [3, 4, 8, 10, 67, 68, 69, 70], "often": [83, 85, 87], "old": [5, 54, 67, 68, 69, 70], "old_id": 54, "oliveira": 87, "om": 92, "omake_printdir": 10, "omega": [12, 13, 14, 15, 16, 17, 18, 19, 82, 83, 85, 88, 89, 92], "omega_d": 85, "omega_i": 83, "omega_x": 83, "omega_z": 83, "omit": [8, 9, 10, 11, 85, 87], "onc": [8, 9, 10, 11, 22, 23, 81, 85, 87, 88, 89], "one": [4, 8, 9, 10, 11, 66, 80, 82, 84, 85, 87, 88, 89, 95, 108, 110], "ones": [54, 92, 102], "ones_lik": 92, "onetran": 85, "onli": [3, 4, 5, 11, 22, 24, 50, 53, 58, 59, 60, 61, 64, 65, 67, 68, 69, 70, 79, 82, 83, 85, 87, 88, 89, 98], "only_scalar_flux": [67, 68, 69, 70, 95], "op": [35, 93], "op_typ": 34, "open": [4, 6, 8, 9, 10, 11, 110], "openmc": [80, 94, 109, 110], "openmpi": [8, 9], "opensn": [0, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 84, 85, 86, 87, 88, 89, 93, 95, 107, 110, 111], "opensnlua": 2, "oper": [2, 34, 60, 83, 87], "oppos": 59, "opt": 23, "optic": 87, "optim": [3, 89], "option": [4, 8, 9, 10, 64, 66, 67, 68, 69, 70, 85, 92], "order": [0, 11, 47, 80, 82, 83, 84, 85, 87, 88, 89], "ordin": [68, 69, 85, 87, 89, 91], "org": [8, 85, 87, 110], "organ": 3, "orient": 85, "origin": [4, 87, 93, 95, 100], "ortho": 52, "ortho_2d_kba": 100, "ortho_2d_parmeti": 100, "ortho_3d_blockid": 102, "ortho_3d_kba": 101, "ortho_3d_parmeti": 101, "orthogon": [53, 56, 89, 94, 97, 98], "orthogonalmeshgener": [95, 100, 101, 102], "other": [0, 4, 8, 9, 10, 11, 48, 58, 84, 85, 87, 89, 95, 110], "otherwis": [4, 19, 22, 53, 54, 67, 68, 69, 70, 85, 102], "our": [2, 4, 89, 95, 102], "ourenumtyp": 0, "out": 82, "outcom": [6, 86], "outer": [87, 92], "outermost": 89, "outflow": 85, "outgo": [82, 83, 89], "output": [10, 11, 26, 54, 88], "outsid": [2, 10, 11, 35, 36, 37, 38, 39, 40, 54], "outward": 83, "over": [0, 5, 66, 82, 83, 85, 87, 88], "overlai": 52, "overwrit": 23, "own": [2, 10, 11, 83, 85, 89, 110], "p": [4, 10, 11, 43, 44, 46, 83, 84, 85, 87, 89, 93], "p_": 83, "p_p": 83, "pa": 85, "packag": [2, 3, 8, 9, 10, 11], "pad": [67, 68, 69, 70], "page": [0, 6, 85], "pai": 11, "pair": 85, "paper": 87, "paragraph": [3, 4], "parallel": [3, 6, 38, 48, 49, 50, 56, 58, 86, 87, 95, 98], "parallelpip": 54, "param": 0, "paramet": [1, 3, 14, 15, 16, 17, 19, 23, 24, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 95], "parameterblock": 81, "parent": 2, "parenthes": 0, "parmeti": [5, 8, 10, 48, 49, 50, 56, 57, 58, 98, 99, 102, 103, 104, 105, 106], "pars": 2, "parse_t": 2, "parser": [8, 9, 10, 11], "parson": 85, "part": [0, 2, 35, 48, 58], "parti": [0, 8], "partial": [82, 83, 85, 87, 88], "partial_": 83, "partial_i": 83, "partial_r": 83, "partial_x": 83, "partial_z": 83, "particip": 4, "particl": [6, 68, 83, 85, 86, 87, 89], "particular": [10, 11], "partit": [5, 6, 48, 49, 50, 52, 53, 56, 57, 58, 86, 94, 95], "partition": [48, 49, 50, 51, 52, 53, 56, 57, 58, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106], "pascal": 0, "pass": [3, 65, 89, 95, 100, 101, 103, 104, 105, 106], "patch": [4, 92], "path": [8, 9, 10, 11, 50, 58, 67, 68, 69, 70, 87, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "pattern": [84, 93], "patton": 87, "pau02": 89, "pautz": [85, 89], "pcm": 5, "penalti": 87, "pentagon": 85, "per": [4, 46, 54, 56, 67, 68, 69, 70, 85, 92, 95, 100, 101], "per_column_size_scalar": 64, "per_column_size_vector": 64, "perform": [4, 6, 59, 60, 82, 83, 84, 87, 89, 92, 93], "period": 72, "person": 4, "peter": 89, "petsc": [0, 9, 11, 21, 57, 98], "petsc_dir": [8, 10], "petsc_gmr": 95, "petsc_root": 10, "petscgraphpartition": [48, 49, 50, 56, 58, 99, 100, 101, 102, 103, 104, 105, 106], "ph96": 87, "phase": [6, 83, 86, 89], "phd": 85, "phi": [82, 83, 85, 87, 88], "phi_": [83, 84, 85, 87, 88], "phi_gxxx_myyi": [67, 68, 69, 70], "phy": 95, "physic": [84, 85, 87, 89, 95], "pi": [82, 83, 84, 85, 87, 92, 93], "pic": [8, 10], "pick": [4, 92], "piec": 85, "piecewis": [19, 85], "pii": [85, 87], "pile": 5, "pip": [3, 8, 9, 95], "pip3": [8, 9, 10, 11], "pipe": 38, "pipelin": 89, "place": [10, 11], "plai": [84, 87], "plain": [107, 111], "planar": [85, 93], "plane": [89, 100, 101], "platform": 6, "pleas": 85, "plot": 3, "plot3d": 92, "plot_sldfe_quadratur": 93, "plot_surfac": 92, "plotter": 93, "plt": 92, "plug": 1, "pm": [82, 88], "pn": 89, "point": [3, 4, 10, 32, 35, 36, 37, 38, 39, 40, 43, 44, 46, 47, 60, 61, 65, 67, 68, 69, 70, 72, 78, 83, 85, 92, 93, 102], "point_sourc": [67, 68, 69, 70], "pointer": 2, "pointsourc": [67, 68, 69, 70], "pointwis": [67, 68, 69, 70, 87], "polar": [12, 13, 14, 15, 16, 17, 18, 19, 47, 83, 85, 91, 92, 95], "polar_level": 92, "pole": 85, "polygon": [59, 85, 87], "polyhedr": [6, 85], "polyhedra": 85, "polyhedron": 85, "polynomi": [47, 83], "popul": 72, "portion": [8, 9, 88], "posit": [83, 85], "possibl": [4, 85, 89, 91], "possibli": [4, 84, 87], "post": [2, 3, 6, 84, 88], "post_execut": [22, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "postprocessor": [60, 61, 63, 65], "potenti": 89, "power": [67, 68, 69, 70, 73, 74, 75, 84, 86], "power_default_kappa": [67, 68, 69, 70], "power_field_function_on": [67, 68, 69, 70], "power_norm": [67, 68, 69, 70], "poweriterationkeigensolv": [73, 74], "pp_list": 63, "pquad": [92, 95], "precis": 85, "precondit": [6, 87], "precursor": [67, 68, 69, 70, 80, 83], "prefer": [0, 10], "prefix": [0, 8, 9, 10, 11, 58, 67, 68, 69, 70], "prefix_phi_gxxx_myyi": [67, 68, 69, 70], "preprocessor": 0, "prerequisit": 10, "presenc": 85, "present": [79, 82, 84, 85, 87, 88], "pretti": 53, "prevent": [8, 9, 10, 11], "previou": [72, 87, 89, 99, 101, 102], "previous": [82, 84], "principl": 82, "prinja": 87, "print": [3, 19, 58, 60, 61, 64, 65, 92, 93, 95, 107, 108, 111, 112], "print_numeric_format": [60, 61, 65], "print_on": [60, 61, 65], "print_precis": [60, 61, 65], "print_scalar_time_histori": 64, "print_vector_time_histori": 64, "printer": [60, 61, 64, 65], "printquadraturetofil": [19, 93], "privat": 0, "privileg": [8, 9], "problem": [4, 6, 66, 67, 68, 69, 70, 82, 83, 85, 87, 89], "proc": [85, 89], "proce": 87, "procedur": 87, "proceed": [85, 87, 89], "process": [2, 3, 6, 8, 9, 10, 11, 22, 48, 49, 50, 56, 58, 84, 86, 88, 89, 99, 100, 101, 102, 103, 104, 105, 106], "processor": [3, 6, 60, 61, 62, 63, 64, 65, 89, 95, 99], "produc": [53, 85, 89], "product": [14, 15, 16, 17, 18, 45, 80, 82, 83, 84, 85, 87, 90, 91, 94, 95], "profoundli": 89, "program": [3, 20, 60, 61, 65], "programexecut": [60, 61, 64, 65], "progress": 87, "proj3d": 92, "proj_transform": 92, "project": [10, 92], "promin": 6, "prompt": [8, 80, 83], "pronounc": 85, "proper": 85, "properli": 22, "properti": [2, 12, 13, 14, 15, 16, 17, 18, 19, 45, 54, 80, 87, 98, 107, 108, 111, 112], "protect": [0, 87], "prototyp": 89, "provabl": 89, "provid": [2, 3, 8, 9, 10, 11, 58, 79, 87, 95, 98], "psi": [82, 83, 85, 87, 88, 89], "psi_": [82, 83], "psi_d": 85, "psi_g": 87, "pt": 102, "ptscotch": [8, 9, 10, 57], "pub": 8, "public": [0, 2], "public_member_var": 0, "publish": 83, "pull": 1, "pure": 1, "purpos": [10, 11, 85], "push": 4, "put": 3, "pvtu": [50, 54], "pwd": [8, 10], "pwl": 85, "pwld": [67, 68, 69, 70], "py": [3, 9, 11, 92, 93, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "py_aquad": 3, "pybind11": 3, "pyopensn": [3, 8, 9, 10, 11, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "pyplot": 92, "python": [1, 4, 6, 22, 23, 35, 42, 43, 44, 46, 49, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106], "python3": [8, 9, 11], "q": [82, 85, 87], "q_": [82, 83, 87], "q_d": 85, "q_g": 87, "qoi": 82, "qquad": [82, 83, 85], "quad": 83, "quadrangl": 93, "quadrant": [85, 95], "quadrat": 85, "quadratur": [2, 3, 6, 12, 13, 14, 15, 16, 17, 18, 19, 83, 85, 89, 94], "quadrilater": [19, 85], "quantiti": [82, 83, 88, 89], "queri": 89, "quest": 89, "quick": 6, "quit": [4, 87], "r": [3, 19, 37, 39, 82, 83, 85, 87, 88, 89, 92], "radian": 19, "radiat": [5, 6, 83, 85, 87], "radiu": [37, 39, 87], "rag15": 85, "ragusa": [85, 87, 89], "rai": [6, 85, 87], "ran": 5, "randal": 89, "rang": [6, 83, 87, 88, 92, 95, 100, 101, 102], "rangl": 82, "rangle_": 82, "rank": [6, 48, 53, 58, 95, 103, 104, 105, 106], "rapidli": [67, 68, 69, 70], "rate": [6, 82, 83, 86], "rather": [4, 82, 87], "ratio": [80, 87], "rauchwerg": 89, "raviart": 85, "raw": 0, "raymond": 89, "rcc": 37, "re": [8, 9, 83, 89], "reach": [64, 85], "reaction": [6, 82, 84, 86], "reactor": [5, 72, 83, 85, 89], "read": [48, 49, 50, 56, 58, 66, 67, 68, 69, 70, 94, 97, 108, 109, 110], "read_3d_gmsh": 104, "read_3d_vtu": [105, 106], "read_onli": 58, "read_restart_path": [67, 68, 69, 70], "readangularflux": [67, 68, 69, 70], "reader": 89, "readfluxmo": [67, 68, 69, 70], "readfluxmomentsandmakesourcemo": [67, 68, 69, 70], "readi": 89, "readlin": [8, 10], "readsourcemo": [67, 68, 69, 70], "real": 83, "realiz": 87, "realli": [50, 65], "rebas": 4, "recal": 95, "recast": 87, "recent": [8, 9], "recogn": 82, "recommend": [3, 4, 8, 9, 10, 11, 89, 98], "reconfigur": [10, 11], "recreat": 58, "rectangular": [38, 85, 89], "red": 84, "redefin": [8, 9, 10, 11], "redistribut": [85, 86], "reduc": 84, "ree71": 87, "reed": [85, 87], "ref": [8, 85], "ref_dir": 19, "refer": [1, 4, 8, 9, 10, 11, 19, 86], "referenc": [42, 43, 44, 46], "refin": [6, 19, 85, 87, 91, 93], "reflect": 10, "region": [87, 88], "regist": [22, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "regular": [89, 100, 101], "rel": [27, 28, 84, 87], "relat": [2, 3, 69], "releas": [8, 10, 67, 68, 69, 70], "relev": [4, 65], "remaind": 85, "remedi": [85, 87], "remot": 4, "remov": [4, 81, 93], "render": 92, "repeat": [10, 11, 89], "rephras": 65, "replac": [10, 83, 87], "replicated_mesh": [48, 49, 50, 56, 58], "repo": 4, "report": [24, 58, 85], "repositori": [2, 4, 8, 9, 10, 11], "repres": [2, 5, 35, 49, 82, 83, 85, 89], "request": 1, "requir": [3, 8, 9, 10, 11, 52, 60, 65, 81, 82, 84, 87, 89, 92, 93, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "research": 6, "reserv": 82, "residu": 87, "residual_toler": [27, 28], "resolut": 95, "resolv": [4, 87], "respect": [85, 95], "respons": [3, 6, 48, 82, 89], "restart": [67, 68, 69, 70], "restart_writes_en": [67, 68, 69, 70], "restrict": [53, 85], "result": [5, 6, 8, 9, 10, 11, 67, 68, 69, 70, 85, 87, 95, 99, 100, 101, 102, 103, 104, 105], "retrain": 83, "retriev": 65, "return": [0, 3, 32, 33, 34, 42, 43, 44, 46, 54, 67, 68, 69, 70, 71, 73, 74, 75, 92, 102], "reus": 4, "revers": 82, "review": [4, 83, 87], "rh73": 85, "rhbl73": 85, "rho": 72, "richard": 85, "right": [4, 37, 54, 82, 83, 85, 87], "rise": 87, "rm": 4, "road": 4, "robert": 89, "robust": 6, "roi": 88, "role": [84, 87], "root": 4, "routin": 93, "rpp": 38, "rr": 88, "rule": [0, 6, 83, 85], "run": [4, 92, 93, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "run_test": [10, 11], "runner": 23, "runtim": [22, 24], "russel": 83, "rz": [14, 85], "s0021999114004100": 87, "s0021999114006494": 85, "s_": 83, "s_f": [84, 87], "s_n": [82, 85, 87, 89], "sa03": 85, "saa03": 87, "saad": 87, "safe": 22, "sai": 2, "said": 85, "sake": 87, "same": [3, 8, 9, 10, 11, 33, 64, 95, 100, 101], "samuel": 83, "sanchez": [83, 85], "saratoga": 89, "sartori": 83, "satisfi": [83, 87], "save": 4, "save_angular_flux": [67, 68, 69, 70], "sca_ord": [107, 108, 111, 112], "scalar": [42, 43, 44, 45, 64, 87, 95], "scalar_pp_table_format": 64, "scalarmaterialfunct": 34, "scalarspatialmaterialfunct": [27, 28, 29], "scale": [6, 48, 49, 50, 56, 58, 80, 89], "scaling_factor": 80, "scatter": [67, 68, 69, 70, 80, 82, 83, 84, 85, 87], "scattering_ord": [67, 68, 69, 70, 80, 107, 108, 111, 112], "scdsa": 73, "scenario": 6, "schedul": 86, "scheme": [85, 87], "schultz": 87, "scienc": [83, 85, 87, 89], "sciencedirect": [85, 87], "scientif": [60, 61, 65, 85, 87], "scotch": 98, "script": [0, 2, 8, 9, 10, 11, 22, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "seamless": 3, "seamlessli": 6, "second": [2, 67, 68, 69, 70, 85, 87, 93, 95], "section": [2, 3, 6, 67, 68, 69, 70, 80, 82, 83, 85, 86, 88, 94], "see": [2, 4, 8, 9, 10, 11, 85, 95, 99], "seed": 85, "select": [8, 9, 10, 11, 54, 67, 68, 69, 70, 91], "self": [2, 14, 15, 16, 17, 19, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 92], "send": 1, "sensit": 82, "separ": [0, 8, 9, 89], "seper": 64, "sequenc": [63, 85], "seri": 4, "serial": 48, "set": [0, 2, 3, 4, 6, 8, 9, 10, 23, 24, 25, 32, 34, 48, 49, 50, 54, 56, 58, 60, 61, 64, 65, 66, 67, 68, 69, 70, 72, 85, 87, 91, 92, 93, 102], "set1": 112, "set_posit": 92, "setblockidfromfunct": [54, 102], "setblockidfromlogicalvolum": 54, "setblockparam": 2, "setboundaryidfromlogicalvolum": 54, "setbufferopt": 66, "setdcoeffunct": [27, 28, 29], "setfinalpoint": 32, "setinitialpoint": 32, "setlogicalvolum": 34, "setmemb": 0, "setnumberofpoint": 32, "setoperationfunct": 34, "setoperationtyp": 34, "setopt": [27, 28, 29, 66, 67, 68, 69, 70], "setorthogonalboundari": 54, "setqextfunct": [27, 28, 29], "setrho": 72, "setscalingfactor": 80, "setsigmaafunct": [27, 28, 29], "setsourceopt": 66, "setuniformblockid": [54, 95, 100, 101, 102], "setup": [3, 102], "sever": [2, 3, 85, 87, 91, 102], "sha1": 4, "shape": 87, "share": [0, 2, 8, 9, 10, 11, 89, 95], "shared_ptr": [2, 3], "shawn": [85, 89], "shell": [8, 9], "shield": 87, "short": [3, 4, 86], "should": [0, 2, 3, 4, 8, 9, 10, 11, 66, 82, 84, 87, 93], "show": [2, 11, 64, 89, 92], "shown": [89, 95, 99, 100, 101, 102, 103, 104, 105, 106], "si": 87, "siam": 87, "side": [85, 95, 100], "siga": [107, 108, 111, 112], "sigma": [82, 83, 84, 85, 87, 88], "sigma_": [82, 83, 84, 85, 87, 108], "sigma_0": 87, "sigma_a": [80, 107, 108, 111, 112], "sigma_a_begin": 80, "sigma_a_end": 80, "sigma_f": [80, 83, 84], "sigma_t": [80, 82, 83, 84, 85, 95, 107, 108, 111, 112], "sigma_t_begin": 80, "sigma_t_end": 80, "sign": 82, "signific": [87, 89], "sigt": [107, 108, 111, 112], "simeq": 85, "similar": [10, 11, 82, 85, 87, 89, 101, 102], "simpl": [6, 67, 68, 69, 70, 89, 95, 100, 101], "simpli": [0, 8, 9, 87, 88, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "simplifi": [90, 94], "simplifiedldfesq": 19, "simul": [6, 86, 95, 98], "simultan": 89, "sin": [19, 83, 92, 93], "sinc": [4, 95], "singl": [0, 53, 85, 87, 89, 95], "single_file_flag": [67, 68, 69, 70], "site": [8, 9, 10, 11], "situat": [84, 85], "six": 83, "size": [19, 64, 67, 68, 69, 70, 92, 95], "slab": [17, 87], "sldfe_data": 93, "sldfe_data1": 93, "sldfe_data2": 93, "sldfesquadratur": 93, "slice": 5, "slightli": [8, 9], "slow": 87, "slowest": 87, "slowli": 87, "sm82": 83, "small": [4, 85, 87], "smaller": [85, 87], "smallest": 85, "smb78": 85, "smith": 89, "smjbj77": 85, "smm": 74, "sn": [4, 8, 9, 10, 11, 82, 86, 87], "snake": 0, "snapshot": 8, "so": [2, 4, 8, 9, 83, 84, 85, 87, 89, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "societi": 89, "softwar": [10, 11, 110], "soi": 88, "solut": [5, 6, 23, 66, 72, 82, 85, 86, 88, 89], "solv": [6, 84, 85, 86, 87, 88, 89], "solver": [2, 3, 6, 27, 28, 29, 60, 61, 65, 66, 86, 89, 94], "solver_nam": [67, 68, 69, 70], "solveradvanc": [60, 61, 64, 65], "solverexecut": [60, 61, 64, 65], "solveriniti": [60, 61, 64, 65], "solvername_filt": [60, 61, 65], "some": [4, 5, 8, 9, 10, 84, 85, 87], "some_directori": 0, "some_other_directori": 0, "somememberfunct": 0, "someon": 4, "somewher": 4, "son": 83, "sonoma": 11, "soon": 85, "sourc": [3, 4, 5, 6, 10, 11, 66, 67, 68, 69, 70, 82, 83, 85, 86, 98, 110], "space": [0, 6, 83, 86, 88, 89, 100, 101, 102], "span": 0, "spars": [84, 87], "sparsiti": 84, "spatial": [6, 43, 44, 46, 67, 68, 69, 70, 82, 83, 86, 87, 88, 89, 95, 100, 101, 102], "spatial_discret": [67, 68, 69, 70], "specif": [27, 28, 29, 66, 67, 68, 69, 70, 89], "specifi": [8, 9, 49, 54, 60, 61, 65, 66, 67, 68, 69, 70, 80, 89, 100, 101, 102], "spectral": 87, "spectrum": [80, 84, 87], "sphere": [5, 37, 39, 54, 83, 85, 92, 93], "spheric": [19, 39, 47, 83, 85, 93], "sphinx": [8, 9, 11, 23], "sphinx_rtd_them": [8, 9, 10, 11], "split": [19, 58, 85, 87, 95, 98], "split_mesh": 58, "split_mesh_dir_path": 58, "spread": [93, 95], "spring": [5, 89], "springer": 83, "sq": 19, "sqrt": [83, 92, 93], "squar": [85, 95, 100], "squash": 1, "sr11": 85, "src": 23, "ss86": 87, "ss_solver": 95, "ssh": 4, "ssl": [8, 10], "stabl": 110, "stage": [4, 87, 88, 89], "stai": 4, "standard": [1, 6, 22, 82, 84, 85, 87, 102], "star": 5, "start": [4, 20, 24, 87, 89, 92, 95, 99], "startup": [8, 9, 10, 11], "state": [6, 69, 77, 82, 83, 85, 87], "statement": [0, 82, 83, 84], "static": [2, 31, 32, 33, 34], "statist": 87, "statu": 4, "std": [0, 2, 3, 8], "steadi": [6, 69, 77, 82, 83, 85], "steadystatesolv": 95, "stem": [67, 68, 69, 70, 83], "step": [3, 27, 28, 29, 48, 49, 50, 55, 56, 58, 71, 72, 73, 74, 75, 76, 77, 87, 88], "stone": 85, "store": [50, 67, 68, 69, 70, 85], "str": [3, 19, 23, 24, 31, 32, 33, 34, 49, 50, 54, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 80], "straightforwardli": 87, "strategi": 87, "stream": [82, 86, 87], "strength": [78, 79, 95], "string": [0, 3], "strongli": [8, 9, 10, 11], "structur": [5, 45, 84, 85, 87, 89], "style": [0, 4, 5, 8, 9, 10, 11], "stylua": 4, "subcrit": 83, "subdivid": 85, "subdivis": [19, 95], "subdomain": [95, 100, 101, 103, 104, 105, 106], "submodul": [3, 8, 9, 10, 11], "subset": 88, "subtract": 84, "success": [10, 11, 85, 87], "successfulli": 10, "succinct": 83, "sudo": [8, 9], "sueli": 87, "suitabl": [10, 11], "sum": [34, 84, 85], "sum_": [82, 83, 84, 85, 87, 88], "sum_func": 34, "sum_g": 82, "sum_i": 83, "summari": [84, 86], "summat": 85, "super": 92, "supercomput": [6, 89], "superlu_dist": [8, 10], "superscript": [85, 87], "suppli": [67, 68, 69, 70, 82, 83, 84, 85, 87, 93, 95, 98, 110], "support": [6, 8, 9, 10, 11, 67, 68, 69, 70, 89, 98], "suppos": 82, "sure": [4, 95], "surfac": [40, 59, 85, 88, 92], "surface_mesh": 40, "surfacemesh": 40, "swap": 89, "sweep": [6, 67, 68, 69, 70, 85, 86, 87, 91], "swept": 89, "switch": 4, "sy": [23, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "symbol": 10, "symmetr": [68, 85], "symmetri": 83, "syntax": 2, "synthet": [6, 87], "sys_argv": 23, "system": [0, 6, 8, 9, 85, 86, 87], "t": [0, 8, 9, 82, 83, 84, 85, 88, 89], "t_": 85, "t_c": 85, "t_f": 85, "t_j": 85, "tabl": [2, 64, 67, 68, 69, 70], "table_column_limit": 64, "tackl": 6, "tag": 8, "take": [4, 59, 83, 84, 85], "taken": 85, "tar": 8, "target": [3, 65], "target_block": 102, "task": [8, 9, 10, 11, 85, 89], "tau": 82, "tdg": 85, "teach": 2, "team": 3, "technic": 85, "techniqu": [5, 6, 85, 87, 89], "tell": 89, "temperatur": 80, "tempor": 82, "temporari": [23, 81], "tensor": [85, 87], "tera": 89, "teresa": [85, 89], "term": [82, 84, 85, 86, 87], "termin": [3, 22, 92, 93, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "tesser": 47, "test": [53, 85, 103, 105, 106, 112], "tetrahedr": 85, "tetrahedra": 85, "tetrahedron": 85, "texa": 85, "text": [4, 82, 83, 84, 85, 87, 88, 95, 107, 110, 111], "textbook": 83, "texttt": 87, "tg": 87, "th": [67, 68, 69, 70, 85, 87], "than": [4, 5, 67, 68, 69, 70, 82, 84, 87], "thei": [4, 82, 85, 89], "them": [10, 66], "theori": [6, 83, 85, 87], "therefor": [4, 8, 9, 10, 11, 85, 87], "thermal": 86, "thesi": 85, "theta": [19, 47, 83, 93], "thi": [0, 2, 3, 4, 5, 8, 9, 10, 11, 22, 23, 24, 32, 33, 34, 48, 49, 50, 52, 53, 56, 58, 59, 65, 66, 67, 68, 69, 70, 79, 81, 82, 83, 84, 85, 87, 88, 89, 92, 93, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "thick": [85, 87], "thing": 4, "think": 4, "third": 8, "this_is_snake_styl": 0, "thisisaclassnam": 0, "thisisastructnam": 0, "thisispascalstyl": 0, "thor": 4, "those": [4, 10, 85, 89], "though": 4, "thought": 85, "thread": [3, 4], "three": [85, 88, 89], "through": [3, 85, 89, 93, 98, 100, 101], "throughout": [8, 9, 10, 11, 60, 61, 65], "thu": [3, 87, 95, 100], "time": [4, 8, 9, 27, 28, 29, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 82, 83, 84, 85, 88, 92, 95, 100], "time_history_limit": 64, "timestamp": 3, "timmi": 89, "tip": 4, "titl": 6, "tj": 85, "todai": 5, "todd": [85, 87], "togeth": [2, 89], "toggl": [67, 68, 69, 70], "tol": 87, "told": 4, "toler": [27, 28, 67, 68, 69, 70, 87, 95], "took": 5, "tool": 93, "top": [4, 8, 9, 49], "top_boundary_nam": 49, "topic": [4, 85, 87], "total": [4, 80, 83, 84, 85, 88, 92, 95], "tr": 85, "tr14": 87, "trace": 87, "track": 4, "tradit": [6, 85], "trail": 0, "transact": 89, "transfer": [80, 82, 84, 87], "transfer_moments_begin": 80, "transfer_moments_end": 80, "transform": 59, "transient": [69, 72], "translat": 59, "transpar": 92, "transport": [5, 6, 68, 82, 85, 86, 87, 88, 89, 95], "transport_keigen": [103, 112], "transpos": 82, "travers": 85, "treatment": [6, 86], "tree": [4, 10, 11], "tri_2mat_bc_1542": 99, "triangl": [59, 85, 105], "triangular": [59, 85, 87, 91, 105], "trident": 85, "triplet": [85, 102], "true": [19, 24, 26, 35, 38, 54, 61, 64, 67, 68, 69, 70, 87, 93], "try": 4, "tupl": 78, "turcksin": 87, "turn": [3, 67, 68, 69, 70], "tutori": [6, 95, 99, 101, 102], "tutt": 87, "tweak": [8, 9], "two": [3, 8, 9, 10, 11, 35, 85, 87, 92, 101, 102], "two_spheres_smal": 104, "txt": 11, "type": [0, 2, 34, 53, 54, 57, 65, 67, 68, 69, 70, 82, 83, 87, 88, 89, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "typic": [2, 4, 6, 10, 83, 87], "u": [4, 85, 87, 89, 92], "ubuntu": [8, 9], "ulf": 89, "unchang": 102, "unclear": 65, "uncollid": [6, 85, 86], "uncom": 92, "unconverg": 87, "underbrac": 84, "underli": 85, "underscor": [0, 4], "understood": 85, "uniform": [19, 48, 49, 50, 56, 58, 85, 93, 95, 102], "union": 85, "uniqu": [4, 92], "unit": [0, 10, 11, 54, 83, 85], "uniti": [83, 85], "univers": 85, "unknown": 85, "unless": [2, 3], "unlik": [8, 9, 10, 11], "unpack": [10, 11], "unset": [67, 68, 69, 70], "unstag": 4, "unstructur": [53, 85, 87, 89, 103, 104, 105], "until": [4, 85, 87, 89], "uo2": 112, "up": [4, 6], "updat": [1, 5, 27, 28, 29, 60, 61, 65, 83, 87], "updatefieldfunct": [27, 28, 29], "upon": [85, 87], "upper": 0, "upscatt": [85, 86], "upstream": [4, 89], "upwind": [85, 89], "ur": [85, 89], "url": [83, 85, 87], "us": [0, 2, 3, 4, 5, 8, 9, 10, 11, 19, 23, 24, 27, 28, 48, 49, 50, 54, 56, 58, 60, 61, 65, 66, 67, 68, 69, 70, 79, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 110], "usa": 85, "use_precursor": [67, 68, 69, 70], "use_source_mo": [67, 68, 69, 70], "usecolor": [92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "user": [8, 9, 10, 11, 22, 66, 82, 83, 84, 85, 87, 93, 95, 98, 100, 101, 110], "usernam": [4, 8, 9, 10, 11], "usr": 10, "usual": 83, "util": [3, 6, 11, 66, 69, 98], "v": [83, 85, 92], "v1": 85, "v2": 8, "v3": [8, 9], "v5": [8, 9], "v_g": 82, "vacuum": [67, 68, 69, 70, 82, 83, 95], "val": [0, 42], "valu": [0, 2, 27, 28, 29, 42, 54, 56, 60, 61, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 87, 89, 92, 95, 100, 101, 102], "value1": 2, "value2": 2, "value3": 2, "varepsilon": 87, "vari": [0, 67, 68, 69, 70], "variabl": [0, 1, 3, 6, 8, 9, 10, 11, 22, 87, 92, 93], "variant": [85, 87], "variat": 87, "varieti": 6, "variou": [6, 65, 85, 95], "varphi": [47, 83, 85], "varrho": 87, "vartheta": [84, 87], "vec": [19, 82, 83, 85, 88, 89, 93], "vec3_omega": 92, "vector": [12, 13, 14, 15, 16, 17, 18, 19, 23, 37, 43, 45, 46, 64, 78, 83, 84, 93], "vector3": [2, 19, 32, 35, 36, 37, 38, 39, 40, 43, 44, 46, 54, 59, 93], "vectorspatialfunct": 79, "veloc": [80, 83], "verbos": [14, 15, 17, 25, 58, 67, 68, 69, 70], "verbose_ags_iter": [67, 68, 69, 70], "verbose_inner_iter": [67, 68, 69, 70], "verbose_outer_iter": [67, 68, 69, 70], "verbosity_level": 58, "veri": [5, 87, 89, 101, 102], "verifi": 10, "vermaak": 89, "versatil": 6, "version": [8, 9, 10, 11, 64, 84], "vertex": 85, "vertic": [64, 85, 102], "via": [10, 11, 105], "view": [5, 8, 9, 10, 11], "view_init": 92, "visibl": 5, "visual": 3, "void": [0, 3], "volum": [2, 3, 6, 34, 35, 36, 37, 38, 39, 40, 54, 61, 79, 82, 85, 87, 89], "volume1": 35, "volume2": 35, "volumetr": [3, 5, 61, 67, 68, 69, 70, 79, 82, 85, 98], "volumetric_sourc": [67, 68, 69, 70, 95], "volumetricsourc": [67, 68, 69, 70, 95], "vram21": 89, "vtk": [10, 31, 95], "vtk_basenam": 95, "vtk_dir": 10, "vtu": [50, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105], "vx": 37, "vy": 37, "vz": 37, "w": [87, 89], "wa": [2, 4, 10, 11, 89, 95, 103, 104], "wai": [3, 4, 49, 89], "wan09": 85, "wang": [85, 87], "want": [4, 8, 9, 10, 11, 82, 84, 95], "war08": 85, "ware": [85, 87], "warranti": [10, 11], "warren": 83, "warsa": [85, 87], "water": 87, "wavefront": [59, 98, 105], "we": [2, 4, 8, 9, 10, 82, 83, 84, 85, 87, 88, 89, 92, 93, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112], "weak": 87, "web": [8, 9, 10, 11], "weight": [12, 13, 14, 15, 16, 17, 18, 19, 85, 87], "well": [6, 84, 87], "went": 4, "were": [4, 8, 9, 11, 89], "wf": 85, "wget": 8, "what": [4, 67, 68, 69, 70, 72, 83], "when": [0, 4, 8, 9, 10, 11, 19, 22, 38, 48, 49, 50, 56, 58, 61, 67, 68, 69, 70, 79, 82, 84, 85, 87, 89, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "where": [0, 4, 43, 44, 46, 67, 68, 69, 70, 82, 83, 84, 85, 87, 89, 93, 95], "wherea": 85, "whether": [58, 64, 65, 67, 68, 69, 70, 102], "which": [2, 4, 53, 54, 60, 61, 64, 65, 67, 68, 69, 70, 83, 84, 85, 89, 95], "while": [3, 82, 87, 89], "whole": 0, "whose": [32, 33, 34, 54, 84, 92, 95], "wide": 6, "wilei": 83, "william": [83, 89], "wise": [78, 85], "wish": 4, "with_kokko": 10, "with_mpi": 10, "within": [5, 8, 9, 10, 11, 22, 79, 85, 86, 102], "without": [84, 85, 87, 89], "wm": [85, 87], "wmmp01": 85, "woodsford": 87, "woodward": 89, "work": [4, 8, 9, 10, 53, 89], "workflow": [1, 6, 66], "worth": 6, "would": [2, 64, 87, 105], "wr09a": 85, "wr09b": 85, "wr10": [85, 87], "wr11": 85, "wrap": 64, "wrapmyclass": 3, "wrapper": [3, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "write": [4, 54, 67, 68, 69, 70, 85], "write_delayed_psi_to_restart": [67, 68, 69, 70], "write_restart_path": [67, 68, 69, 70], "write_restart_time_interv": [67, 68, 69, 70], "writeangularflux": [67, 68, 69, 70], "writefluxmo": [67, 68, 69, 70], "written": [0, 6, 58, 67, 68, 69, 70, 83, 85, 87], "wrote": 58, "wwm04": 87, "www": [8, 85, 87], "x": [2, 3, 11, 37, 38, 39, 42, 44, 45, 46, 52, 84, 85, 92, 95, 100, 101, 102, 107, 108, 111, 112], "x0": 37, "xcode": 11, "xcut": [52, 95, 100, 101], "xi": 83, "xi_g": 87, "xmax": [38, 54], "xmin": [38, 54, 95], "xn": [83, 84], "xs3d": 92, "xs_1g": 107, "xs_2g": 111, "xs_map": 95, "xs_mat": [95, 107, 108, 111], "xs_uo2": 112, "xxx": [67, 68, 69, 70], "xy": [15, 89, 95], "xyz": [16, 43, 44, 46, 83, 85], "y": [2, 37, 38, 39, 44, 45, 46, 52, 83, 85, 92, 95, 100, 101, 102], "y0": 37, "y_": [82, 83, 85], "yaqi": [85, 87], "ycut": [52, 95, 100, 101], "year": 6, "yet": [4, 84, 85], "yield": [83, 85, 87, 88], "ymax": [38, 54], "ymin": [38, 54], "york": 83, "you": [2, 4, 8, 9, 10, 11], "youcef": 87, "your": [1, 3, 8, 9, 10, 11], "yourself": 4, "yousef": 87, "ys3d": 92, "yuanhua": 87, "yum": [8, 9], "yyi": [67, 68, 69, 70], "z": [2, 37, 38, 39, 44, 45, 46, 49, 52, 83, 92, 99, 101, 102], "z0": 37, "zcut": [52, 95, 101], "zero": [53, 58, 67, 68, 69, 70, 83, 85, 92], "zeyao": 89, "zl04": 89, "zmax": [38, 49, 54], "zmin": [38, 49, 54], "zs3d": 92, "zxf": 8}, "titles": ["Coding Standards", "Developer\u2019s Guide", "Binding C++ classes to Lua", "Binding C++ classes to Python", "Developer Workflow", "Gallery", "The OpenSn Discrete-Ordinates Code", "Quick Install Guide", "Install on Linux Machines", "Easy Install on Linux Machines", "Install on macOS", "Easy Install on macOS", "pyopensn.aquad.AngularQuadrature", "pyopensn.aquad.CurvilinearQuadrature", "pyopensn.aquad.GLCProductQuadrature2DRZ", "pyopensn.aquad.GLCProductQuadrature2DXY", "pyopensn.aquad.GLCProductQuadrature3DXYZ", "pyopensn.aquad.GLProductQuadrature1DSlab", "pyopensn.aquad.ProductQuadrature", "pyopensn.aquad.SLDFESQuadrature", "pyopensn.context.EnableCaliper", "pyopensn.context.EnablePETScErrorHandler", "pyopensn.context.Finalize", "pyopensn.context.InitializeWithArgv", "pyopensn.context.SetCaliperConfig", "pyopensn.context.SetVerbosityLevel", "pyopensn.context.UseColor", "pyopensn.diffusion.CFEMDiffusionSolver", "pyopensn.diffusion.DFEMDiffusionSolver", "pyopensn.diffusion.DiffusionSolverBase", "pyopensn.fieldfunc.FieldFunction", "pyopensn.fieldfunc.FieldFunctionGridBased", "pyopensn.fieldfunc.FieldFunctionInterpolationLine", "pyopensn.fieldfunc.FieldFunctionInterpolationPoint", "pyopensn.fieldfunc.FieldFunctionInterpolationVolume", "pyopensn.logvol.BooleanLogicalVolume", "pyopensn.logvol.LogicalVolume", "pyopensn.logvol.RCCLogicalVolume", "pyopensn.logvol.RPPLogicalVolume", "pyopensn.logvol.SphereLogicalVolume", "pyopensn.logvol.SurfaceMeshLogicalVolume", "pyopensn.math.Function", "pyopensn.math.ScalarMaterialFunction", "pyopensn.math.ScalarSpatialFunction", "pyopensn.math.ScalarSpatialMaterialFunction", "pyopensn.math.Vector3", "pyopensn.math.VectorSpatialFunction", "pyopensn.math.Ylm", "pyopensn.mesh.DistributedMeshGenerator", "pyopensn.mesh.ExtruderMeshGenerator", "pyopensn.mesh.FromFileMeshGenerator", "pyopensn.mesh.GraphPartitioner", "pyopensn.mesh.KBAGraphPartitioner", "pyopensn.mesh.LinearGraphPartitioner", "pyopensn.mesh.MeshContinuum", "pyopensn.mesh.MeshGenerator", "pyopensn.mesh.OrthogonalMeshGenerator", "pyopensn.mesh.PETScGraphPartitioner", "pyopensn.mesh.SplitFileMeshGenerator", "pyopensn.mesh.SurfaceMesh", "pyopensn.post.AggregateNodalValuePostProcessor", "pyopensn.post.CellVolumeIntegralPostProcessor", "pyopensn.post.PostProcessor", "pyopensn.post.Print", "pyopensn.post.SetPrinterOptions", "pyopensn.post.SolverInfoPostProcessor", "pyopensn.response.ResponseEvaluator", "pyopensn.solver.DiffusionDFEMSolver", "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem", "pyopensn.solver.DiscreteOrdinatesProblem", "pyopensn.solver.LBSProblem", "pyopensn.solver.NonLinearKEigenSolver", "pyopensn.solver.PRKSolver", "pyopensn.solver.PowerIterationKEigenSCDSASolver", "pyopensn.solver.PowerIterationKEigenSMMSolver", "pyopensn.solver.PowerIterationKEigenSolver", "pyopensn.solver.Solver", "pyopensn.solver.SteadyStateSolver", "pyopensn.source.PointSource", "pyopensn.source.VolumetricSource", "pyopensn.xs.MultiGroupXS", "Python API", "<span class=\"section-number\">7. </span>Adjoint Flux Formalism", "<span class=\"section-number\">1. </span>Background on the Linear Boltzmann Equation", "<span class=\"section-number\">3. </span>Multigroup Cross-Section Data", "<span class=\"section-number\">2. </span>Phase-space Discretization", "Theory Manual", "<span class=\"section-number\">5. </span>Iterative Solution Algorithms", "<span class=\"section-number\">4. </span>Outcome of a Simulation: Particle Distribution, Reaction Rates, and Leakage Rates", "<span class=\"section-number\">6. </span>Parallel Sweeps", "<span class=\"section-number\">3. </span>Angular Quadrature", "<span class=\"section-number\">3.1. </span>Introduction to Angular Quadratures", "<span class=\"section-number\">3.2. </span>Product Quadrature", "<span class=\"section-number\">3.3. </span>Simplified Linear Discontinuous Finite Element (LDFE) Quadrature", "Tutorials", "<span class=\"section-number\">4.1. </span>A First Example", "<span class=\"section-number\">4. </span>Linear Boltzmann Solver", "<span class=\"section-number\">1. </span>Meshing and Partitioning", "<span class=\"section-number\">1.1. </span>Introduction to Meshing and Partitioning", "<span class=\"section-number\">1.8. </span>Reading a 2D mesh file and extruding it", "<span class=\"section-number\">1.2. </span>2D Orthogonal Grid Generation", "<span class=\"section-number\">1.3. </span>3D Orthogonal Grid Generation", "<span class=\"section-number\">1.9. </span>3D Orthogonal Grid Generation with multiple block IDs", "<span class=\"section-number\">1.4. </span>Reading a 2D gmsh file", "<span class=\"section-number\">1.5. </span>Reading a 3D gmsh file", "<span class=\"section-number\">1.6. </span>Reading a 2D obj file", "<span class=\"section-number\">1.7. </span>Reading a 3D VTU file", "<span class=\"section-number\">2.3. </span>Read ASCII file for 1-group cross sections", "<span class=\"section-number\">2.2. </span>Built-in method for 1-group cross sections", "<span class=\"section-number\">2. </span>Cross Sections", "<span class=\"section-number\">2.1. </span>Introduction to Cross Sections", "<span class=\"section-number\">2.4. </span>Read ASCII file for multi-group cross sections", "<span class=\"section-number\">2.5. </span>Read HDF5 file from OpenMC to load multi-group cross sections"], "titleterms": {"": 1, "1": [5, 8, 9, 10, 11, 93, 107, 108], "10": [8, 10], "2": [5, 8, 9, 10, 11, 93], "2d": [99, 100, 103, 105], "3": [8, 9, 10, 11], "3d": [101, 102, 104, 106], "4": [8, 9, 10, 11], "5": [8, 9, 10, 11], "6": [8, 9, 10, 11], "7": [8, 9, 10, 11], "768": 5, "8": [8, 10], "9": [8, 10], "A": 95, "The": [6, 83], "acceler": 87, "adjoint": 82, "again": [100, 101], "aggreg": 89, "aggregatenodalvaluepostprocessor": 60, "algorithm": 87, "angl": [83, 85, 89], "angular": [81, 90, 91, 95], "angularquadratur": 12, "api": 81, "aquad": [12, 13, 14, 15, 16, 17, 18, 19], "argument": 81, "ascii": [107, 111], "attent": 4, "background": [83, 87], "base": 81, "benchmark": 5, "bind": [2, 3], "block": 102, "boltzmann": [81, 83, 95, 96], "boolean": 0, "booleanlogicalvolum": 35, "boundari": 83, "branch": 4, "build": [8, 9, 10, 11], "built": 108, "c": [0, 2, 3], "c5g7": 5, "calip": [8, 10, 81], "call": [107, 108, 111, 112], "can": [107, 108, 111, 112], "capabl": 5, "cartesian": 83, "cellvolumeintegralpostprocessor": 61, "cfemdiffusionsolv": 27, "cite": 6, "class": [0, 2, 3, 81], "clone": [8, 9, 10, 11], "code": [0, 6], "command": 0, "comment": 0, "commit": 4, "compil": 3, "condit": [0, 83], "configur": [8, 9, 10, 11, 81], "consol": [8, 9, 10, 11], "constant": 0, "content": 6, "context": [20, 21, 22, 23, 24, 25, 26], "convent": 0, "convert": 95, "coordin": 83, "creat": [4, 92], "critic": 5, "cross": [81, 84, 95, 107, 108, 109, 110, 111, 112], "curvilinear": 83, "curvilinearquadratur": 13, "data": [84, 107, 108, 111, 112], "definit": 83, "detail": 2, "develop": [1, 3, 4, 8, 9, 11], "dfemdiffusionsolv": 28, "diffus": [27, 28, 29, 81], "diffusiondfemsolv": 67, "diffusionsolverbas": 29, "direct": [0, 92], "discontinu": 93, "discret": [6, 85], "discreteordinatescurvilinearproblem": 68, "discreteordinatesproblem": 69, "distribut": 88, "distributedmeshgener": 48, "document": [8, 9, 10, 11], "each": 102, "easi": [9, 11], "eigen": 81, "element": 93, "enablecalip": 20, "enablepetscerrorhandl": 21, "energi": 85, "entri": 102, "enum": [0, 2], "environ": [8, 9, 11], "equat": 83, "evalu": 81, "exampl": [93, 95, 102], "expans": 83, "export": [100, 101, 102], "extens": 95, "extrud": 99, "extrudermeshgener": 49, "field": [81, 95], "fieldfunc": [30, 31, 32, 33, 34], "fieldfunct": 30, "fieldfunctiongridbas": 31, "fieldfunctioninterpolationlin": 32, "fieldfunctioninterpolationpoint": 33, "fieldfunctioninterpolationvolum": 34, "file": [0, 99, 103, 104, 105, 106, 107, 111, 112], "final": [22, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "finit": 93, "first": 95, "fix": 4, "flux": [82, 87], "formal": 82, "format": 4, "from": [95, 112], "fromfilemeshgener": 50, "function": [2, 41, 81, 92, 95], "futur": 3, "galleri": 5, "gcc": 10, "gener": [81, 95, 100, 101, 102], "getter": 0, "ggener": 102, "glcproductquadrature2drz": 14, "glcproductquadrature2dxi": 15, "glcproductquadrature3dxyz": 16, "glproductquadrature1dslab": 17, "gmsh": [103, 104], "graph": 81, "graphpartition": 51, "grid": [81, 100, 101, 102], "group": [87, 89, 107, 108, 111, 112], "guid": [1, 7], "harmon": 81, "hdf5": 112, "i": 102, "id": [95, 100, 101, 102], "import": 95, "includ": 0, "initi": 83, "initializewithargv": 23, "ins": 3, "instal": [7, 8, 9, 10, 11], "interfac": [8, 9, 10, 11], "interpol": 81, "introduct": [89, 91, 98, 110], "iter": [81, 87], "j": 102, "jupyt": [92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "k": [81, 102], "kba": [100, 101], "kbagraphpartition": 52, "kinet": 81, "kit": [8, 10], "krylov": 87, "lb": 95, "lbsproblem": 70, "ldfe": [81, 93], "leakag": 88, "librari": 9, "line": 0, "linear": [81, 83, 93, 95, 96], "lineargraphpartition": 53, "linux": [8, 9], "list": [95, 100, 101, 102], "load": 112, "log": 81, "logic": 81, "logicalvolum": 36, "logvol": [35, 36, 37, 38, 39, 40], "lua": [2, 8, 9, 10, 11], "machin": [8, 9], "maco": [10, 11], "macro": 0, "manual": 86, "materi": [95, 100, 101, 102], "material_id": 102, "math": [41, 42, 43, 44, 45, 46, 47, 81], "member": 2, "mesh": [5, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 81, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106], "meshcontinuum": 54, "meshgener": 55, "method": [85, 87, 108], "more": 2, "mpich": [10, 11], "multi": [111, 112], "multigroup": [84, 87], "multigroupx": 80, "multipl": 102, "name": 0, "namespac": [0, 2, 3], "node": [95, 100, 101, 102], "non": 81, "nonlinearkeigensolv": 71, "notebook": [92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "number": 0, "obj": 105, "onli": [92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "openmc": 112, "opensn": [6, 8, 9, 10, 11, 83], "oper": 0, "option": 95, "ordin": 6, "orthogon": [95, 100, 101, 102], "orthogonalmeshgener": 56, "outcom": 88, "parallel": 89, "paramet": [0, 2, 92, 93], "parmeti": [100, 101], "parti": 9, "particl": 88, "partit": [89, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106], "partition": 81, "petsc": [8, 10], "petscgraphpartition": 57, "phase": 85, "plot": [92, 93], "plug": 3, "point": 81, "pointer": 0, "pointsourc": 78, "polyhedr": 5, "possibl": 95, "post": [60, 61, 62, 63, 64, 65, 81, 95], "postprocessor": 62, "power": [81, 87], "poweriterationkeigenscdsasolv": 73, "poweriterationkeigensmmsolv": 74, "poweriterationkeigensolv": 75, "print": 63, "printer": 81, "prksolver": 72, "problem": 95, "process": [87, 95], "processor": [5, 81], "product": [81, 92], "productquadratur": 18, "public": 6, "pull": 4, "pure": 3, "put": 95, "pyopensn": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "python": [3, 8, 9, 10, 11, 81, 107, 108, 111, 112], "quadratur": [81, 90, 91, 92, 93, 95], "quick": 7, "rate": 88, "rcclogicalvolum": 37, "reaction": 88, "read": [99, 103, 104, 105, 106, 107, 111, 112], "reader": [107, 111, 112], "real": 5, "recommend": 6, "redistribut": 83, "refer": [0, 83, 85, 87, 89], "regress": [8, 9, 10, 11], "request": 4, "requir": 95, "respons": [66, 81], "responseevalu": 66, "result": 93, "retriev": [92, 107, 108, 111, 112], "rpplogicalvolum": 38, "run": [8, 9, 10, 11, 95], "scalarmaterialfunct": 42, "scalarspatialfunct": 43, "scalarspatialmaterialfunct": 44, "schedul": 89, "section": [81, 84, 95, 107, 108, 109, 110, 111, 112], "send": 4, "set": [11, 81, 89], "setcaliperconfig": 24, "setprinteropt": 64, "setter": 0, "setverbositylevel": 25, "short": 83, "simplifi": [81, 93], "simul": [5, 88], "sldfe": 93, "sldfesquadratur": 19, "sn": 85, "solut": 87, "solv": 83, "solver": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 87, 95, 96], "solverinfopostprocessor": 65, "some": [107, 108, 111, 112], "sourc": [78, 79, 81, 87, 95], "space": 85, "spatial": 85, "spherelogicalvolum": 39, "spheric": 81, "splitfilemeshgener": 58, "squash": 4, "standard": 0, "state": 81, "static": 0, "steadi": 81, "steadystatesolv": 77, "step": [8, 9, 10, 11], "stream": 83, "struct": 0, "subspac": 87, "summari": 83, "surfac": 81, "surfacemesh": 59, "surfacemeshlogicalvolum": 40, "sweep": [5, 89], "system": 83, "target": 102, "term": 83, "termin": 95, "test": [8, 9, 10, 11], "theori": 86, "thermal": 87, "thi": 95, "third": 9, "togeth": 95, "tool": [8, 9, 10, 11], "transport": 83, "treatment": 87, "trnasient": 81, "tupl": 102, "tutori": 94, "type": 81, "uncollid": 87, "up": 11, "updat": 4, "upscatt": 87, "us": 95, "usecolor": 26, "variabl": 2, "vector": 81, "vector3": 45, "vectorspatialfunct": 46, "via": 95, "visual": [8, 10, 99, 103, 104, 105, 106], "volum": 81, "volumetr": 95, "volumetricsourc": 79, "vtk": 8, "vtu": 106, "where": 102, "within": 87, "workflow": 4, "world": 5, "wrapper": 81, "x": 80, "ylm": 47, "your": 4}})