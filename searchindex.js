Search.setIndex({"alltitles": {"1. Capable of sweeps on Polyhedral meshes": [[5, "capable-of-sweeps-on-polyhedral-meshes"]], "2. C5G7 Criticality Benchmark with 768 processors": [[5, "c5g7-criticality-benchmark-with-768-processors"]], "2. Real world simulations": [[5, "real-world-simulations"]], "2D Orthogonal Grid Generation": [[100, null]], "3D Orthogonal Grid Generation": [[101, null]], "3D Orthogonal Grid Generation with multiple block IDs": [[102, null]], "A First Example": [[92, null]], "Acceleration of Power Iterations": [[84, "acceleration-of-power-iterations"]], "Adjoint Flux Formalism": [[79, null]], "Aggregation": [[86, "aggregation"]], "Angle Discretization (the Sn method)": [[82, "angle-discretization-the-sn-method"]], "Angle-sets": [[86, "angle-sets"]], "Angular Quadrature": [[87, null], [92, "Angular-Quadrature"]], "Angular quadrature": [[78, "angular-quadrature"]], "Argument vector": [[78, "argument-vector"]], "Attention": [[4, null], [4, null]], "Background on the Linear Boltzmann Equation": [[80, null]], "Base class": [[78, "base-class"], [78, "id1"], [78, "id3"], [78, "id4"], [78, "id5"]], "Binding C++ classes to Lua": [[2, null]], "Binding C++ classes to Python": [[3, null]], "Boolean Operations on Logical Volumes": [[96, "Boolean-Operations-on-Logical-Volumes"]], "Boolean operators": [[0, "boolean-operators"]], "Boundary Conditions": [[80, "boundary-conditions"]], "Build documentation": [[7, "build-documentation"], [9, "build-documentation"]], "Built-in method for 1-group cross sections": [[108, null]], "C++ conventions": [[0, "c-conventions"]], "Caliper configuration": [[78, "caliper-configuration"]], "Call OpenMC cross-section reader": [[112, "Call-OpenMC-cross-section-reader"]], "Call built-in method": [[108, "Call-built-in-method"]], "Call cross-section reader": [[107, "Call-cross-section-reader"], [111, "Call-cross-section-reader"]], "Classes": [[2, "classes"], [3, "classes"]], "Classes and Structs": [[0, "classes-and-structs"]], "Classes as Parameters": [[2, "classes-as-parameters"]], "Clone OpenSn": [[7, "clone-opensn"], [9, "clone-opensn"]], "Coding Standards": [[0, null]], "Command-line parameters": [[0, "command-line-parameters"]], "Comments": [[0, "comments"]], "Compilation for developers": [[3, "compilation-for-developers"]], "Conditionals": [[0, "conditionals"]], "Configure and build OpenSn": [[7, "configure-and-build-opensn"], [9, "configure-and-build-opensn"]], "Console application": [[7, "console-application"], [9, "console-application"]], "Contents": [[6, "contents"]], "Converting and Running this Notebook from the Terminal": [[92, "Converting-and-Running-this-Notebook-from-the-Terminal"]], "Create a Branch": [[4, "create-a-branch"]], "Create a Commit": [[4, "create-a-commit"]], "Create a function to plot the quadrature": [[89, "Create-a-function-to-plot-the-quadrature"]], "Create virtual environment": [[9, "create-virtual-environment"]], "Cross Sections": [[92, "Cross-Sections"], [109, null]], "Cross section": [[78, "cross-section"]], "Definitions": [[80, "definitions"]], "Developer Workflow": [[4, null]], "Developer\u2019s Guide": [[1, null]], "Diffusion solver": [[78, "diffusion-solver"]], "Discrete ordinates curvilinear problem": [[78, "discrete-ordinates-curvilinear-problem"]], "Discrete ordinates problem": [[78, "discrete-ordinates-problem"]], "Easy Install using built-in CMake script": [[7, null]], "Energy Discretization": [[82, "energy-discretization"]], "Enums": [[0, "enums"], [2, "enums"]], "Example-1: sLDFE Quadrature parameters": [[90, "Example-1:-sLDFE-Quadrature-parameters"], [90, "id1"]], "Example-2: sLDFE Quadrature parameters": [[90, "Example-2:-sLDFE-Quadrature-parameters"]], "Example: List of target blocks, where each entry is a tuple: ((i, j, k), material_id)": [[102, "Example:-List-of-target-blocks,-where-each-entry-is-a-tuple:-((i,-j,-k),-material_id)"]], "Expansion of the Angle Redistribution Term": [[80, "expansion-of-the-angle-redistribution-term"]], "Export the mesh": [[100, "Export-the-mesh"], [100, "id1"], [101, "Export-the-mesh"], [101, "id1"], [102, "Export-the-mesh"]], "Field functions": [[78, "field-functions"]], "File names": [[0, "file-names"]], "Finalize (for Jupyter Notebook only)": [[89, "Finalize-(for-Jupyter-Notebook-only)"], [90, "Finalize-(for-Jupyter-Notebook-only)"], [92, "Finalize-(for-Jupyter-Notebook-only)"], [96, "Finalize-(for-Jupyter-Notebook-only)"], [99, "Finalize-(for-Jupyter-Notebook-only)"], [100, "Finalize-(for-Jupyter-Notebook-only)"], [101, "Finalize-(for-Jupyter-Notebook-only)"], [102, "Finalize-(for-Jupyter-Notebook-only)"], [103, "Finalize-(for-Jupyter-Notebook-only)"], [104, "Finalize-(for-Jupyter-Notebook-only)"], [105, "Finalize-(for-Jupyter-Notebook-only)"], [106, "Finalize-(for-Jupyter-Notebook-only)"], [107, "Finalize-(for-Jupyter-Notebook-only)"], [108, "Finalize-(for-Jupyter-Notebook-only)"], [111, "Finalize-(for-Jupyter-Notebook-only)"], [112, "Finalize-(for-Jupyter-Notebook-only)"]], "Fixing your branch": [[4, "fixing-your-branch"]], "Formating": [[4, "formating"]], "Function wrappers": [[78, "function-wrappers"]], "Gallery": [[5, null]], "Getters and Setters": [[0, "getters-and-setters"]], "Graph partitioner": [[78, "graph-partitioner"]], "Grid-based": [[78, "grid-based"]], "Group-sets": [[86, "group-sets"]], "Import Requirements": [[92, "Import-Requirements"]], "Include directives": [[0, "include-directives"]], "Initial Conditions": [[80, "initial-conditions"]], "Install Boost": [[9, "install-boost"]], "Install Caliper": [[9, "install-caliper"]], "Install Development Tools": [[7, "install-development-tools"], [9, "install-development-tools"]], "Install PETSc": [[9, "install-petsc"]], "Install VTK": [[9, "install-vtk"]], "Install dependencies": [[7, "install-dependencies"]], "Installation guide": [[9, null]], "Interpolation": [[78, "interpolation"]], "Introduction": [[86, "introduction"]], "Introduction to Angular Quadratures": [[88, null]], "Introduction to Cross Sections": [[110, null]], "Introduction to Logical Volumes": [[95, null]], "Introduction to Meshing and Partitioning": [[98, null]], "Iterative Solution Algorithms": [[84, null]], "Krylov Subspace Method:": [[84, "krylov-subspace-method"]], "Linear Boltzmann Solver": [[92, "Linear-Boltzmann-Solver"], [93, null]], "List of Nodes": [[92, "List-of-Nodes"], [100, "List-of-Nodes"], [101, "List-of-Nodes"]], "List of Nodes, Mesh GGeneration and Partition": [[102, "List-of-Nodes,-Mesh-GGeneration-and-Partition"]], "Load Original Mesh": [[96, "Load-Original-Mesh"]], "Logical Volumes": [[94, null]], "Logical volume": [[78, "logical-volume"]], "Logical volume types": [[78, "logical-volume-types"]], "Logs": [[78, "logs"]], "Macros": [[0, "macros"]], "Material IDs": [[92, "Material-IDs"], [100, "Material-IDs"], [101, "Material-IDs"], [102, "Material-IDs"]], "Math": [[78, "math"]], "Member functions": [[2, "member-functions"]], "Member variables": [[2, "member-variables"]], "Mesh": [[78, "mesh"], [78, "id2"], [92, "Mesh"]], "Mesh (again) and Parmetis partition": [[100, "Mesh-(again)-and-Parmetis-partition"], [101, "Mesh-(again)-and-Parmetis-partition"]], "Mesh and KBA Partition": [[100, "Mesh-and-KBA-Partition"], [101, "Mesh-and-KBA-Partition"]], "Mesh and Partition": [[99, "Mesh-and-Partition"], [103, "Mesh-and-Partition"], [104, "Mesh-and-Partition"], [105, "Mesh-and-Partition"], [106, "Mesh-and-Partition"]], "Mesh generator": [[78, "mesh-generator"]], "Meshing": [[98, "meshing"]], "Meshing and Partitioning": [[97, null]], "Module": [[7, "module"], [9, "module"]], "More details": [[2, "more-details"]], "Multigroup Cross-Section Data": [[81, null]], "Multigroup Solution Process: Background": [[84, "multigroup-solution-process-background"]], "Namespaces": [[0, "namespaces"], [2, "namespaces"], [3, "namespaces"]], "Naming Conventions": [[0, "naming-conventions"]], "Non-linear k-eigen": [[78, "non-linear-k-eigen"]], "Numbers": [[0, "numbers"]], "Options for the Linear Boltzmann Problem (LBS)": [[92, "Options-for-the-Linear-Boltzmann-Problem-(LBS)"]], "Orthogonal Mesh Generation": [[92, "Orthogonal-Mesh-Generation"]], "Outcome of a Simulation: Particle Distribution, Reaction Rates, and Leakage Rates": [[85, null]], "Parallel Sweeps": [[86, null]], "Partitioning": [[98, "partitioning"]], "Partitioning and Scheduling": [[86, "partitioning-and-scheduling"]], "Phase-space Discretization": [[82, null]], "Plot the resulting quadrature": [[90, "Plot-the-resulting-quadrature"], [90, "id2"]], "Point": [[78, "point"]], "Point kinetic transient solver": [[78, "point-kinetic-transient-solver"]], "Pointers": [[0, "pointers"]], "Possible Extensions": [[92, "Possible-Extensions"]], "Post-Processing via Field Functions": [[92, "Post-Processing-via-Field-Functions"]], "Post-processor": [[78, "post-processor"]], "Post-processors": [[78, "post-processors"]], "Power Iterations": [[84, "power-iterations"]], "Power iteration solver": [[78, "power-iteration-solver"]], "Printer": [[78, "printer"]], "Problem": [[78, "problem"]], "Product Quadrature": [[89, null]], "Product quadratures": [[78, "product-quadratures"]], "Pure Python plug-ins (future development)": [[3, "pure-python-plug-ins-future-development"]], "Putting the Linear Boltzmann Solver Together": [[92, "Putting-the-Linear-Boltzmann-Solver-Together"]], "Python API": [[78, null]], "Quadrature parameters": [[89, "Quadrature-parameters"]], "Quick Install Guide": [[8, null]], "Read ASCII file for 1-group cross sections": [[107, null]], "Read ASCII file for multi-group cross sections": [[111, null]], "Read HDF5 file from OpenMC to load multi-group cross sections": [[112, null]], "Reading a 2D gmsh file": [[103, null]], "Reading a 2D mesh file and extruding it": [[99, null]], "Reading a 2D obj file": [[105, null]], "Reading a 3D VTU file": [[106, null]], "Reading a 3D gmsh file": [[104, null]], "Recommended publication for citing": [[6, null]], "Rectangular Parallelepiped as Logical Volumes": [[96, "Rectangular-Parallelepiped-as-Logical-Volumes"]], "References": [[0, "references"], [80, "references"], [82, "references"], [84, "references"], [86, "references"]], "Response evaluator": [[78, "response-evaluator"]], "Retrieve directions": [[89, "Retrieve-directions"]], "Right-Circular Cylinder as Logical Volumes": [[96, "Right-Circular-Cylinder-as-Logical-Volumes"]], "Run regression tests": [[7, "run-regression-tests"], [9, "run-regression-tests"]], "Sending a Pull Request": [[4, "sending-a-pull-request"]], "Settings": [[78, "settings"]], "Short summary of Transport Equations Solved in OpenSn": [[80, "short-summary-of-transport-equations-solved-in-opensn"]], "Simplified LDFES quadrature": [[78, "simplified-ldfes-quadrature"]], "Simplified Linear Discontinuous Finite Element (LDFE) Quadrature": [[90, null]], "Solver base class": [[78, "solver-base-class"]], "Solvers": [[78, "solvers"]], "Some cross-section data can be retrieved in Python": [[107, "Some-cross-section-data-can-be-retrieved-in-Python"], [108, "Some-cross-section-data-can-be-retrieved-in-Python"], [111, "Some-cross-section-data-can-be-retrieved-in-Python"], [112, "Some-cross-section-data-can-be-retrieved-in-Python"]], "Source": [[78, "source"]], "Source Iteration and Krylov Solvers": [[84, "source-iteration-and-krylov-solvers"]], "Source Iteration:": [[84, "source-iteration"]], "Spatial Discretization": [[82, "spatial-discretization"]], "Sphere as Logical Volumes": [[96, "Sphere-as-Logical-Volumes"]], "Spherical harmonics": [[78, "spherical-harmonics"]], "Squashing Commits": [[4, "squashing-commits"]], "Static constants": [[0, "static-constants"]], "Steady state solver": [[78, "steady-state-solver"]], "Streaming Term in Cartesian and Curvilinear Coordinate Systems": [[80, "streaming-term-in-cartesian-and-curvilinear-coordinate-systems"]], "Surface mesh": [[78, "surface-mesh"]], "The Linear Boltzmann Equation": [[80, "the-linear-boltzmann-equation"]], "The OpenSn Discrete-Ordinates Code": [[6, null]], "Theory Manual": [[83, null]], "Thermal Upscattering Acceleration": [[84, "thermal-upscattering-acceleration"]], "Tutorials": [[91, null]], "Uncollided-flux Treatment": [[84, "uncollided-flux-treatment"]], "Updating Your Branch": [[4, "updating-your-branch"]], "Using Logical Volumes": [[96, null]], "Using a Python Function instead of Logical Volumes": [[96, "Using-a-Python-Function-instead-of-Logical-Volumes"]], "Using a Skinmesh as Logical Volume": [[96, "Using-a-Skinmesh-as-Logical-Volume"]], "Using this Notebook": [[92, "Using-this-Notebook"]], "Visualization": [[96, "Visualization"], [96, "id1"], [96, "id2"], [96, "id3"], [96, "id4"], [96, "id5"], [96, "id6"], [99, "Visualization"], [103, "Visualization"], [104, "Visualization"], [105, "Visualization"], [106, "Visualization"]], "Volumetric Source": [[92, "Volumetric-Source"]], "Within-group Acceleration": [[84, "within-group-acceleration"]], "pyopensn.aquad.AngularQuadrature": [[10, null]], "pyopensn.aquad.CurvilinearQuadrature": [[11, null]], "pyopensn.aquad.GLCProductQuadrature2DRZ": [[12, null]], "pyopensn.aquad.GLCProductQuadrature2DXY": [[13, null]], "pyopensn.aquad.GLCProductQuadrature3DXYZ": [[14, null]], "pyopensn.aquad.GLProductQuadrature1DSlab": [[15, null]], "pyopensn.aquad.ProductQuadrature": [[16, null]], "pyopensn.aquad.SLDFESQuadrature": [[17, null]], "pyopensn.context.EnableCaliper": [[18, null]], "pyopensn.context.EnablePETScErrorHandler": [[19, null]], "pyopensn.context.Finalize": [[20, null]], "pyopensn.context.InitializeWithArgv": [[21, null]], "pyopensn.context.SetCaliperConfig": [[22, null]], "pyopensn.context.SetVerbosityLevel": [[23, null]], "pyopensn.context.UseColor": [[24, null]], "pyopensn.diffusion.CFEMDiffusionSolver": [[25, null]], "pyopensn.diffusion.DFEMDiffusionSolver": [[26, null]], "pyopensn.diffusion.DiffusionSolverBase": [[27, null]], "pyopensn.fieldfunc.FieldFunction": [[28, null]], "pyopensn.fieldfunc.FieldFunctionGridBased": [[29, null]], "pyopensn.fieldfunc.FieldFunctionInterpolationLine": [[30, null]], "pyopensn.fieldfunc.FieldFunctionInterpolationPoint": [[31, null]], "pyopensn.fieldfunc.FieldFunctionInterpolationVolume": [[32, null]], "pyopensn.logvol.BooleanLogicalVolume": [[33, null]], "pyopensn.logvol.LogicalVolume": [[34, null]], "pyopensn.logvol.RCCLogicalVolume": [[35, null]], "pyopensn.logvol.RPPLogicalVolume": [[36, null]], "pyopensn.logvol.SphereLogicalVolume": [[37, null]], "pyopensn.logvol.SurfaceMeshLogicalVolume": [[38, null]], "pyopensn.math.Function": [[39, null]], "pyopensn.math.ScalarMaterialFunction": [[40, null]], "pyopensn.math.ScalarSpatialFunction": [[41, null]], "pyopensn.math.ScalarSpatialMaterialFunction": [[42, null]], "pyopensn.math.Vector3": [[43, null]], "pyopensn.math.VectorSpatialFunction": [[44, null]], "pyopensn.math.Ylm": [[45, null]], "pyopensn.mesh.DistributedMeshGenerator": [[46, null]], "pyopensn.mesh.ExtruderMeshGenerator": [[47, null]], "pyopensn.mesh.FromFileMeshGenerator": [[48, null]], "pyopensn.mesh.GraphPartitioner": [[49, null]], "pyopensn.mesh.KBAGraphPartitioner": [[50, null]], "pyopensn.mesh.LinearGraphPartitioner": [[51, null]], "pyopensn.mesh.MeshContinuum": [[52, null]], "pyopensn.mesh.MeshGenerator": [[53, null]], "pyopensn.mesh.OrthogonalMeshGenerator": [[54, null]], "pyopensn.mesh.PETScGraphPartitioner": [[55, null]], "pyopensn.mesh.SplitFileMeshGenerator": [[56, null]], "pyopensn.mesh.SurfaceMesh": [[57, null]], "pyopensn.post.AggregateNodalValuePostProcessor": [[58, null]], "pyopensn.post.CellVolumeIntegralPostProcessor": [[59, null]], "pyopensn.post.PostProcessor": [[60, null]], "pyopensn.post.Print": [[61, null]], "pyopensn.post.SetPrinterOptions": [[62, null]], "pyopensn.post.SolverInfoPostProcessor": [[63, null]], "pyopensn.response.ResponseEvaluator": [[64, null]], "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem": [[65, null]], "pyopensn.solver.DiscreteOrdinatesProblem": [[66, null]], "pyopensn.solver.LBSProblem": [[67, null]], "pyopensn.solver.NonLinearKEigenSolver": [[68, null]], "pyopensn.solver.PRKSolver": [[69, null]], "pyopensn.solver.PowerIterationKEigenSCDSASolver": [[70, null]], "pyopensn.solver.PowerIterationKEigenSMMSolver": [[71, null]], "pyopensn.solver.PowerIterationKEigenSolver": [[72, null]], "pyopensn.solver.Solver": [[73, null]], "pyopensn.solver.SteadyStateSolver": [[74, null]], "pyopensn.source.PointSource": [[75, null]], "pyopensn.source.VolumetricSource": [[76, null]], "pyopensn.xs.MultiGroupXS": [[77, null]]}, "docnames": ["devguide/coding_standard", "devguide/index", "devguide/lua_bindings", "devguide/py_bindings", "devguide/workflow", "gallery", "index", "install/easy_install", "install/index", "install/install", "pyapi/generated/pyopensn.aquad.AngularQuadrature", "pyapi/generated/pyopensn.aquad.CurvilinearQuadrature", "pyapi/generated/pyopensn.aquad.GLCProductQuadrature2DRZ", "pyapi/generated/pyopensn.aquad.GLCProductQuadrature2DXY", "pyapi/generated/pyopensn.aquad.GLCProductQuadrature3DXYZ", "pyapi/generated/pyopensn.aquad.GLProductQuadrature1DSlab", "pyapi/generated/pyopensn.aquad.ProductQuadrature", "pyapi/generated/pyopensn.aquad.SLDFESQuadrature", "pyapi/generated/pyopensn.context.EnableCaliper", "pyapi/generated/pyopensn.context.EnablePETScErrorHandler", "pyapi/generated/pyopensn.context.Finalize", "pyapi/generated/pyopensn.context.InitializeWithArgv", "pyapi/generated/pyopensn.context.SetCaliperConfig", "pyapi/generated/pyopensn.context.SetVerbosityLevel", "pyapi/generated/pyopensn.context.UseColor", "pyapi/generated/pyopensn.diffusion.CFEMDiffusionSolver", "pyapi/generated/pyopensn.diffusion.DFEMDiffusionSolver", "pyapi/generated/pyopensn.diffusion.DiffusionSolverBase", "pyapi/generated/pyopensn.fieldfunc.FieldFunction", "pyapi/generated/pyopensn.fieldfunc.FieldFunctionGridBased", "pyapi/generated/pyopensn.fieldfunc.FieldFunctionInterpolationLine", "pyapi/generated/pyopensn.fieldfunc.FieldFunctionInterpolationPoint", "pyapi/generated/pyopensn.fieldfunc.FieldFunctionInterpolationVolume", "pyapi/generated/pyopensn.logvol.BooleanLogicalVolume", "pyapi/generated/pyopensn.logvol.LogicalVolume", "pyapi/generated/pyopensn.logvol.RCCLogicalVolume", "pyapi/generated/pyopensn.logvol.RPPLogicalVolume", "pyapi/generated/pyopensn.logvol.SphereLogicalVolume", "pyapi/generated/pyopensn.logvol.SurfaceMeshLogicalVolume", "pyapi/generated/pyopensn.math.Function", "pyapi/generated/pyopensn.math.ScalarMaterialFunction", "pyapi/generated/pyopensn.math.ScalarSpatialFunction", "pyapi/generated/pyopensn.math.ScalarSpatialMaterialFunction", "pyapi/generated/pyopensn.math.Vector3", "pyapi/generated/pyopensn.math.VectorSpatialFunction", "pyapi/generated/pyopensn.math.Ylm", "pyapi/generated/pyopensn.mesh.DistributedMeshGenerator", "pyapi/generated/pyopensn.mesh.ExtruderMeshGenerator", "pyapi/generated/pyopensn.mesh.FromFileMeshGenerator", "pyapi/generated/pyopensn.mesh.GraphPartitioner", "pyapi/generated/pyopensn.mesh.KBAGraphPartitioner", "pyapi/generated/pyopensn.mesh.LinearGraphPartitioner", "pyapi/generated/pyopensn.mesh.MeshContinuum", "pyapi/generated/pyopensn.mesh.MeshGenerator", "pyapi/generated/pyopensn.mesh.OrthogonalMeshGenerator", "pyapi/generated/pyopensn.mesh.PETScGraphPartitioner", "pyapi/generated/pyopensn.mesh.SplitFileMeshGenerator", "pyapi/generated/pyopensn.mesh.SurfaceMesh", "pyapi/generated/pyopensn.post.AggregateNodalValuePostProcessor", "pyapi/generated/pyopensn.post.CellVolumeIntegralPostProcessor", "pyapi/generated/pyopensn.post.PostProcessor", "pyapi/generated/pyopensn.post.Print", "pyapi/generated/pyopensn.post.SetPrinterOptions", "pyapi/generated/pyopensn.post.SolverInfoPostProcessor", "pyapi/generated/pyopensn.response.ResponseEvaluator", "pyapi/generated/pyopensn.solver.DiscreteOrdinatesCurvilinearProblem", "pyapi/generated/pyopensn.solver.DiscreteOrdinatesProblem", "pyapi/generated/pyopensn.solver.LBSProblem", "pyapi/generated/pyopensn.solver.NonLinearKEigenSolver", "pyapi/generated/pyopensn.solver.PRKSolver", "pyapi/generated/pyopensn.solver.PowerIterationKEigenSCDSASolver", "pyapi/generated/pyopensn.solver.PowerIterationKEigenSMMSolver", "pyapi/generated/pyopensn.solver.PowerIterationKEigenSolver", "pyapi/generated/pyopensn.solver.Solver", "pyapi/generated/pyopensn.solver.SteadyStateSolver", "pyapi/generated/pyopensn.source.PointSource", "pyapi/generated/pyopensn.source.VolumetricSource", "pyapi/generated/pyopensn.xs.MultiGroupXS", "pyapi/index", "theory/adjoint", "theory/background", "theory/cross_sections", "theory/discretization", "theory/index", "theory/iterative", "theory/outcome", "theory/parallelization", "tutorials/aquad/index", "tutorials/aquad/introduction", "tutorials/aquad/product_GLC", "tutorials/aquad/sLDFE", "tutorials/index", "tutorials/lbs/first/first_example", "tutorials/lbs/index", "tutorials/logvol/index", "tutorials/logvol/introduction", "tutorials/logvol/logvol_examples", "tutorials/mesh/index", "tutorials/mesh/introduction", "tutorials/mesh/mesh_extrude", "tutorials/mesh/mesh_ortho_2D", "tutorials/mesh/mesh_ortho_3D", "tutorials/mesh/mesh_ortho_3D_blockIDs", "tutorials/mesh/mesh_read_gmsh_2D", "tutorials/mesh/mesh_read_gmsh_3D", "tutorials/mesh/mesh_read_obj_2D", "tutorials/mesh/mesh_read_vtu_3D", "tutorials/xs/1g_xs_read_file", "tutorials/xs/1g_xs_simple", "tutorials/xs/index", "tutorials/xs/introduction", "tutorials/xs/mg_xs_read_file", "tutorials/xs/mg_xs_read_openmc"], "envversion": {"nbsphinx": 4, "sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinxcontrib.bibtex": 9}, "filenames": ["devguide/coding_standard.md", "devguide/index.rst", "devguide/lua_bindings.md", "devguide/py_bindings.rst", "devguide/workflow.md", "gallery.md", "index.rst", "install/easy_install.rst", "install/index.rst", "install/install.rst", "pyapi/generated/pyopensn.aquad.AngularQuadrature.rst", "pyapi/generated/pyopensn.aquad.CurvilinearQuadrature.rst", "pyapi/generated/pyopensn.aquad.GLCProductQuadrature2DRZ.rst", "pyapi/generated/pyopensn.aquad.GLCProductQuadrature2DXY.rst", "pyapi/generated/pyopensn.aquad.GLCProductQuadrature3DXYZ.rst", "pyapi/generated/pyopensn.aquad.GLProductQuadrature1DSlab.rst", "pyapi/generated/pyopensn.aquad.ProductQuadrature.rst", "pyapi/generated/pyopensn.aquad.SLDFESQuadrature.rst", "pyapi/generated/pyopensn.context.EnableCaliper.rst", "pyapi/generated/pyopensn.context.EnablePETScErrorHandler.rst", "pyapi/generated/pyopensn.context.Finalize.rst", "pyapi/generated/pyopensn.context.InitializeWithArgv.rst", "pyapi/generated/pyopensn.context.SetCaliperConfig.rst", "pyapi/generated/pyopensn.context.SetVerbosityLevel.rst", "pyapi/generated/pyopensn.context.UseColor.rst", "pyapi/generated/pyopensn.diffusion.CFEMDiffusionSolver.rst", "pyapi/generated/pyopensn.diffusion.DFEMDiffusionSolver.rst", "pyapi/generated/pyopensn.diffusion.DiffusionSolverBase.rst", "pyapi/generated/pyopensn.fieldfunc.FieldFunction.rst", "pyapi/generated/pyopensn.fieldfunc.FieldFunctionGridBased.rst", "pyapi/generated/pyopensn.fieldfunc.FieldFunctionInterpolationLine.rst", "pyapi/generated/pyopensn.fieldfunc.FieldFunctionInterpolationPoint.rst", "pyapi/generated/pyopensn.fieldfunc.FieldFunctionInterpolationVolume.rst", "pyapi/generated/pyopensn.logvol.BooleanLogicalVolume.rst", "pyapi/generated/pyopensn.logvol.LogicalVolume.rst", "pyapi/generated/pyopensn.logvol.RCCLogicalVolume.rst", "pyapi/generated/pyopensn.logvol.RPPLogicalVolume.rst", "pyapi/generated/pyopensn.logvol.SphereLogicalVolume.rst", "pyapi/generated/pyopensn.logvol.SurfaceMeshLogicalVolume.rst", "pyapi/generated/pyopensn.math.Function.rst", "pyapi/generated/pyopensn.math.ScalarMaterialFunction.rst", "pyapi/generated/pyopensn.math.ScalarSpatialFunction.rst", "pyapi/generated/pyopensn.math.ScalarSpatialMaterialFunction.rst", "pyapi/generated/pyopensn.math.Vector3.rst", "pyapi/generated/pyopensn.math.VectorSpatialFunction.rst", "pyapi/generated/pyopensn.math.Ylm.rst", "pyapi/generated/pyopensn.mesh.DistributedMeshGenerator.rst", "pyapi/generated/pyopensn.mesh.ExtruderMeshGenerator.rst", "pyapi/generated/pyopensn.mesh.FromFileMeshGenerator.rst", "pyapi/generated/pyopensn.mesh.GraphPartitioner.rst", "pyapi/generated/pyopensn.mesh.KBAGraphPartitioner.rst", "pyapi/generated/pyopensn.mesh.LinearGraphPartitioner.rst", "pyapi/generated/pyopensn.mesh.MeshContinuum.rst", "pyapi/generated/pyopensn.mesh.MeshGenerator.rst", "pyapi/generated/pyopensn.mesh.OrthogonalMeshGenerator.rst", "pyapi/generated/pyopensn.mesh.PETScGraphPartitioner.rst", "pyapi/generated/pyopensn.mesh.SplitFileMeshGenerator.rst", "pyapi/generated/pyopensn.mesh.SurfaceMesh.rst", "pyapi/generated/pyopensn.post.AggregateNodalValuePostProcessor.rst", "pyapi/generated/pyopensn.post.CellVolumeIntegralPostProcessor.rst", "pyapi/generated/pyopensn.post.PostProcessor.rst", "pyapi/generated/pyopensn.post.Print.rst", "pyapi/generated/pyopensn.post.SetPrinterOptions.rst", "pyapi/generated/pyopensn.post.SolverInfoPostProcessor.rst", "pyapi/generated/pyopensn.response.ResponseEvaluator.rst", "pyapi/generated/pyopensn.solver.DiscreteOrdinatesCurvilinearProblem.rst", "pyapi/generated/pyopensn.solver.DiscreteOrdinatesProblem.rst", "pyapi/generated/pyopensn.solver.LBSProblem.rst", "pyapi/generated/pyopensn.solver.NonLinearKEigenSolver.rst", "pyapi/generated/pyopensn.solver.PRKSolver.rst", "pyapi/generated/pyopensn.solver.PowerIterationKEigenSCDSASolver.rst", "pyapi/generated/pyopensn.solver.PowerIterationKEigenSMMSolver.rst", "pyapi/generated/pyopensn.solver.PowerIterationKEigenSolver.rst", "pyapi/generated/pyopensn.solver.Solver.rst", "pyapi/generated/pyopensn.solver.SteadyStateSolver.rst", "pyapi/generated/pyopensn.source.PointSource.rst", "pyapi/generated/pyopensn.source.VolumetricSource.rst", "pyapi/generated/pyopensn.xs.MultiGroupXS.rst", "pyapi/index.rst", "theory/adjoint.rst", "theory/background.rst", "theory/cross_sections.rst", "theory/discretization.rst", "theory/index.rst", "theory/iterative.rst", "theory/outcome.rst", "theory/parallelization.rst", "tutorials/aquad/index.rst", "tutorials/aquad/introduction.rst", "tutorials/aquad/product_GLC.ipynb", "tutorials/aquad/sLDFE.ipynb", "tutorials/index.rst", "tutorials/lbs/first/first_example.ipynb", "tutorials/lbs/index.rst", "tutorials/logvol/index.rst", "tutorials/logvol/introduction.rst", "tutorials/logvol/logvol_examples.ipynb", "tutorials/mesh/index.rst", "tutorials/mesh/introduction.rst", "tutorials/mesh/mesh_extrude.ipynb", "tutorials/mesh/mesh_ortho_2D.ipynb", "tutorials/mesh/mesh_ortho_3D.ipynb", "tutorials/mesh/mesh_ortho_3D_blockIDs.ipynb", "tutorials/mesh/mesh_read_gmsh_2D.ipynb", "tutorials/mesh/mesh_read_gmsh_3D.ipynb", "tutorials/mesh/mesh_read_obj_2D.ipynb", "tutorials/mesh/mesh_read_vtu_3D.ipynb", "tutorials/xs/1g_xs_read_file.ipynb", "tutorials/xs/1g_xs_simple.ipynb", "tutorials/xs/index.rst", "tutorials/xs/introduction.rst", "tutorials/xs/mg_xs_read_file.ipynb", "tutorials/xs/mg_xs_read_openmc.ipynb"], "indexentries": {"__call__() (pyopensn.math.scalarmaterialfunction method)": [[40, "pyopensn.math.ScalarMaterialFunction.__call__", false]], "__call__() (pyopensn.math.scalarspatialfunction method)": [[41, "pyopensn.math.ScalarSpatialFunction.__call__", false]], "__call__() (pyopensn.math.scalarspatialmaterialfunction method)": [[42, "pyopensn.math.ScalarSpatialMaterialFunction.__call__", false]], "__call__() (pyopensn.math.vectorspatialfunction method)": [[44, "pyopensn.math.VectorSpatialFunction.__call__", false]], "__init__() (pyopensn.aquad.glcproductquadrature2drz method)": [[12, "pyopensn.aquad.GLCProductQuadrature2DRZ.__init__", false]], "__init__() (pyopensn.aquad.glcproductquadrature2dxy method)": [[13, "pyopensn.aquad.GLCProductQuadrature2DXY.__init__", false]], "__init__() (pyopensn.aquad.glcproductquadrature3dxyz method)": [[14, "pyopensn.aquad.GLCProductQuadrature3DXYZ.__init__", false]], "__init__() (pyopensn.aquad.glproductquadrature1dslab method)": [[15, "pyopensn.aquad.GLProductQuadrature1DSlab.__init__", false]], "__init__() (pyopensn.aquad.sldfesquadrature method)": [[17, "pyopensn.aquad.SLDFESQuadrature.__init__", false]], "__init__() (pyopensn.diffusion.cfemdiffusionsolver method)": [[25, "pyopensn.diffusion.CFEMDiffusionSolver.__init__", false]], "__init__() (pyopensn.diffusion.dfemdiffusionsolver method)": [[26, "pyopensn.diffusion.DFEMDiffusionSolver.__init__", false]], "__init__() (pyopensn.fieldfunc.fieldfunctioninterpolationline method)": [[30, "pyopensn.fieldfunc.FieldFunctionInterpolationLine.__init__", false]], "__init__() (pyopensn.fieldfunc.fieldfunctioninterpolationpoint method)": [[31, "pyopensn.fieldfunc.FieldFunctionInterpolationPoint.__init__", false]], "__init__() (pyopensn.fieldfunc.fieldfunctioninterpolationvolume method)": [[32, "pyopensn.fieldfunc.FieldFunctionInterpolationVolume.__init__", false]], "__init__() (pyopensn.logvol.booleanlogicalvolume method)": [[33, "pyopensn.logvol.BooleanLogicalVolume.__init__", false]], "__init__() (pyopensn.logvol.rcclogicalvolume method)": [[35, "pyopensn.logvol.RCCLogicalVolume.__init__", false]], "__init__() (pyopensn.logvol.rpplogicalvolume method)": [[36, "pyopensn.logvol.RPPLogicalVolume.__init__", false]], "__init__() (pyopensn.logvol.spherelogicalvolume method)": [[37, "pyopensn.logvol.SphereLogicalVolume.__init__", false]], "__init__() (pyopensn.logvol.surfacemeshlogicalvolume method)": [[38, "pyopensn.logvol.SurfaceMeshLogicalVolume.__init__", false]], "__init__() (pyopensn.math.function method)": [[39, "pyopensn.math.Function.__init__", false]], "__init__() (pyopensn.math.scalarmaterialfunction method)": [[40, "pyopensn.math.ScalarMaterialFunction.__init__", false]], "__init__() (pyopensn.math.scalarspatialfunction method)": [[41, "pyopensn.math.ScalarSpatialFunction.__init__", false]], "__init__() (pyopensn.math.scalarspatialmaterialfunction method)": [[42, "pyopensn.math.ScalarSpatialMaterialFunction.__init__", false]], "__init__() (pyopensn.math.vector3 method)": [[43, "pyopensn.math.Vector3.__init__", false]], "__init__() (pyopensn.math.vectorspatialfunction method)": [[44, "pyopensn.math.VectorSpatialFunction.__init__", false]], "__init__() (pyopensn.mesh.distributedmeshgenerator method)": [[46, "pyopensn.mesh.DistributedMeshGenerator.__init__", false]], "__init__() (pyopensn.mesh.extrudermeshgenerator method)": [[47, "pyopensn.mesh.ExtruderMeshGenerator.__init__", false]], "__init__() (pyopensn.mesh.fromfilemeshgenerator method)": [[48, "pyopensn.mesh.FromFileMeshGenerator.__init__", false]], "__init__() (pyopensn.mesh.kbagraphpartitioner method)": [[50, "pyopensn.mesh.KBAGraphPartitioner.__init__", false]], "__init__() (pyopensn.mesh.lineargraphpartitioner method)": [[51, "pyopensn.mesh.LinearGraphPartitioner.__init__", false]], "__init__() (pyopensn.mesh.orthogonalmeshgenerator method)": [[54, "pyopensn.mesh.OrthogonalMeshGenerator.__init__", false]], "__init__() (pyopensn.mesh.petscgraphpartitioner method)": [[55, "pyopensn.mesh.PETScGraphPartitioner.__init__", false]], "__init__() (pyopensn.mesh.splitfilemeshgenerator method)": [[56, "pyopensn.mesh.SplitFileMeshGenerator.__init__", false]], "__init__() (pyopensn.mesh.surfacemesh method)": [[57, "pyopensn.mesh.SurfaceMesh.__init__", false]], "__init__() (pyopensn.post.aggregatenodalvaluepostprocessor method)": [[58, "pyopensn.post.AggregateNodalValuePostProcessor.__init__", false]], "__init__() (pyopensn.post.cellvolumeintegralpostprocessor method)": [[59, "pyopensn.post.CellVolumeIntegralPostProcessor.__init__", false]], "__init__() (pyopensn.post.solverinfopostprocessor method)": [[63, "pyopensn.post.SolverInfoPostProcessor.__init__", false]], "__init__() (pyopensn.response.responseevaluator method)": [[64, "pyopensn.response.ResponseEvaluator.__init__", false]], "__init__() (pyopensn.solver.discreteordinatescurvilinearproblem method)": [[65, "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem.__init__", false]], "__init__() (pyopensn.solver.discreteordinatesproblem method)": [[66, "pyopensn.solver.DiscreteOrdinatesProblem.__init__", false]], "__init__() (pyopensn.solver.nonlinearkeigensolver method)": [[68, "pyopensn.solver.NonLinearKEigenSolver.__init__", false]], "__init__() (pyopensn.solver.poweriterationkeigenscdsasolver method)": [[70, "pyopensn.solver.PowerIterationKEigenSCDSASolver.__init__", false]], "__init__() (pyopensn.solver.poweriterationkeigensmmsolver method)": [[71, "pyopensn.solver.PowerIterationKEigenSMMSolver.__init__", false]], "__init__() (pyopensn.solver.poweriterationkeigensolver method)": [[72, "pyopensn.solver.PowerIterationKEigenSolver.__init__", false]], "__init__() (pyopensn.solver.prksolver method)": [[69, "pyopensn.solver.PRKSolver.__init__", false]], "__init__() (pyopensn.solver.steadystatesolver method)": [[74, "pyopensn.solver.SteadyStateSolver.__init__", false]], "__init__() (pyopensn.source.pointsource method)": [[75, "pyopensn.source.PointSource.__init__", false]], "__init__() (pyopensn.source.volumetricsource method)": [[76, "pyopensn.source.VolumetricSource.__init__", false]], "__init__() (pyopensn.xs.multigroupxs method)": [[77, "pyopensn.xs.MultiGroupXS.__init__", false]], "abscissae (pyopensn.aquad.angularquadrature property)": [[10, "pyopensn.aquad.AngularQuadrature.abscissae", false]], "abscissae (pyopensn.aquad.curvilinearquadrature property)": [[11, "pyopensn.aquad.CurvilinearQuadrature.abscissae", false]], "abscissae (pyopensn.aquad.glcproductquadrature2drz property)": [[12, "pyopensn.aquad.GLCProductQuadrature2DRZ.abscissae", false]], "abscissae (pyopensn.aquad.glcproductquadrature2dxy property)": [[13, "pyopensn.aquad.GLCProductQuadrature2DXY.abscissae", false]], "abscissae (pyopensn.aquad.glcproductquadrature3dxyz property)": [[14, "pyopensn.aquad.GLCProductQuadrature3DXYZ.abscissae", false]], "abscissae (pyopensn.aquad.glproductquadrature1dslab property)": [[15, "pyopensn.aquad.GLProductQuadrature1DSlab.abscissae", false]], "abscissae (pyopensn.aquad.productquadrature property)": [[16, "pyopensn.aquad.ProductQuadrature.abscissae", false]], "abscissae (pyopensn.aquad.sldfesquadrature property)": [[17, "pyopensn.aquad.SLDFESQuadrature.abscissae", false]], "addfieldfunction() (pyopensn.fieldfunc.fieldfunctioninterpolationline method)": [[30, "pyopensn.fieldfunc.FieldFunctionInterpolationLine.AddFieldFunction", false]], "addfieldfunction() (pyopensn.fieldfunc.fieldfunctioninterpolationpoint method)": [[31, "pyopensn.fieldfunc.FieldFunctionInterpolationPoint.AddFieldFunction", false]], "addfieldfunction() (pyopensn.fieldfunc.fieldfunctioninterpolationvolume method)": [[32, "pyopensn.fieldfunc.FieldFunctionInterpolationVolume.AddFieldFunction", false]], "advance() (pyopensn.diffusion.cfemdiffusionsolver method)": [[25, "pyopensn.diffusion.CFEMDiffusionSolver.Advance", false]], "advance() (pyopensn.diffusion.dfemdiffusionsolver method)": [[26, "pyopensn.diffusion.DFEMDiffusionSolver.Advance", false]], "advance() (pyopensn.diffusion.diffusionsolverbase method)": [[27, "pyopensn.diffusion.DiffusionSolverBase.Advance", false]], "advance() (pyopensn.solver.nonlinearkeigensolver method)": [[68, "pyopensn.solver.NonLinearKEigenSolver.Advance", false]], "advance() (pyopensn.solver.poweriterationkeigenscdsasolver method)": [[70, "pyopensn.solver.PowerIterationKEigenSCDSASolver.Advance", false]], "advance() (pyopensn.solver.poweriterationkeigensmmsolver method)": [[71, "pyopensn.solver.PowerIterationKEigenSMMSolver.Advance", false]], "advance() (pyopensn.solver.poweriterationkeigensolver method)": [[72, "pyopensn.solver.PowerIterationKEigenSolver.Advance", false]], "advance() (pyopensn.solver.prksolver method)": [[69, "pyopensn.solver.PRKSolver.Advance", false]], "advance() (pyopensn.solver.solver method)": [[73, "pyopensn.solver.Solver.Advance", false]], "advance() (pyopensn.solver.steadystatesolver method)": [[74, "pyopensn.solver.SteadyStateSolver.Advance", false]], "aggregatenodalvaluepostprocessor (class in pyopensn.post)": [[58, "pyopensn.post.AggregateNodalValuePostProcessor", false]], "angularquadrature (class in pyopensn.aquad)": [[10, "pyopensn.aquad.AngularQuadrature", false]], "booleanlogicalvolume (class in pyopensn.logvol)": [[33, "pyopensn.logvol.BooleanLogicalVolume", false]], "cellvolumeintegralpostprocessor (class in pyopensn.post)": [[59, "pyopensn.post.CellVolumeIntegralPostProcessor", false]], "cfemdiffusionsolver (class in pyopensn.diffusion)": [[25, "pyopensn.diffusion.CFEMDiffusionSolver", false]], "chi (pyopensn.xs.multigroupxs property)": [[77, "pyopensn.xs.MultiGroupXS.chi", false]], "clearforwardsources() (pyopensn.response.responseevaluator method)": [[64, "pyopensn.response.ResponseEvaluator.ClearForwardSources", false]], "computebalance() (pyopensn.solver.discreteordinatescurvilinearproblem method)": [[65, "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem.ComputeBalance", false]], "computebalance() (pyopensn.solver.discreteordinatesproblem method)": [[66, "pyopensn.solver.DiscreteOrdinatesProblem.ComputeBalance", false]], "computefissionrate() (pyopensn.solver.discreteordinatescurvilinearproblem method)": [[65, "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem.ComputeFissionRate", false]], "computefissionrate() (pyopensn.solver.discreteordinatesproblem method)": [[66, "pyopensn.solver.DiscreteOrdinatesProblem.ComputeFissionRate", false]], "computefissionrate() (pyopensn.solver.lbsproblem method)": [[67, "pyopensn.solver.LBSProblem.ComputeFissionRate", false]], "computeleakage() (pyopensn.solver.discreteordinatescurvilinearproblem method)": [[65, "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem.ComputeLeakage", false]], "computeleakage() (pyopensn.solver.discreteordinatesproblem method)": [[66, "pyopensn.solver.DiscreteOrdinatesProblem.ComputeLeakage", false]], "computevolumeperblockid() (pyopensn.mesh.meshcontinuum method)": [[52, "pyopensn.mesh.MeshContinuum.ComputeVolumePerBlockID", false]], "createandwritesourcemoments() (pyopensn.solver.discreteordinatescurvilinearproblem method)": [[65, "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem.CreateAndWriteSourceMoments", false]], "createandwritesourcemoments() (pyopensn.solver.discreteordinatesproblem method)": [[66, "pyopensn.solver.DiscreteOrdinatesProblem.CreateAndWriteSourceMoments", false]], "createandwritesourcemoments() (pyopensn.solver.lbsproblem method)": [[67, "pyopensn.solver.LBSProblem.CreateAndWriteSourceMoments", false]], "createsimpleonegroup() (pyopensn.xs.multigroupxs method)": [[77, "pyopensn.xs.MultiGroupXS.CreateSimpleOneGroup", false]], "curvilinearquadrature (class in pyopensn.aquad)": [[11, "pyopensn.aquad.CurvilinearQuadrature", false]], "dfemdiffusionsolver (class in pyopensn.diffusion)": [[26, "pyopensn.diffusion.DFEMDiffusionSolver", false]], "diffusionsolverbase (class in pyopensn.diffusion)": [[27, "pyopensn.diffusion.DiffusionSolverBase", false]], "dimension (pyopensn.mesh.meshcontinuum property)": [[52, "pyopensn.mesh.MeshContinuum.dimension", false]], "discreteordinatescurvilinearproblem (class in pyopensn.solver)": [[65, "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem", false]], "discreteordinatesproblem (class in pyopensn.solver)": [[66, "pyopensn.solver.DiscreteOrdinatesProblem", false]], "distributedmeshgenerator (class in pyopensn.mesh)": [[46, "pyopensn.mesh.DistributedMeshGenerator", false]], "enablecaliper() (in module pyopensn.context)": [[18, "pyopensn.context.EnableCaliper", false]], "enablepetscerrorhandler() (in module pyopensn.context)": [[19, "pyopensn.context.EnablePETScErrorHandler", false]], "evaluateresponse() (pyopensn.response.responseevaluator method)": [[64, "pyopensn.response.ResponseEvaluator.EvaluateResponse", false]], "execute() (pyopensn.diffusion.cfemdiffusionsolver method)": [[25, "pyopensn.diffusion.CFEMDiffusionSolver.Execute", false]], "execute() (pyopensn.diffusion.dfemdiffusionsolver method)": [[26, "pyopensn.diffusion.DFEMDiffusionSolver.Execute", false]], "execute() (pyopensn.diffusion.diffusionsolverbase method)": [[27, "pyopensn.diffusion.DiffusionSolverBase.Execute", false]], "execute() (pyopensn.fieldfunc.fieldfunctioninterpolationline method)": [[30, "pyopensn.fieldfunc.FieldFunctionInterpolationLine.Execute", false]], "execute() (pyopensn.fieldfunc.fieldfunctioninterpolationpoint method)": [[31, "pyopensn.fieldfunc.FieldFunctionInterpolationPoint.Execute", false]], "execute() (pyopensn.fieldfunc.fieldfunctioninterpolationvolume method)": [[32, "pyopensn.fieldfunc.FieldFunctionInterpolationVolume.Execute", false]], "execute() (pyopensn.mesh.distributedmeshgenerator method)": [[46, "pyopensn.mesh.DistributedMeshGenerator.Execute", false]], "execute() (pyopensn.mesh.extrudermeshgenerator method)": [[47, "pyopensn.mesh.ExtruderMeshGenerator.Execute", false]], "execute() (pyopensn.mesh.fromfilemeshgenerator method)": [[48, "pyopensn.mesh.FromFileMeshGenerator.Execute", false]], "execute() (pyopensn.mesh.meshgenerator method)": [[53, "pyopensn.mesh.MeshGenerator.Execute", false]], "execute() (pyopensn.mesh.orthogonalmeshgenerator method)": [[54, "pyopensn.mesh.OrthogonalMeshGenerator.Execute", false]], "execute() (pyopensn.mesh.splitfilemeshgenerator method)": [[56, "pyopensn.mesh.SplitFileMeshGenerator.Execute", false]], "execute() (pyopensn.post.aggregatenodalvaluepostprocessor method)": [[58, "pyopensn.post.AggregateNodalValuePostProcessor.Execute", false]], "execute() (pyopensn.post.cellvolumeintegralpostprocessor method)": [[59, "pyopensn.post.CellVolumeIntegralPostProcessor.Execute", false]], "execute() (pyopensn.post.postprocessor method)": [[60, "pyopensn.post.PostProcessor.Execute", false]], "execute() (pyopensn.post.solverinfopostprocessor method)": [[63, "pyopensn.post.SolverInfoPostProcessor.Execute", false]], "execute() (pyopensn.solver.nonlinearkeigensolver method)": [[68, "pyopensn.solver.NonLinearKEigenSolver.Execute", false]], "execute() (pyopensn.solver.poweriterationkeigenscdsasolver method)": [[70, "pyopensn.solver.PowerIterationKEigenSCDSASolver.Execute", false]], "execute() (pyopensn.solver.poweriterationkeigensmmsolver method)": [[71, "pyopensn.solver.PowerIterationKEigenSMMSolver.Execute", false]], "execute() (pyopensn.solver.poweriterationkeigensolver method)": [[72, "pyopensn.solver.PowerIterationKEigenSolver.Execute", false]], "execute() (pyopensn.solver.prksolver method)": [[69, "pyopensn.solver.PRKSolver.Execute", false]], "execute() (pyopensn.solver.solver method)": [[73, "pyopensn.solver.Solver.Execute", false]], "execute() (pyopensn.solver.steadystatesolver method)": [[74, "pyopensn.solver.SteadyStateSolver.Execute", false]], "exportmultipletovtk() (pyopensn.fieldfunc.fieldfunctiongridbased static method)": [[29, "pyopensn.fieldfunc.FieldFunctionGridBased.ExportMultipleToVTK", false]], "exporttocsv() (pyopensn.fieldfunc.fieldfunctioninterpolationline method)": [[30, "pyopensn.fieldfunc.FieldFunctionInterpolationLine.ExportToCSV", false]], "exporttocsv() (pyopensn.fieldfunc.fieldfunctioninterpolationpoint method)": [[31, "pyopensn.fieldfunc.FieldFunctionInterpolationPoint.ExportToCSV", false]], "exporttocsv() (pyopensn.fieldfunc.fieldfunctioninterpolationvolume method)": [[32, "pyopensn.fieldfunc.FieldFunctionInterpolationVolume.ExportToCSV", false]], "exporttopvtu() (pyopensn.mesh.meshcontinuum method)": [[52, "pyopensn.mesh.MeshContinuum.ExportToPVTU", false]], "extrudermeshgenerator (class in pyopensn.mesh)": [[47, "pyopensn.mesh.ExtruderMeshGenerator", false]], "fieldfunction (class in pyopensn.fieldfunc)": [[28, "pyopensn.fieldfunc.FieldFunction", false]], "fieldfunctiongridbased (class in pyopensn.fieldfunc)": [[29, "pyopensn.fieldfunc.FieldFunctionGridBased", false]], "fieldfunctioninterpolationline (class in pyopensn.fieldfunc)": [[30, "pyopensn.fieldfunc.FieldFunctionInterpolationLine", false]], "fieldfunctioninterpolationpoint (class in pyopensn.fieldfunc)": [[31, "pyopensn.fieldfunc.FieldFunctionInterpolationPoint", false]], "fieldfunctioninterpolationvolume (class in pyopensn.fieldfunc)": [[32, "pyopensn.fieldfunc.FieldFunctionInterpolationVolume", false]], "finalize() (in module pyopensn.context)": [[20, "pyopensn.context.Finalize", false]], "fromfilemeshgenerator (class in pyopensn.mesh)": [[48, "pyopensn.mesh.FromFileMeshGenerator", false]], "function (class in pyopensn.math)": [[39, "pyopensn.math.Function", false]], "geteigenvalue() (pyopensn.solver.nonlinearkeigensolver method)": [[68, "pyopensn.solver.NonLinearKEigenSolver.GetEigenvalue", false]], "geteigenvalue() (pyopensn.solver.poweriterationkeigenscdsasolver method)": [[70, "pyopensn.solver.PowerIterationKEigenSCDSASolver.GetEigenvalue", false]], "geteigenvalue() (pyopensn.solver.poweriterationkeigensmmsolver method)": [[71, "pyopensn.solver.PowerIterationKEigenSMMSolver.GetEigenvalue", false]], "geteigenvalue() (pyopensn.solver.poweriterationkeigensolver method)": [[72, "pyopensn.solver.PowerIterationKEigenSolver.GetEigenvalue", false]], "getfieldfunctionbyname() (pyopensn.fieldfunc.fieldfunctioninterpolationline static method)": [[30, "pyopensn.fieldfunc.FieldFunctionInterpolationLine.GetFieldFunctionByName", false]], "getfieldfunctionbyname() (pyopensn.fieldfunc.fieldfunctioninterpolationpoint static method)": [[31, "pyopensn.fieldfunc.FieldFunctionInterpolationPoint.GetFieldFunctionByName", false]], "getfieldfunctionbyname() (pyopensn.fieldfunc.fieldfunctioninterpolationvolume static method)": [[32, "pyopensn.fieldfunc.FieldFunctionInterpolationVolume.GetFieldFunctionByName", false]], "getfieldfunctions() (pyopensn.diffusion.cfemdiffusionsolver method)": [[25, "pyopensn.diffusion.CFEMDiffusionSolver.GetFieldFunctions", false]], "getfieldfunctions() (pyopensn.diffusion.dfemdiffusionsolver method)": [[26, "pyopensn.diffusion.DFEMDiffusionSolver.GetFieldFunctions", false]], "getfieldfunctions() (pyopensn.diffusion.diffusionsolverbase method)": [[27, "pyopensn.diffusion.DiffusionSolverBase.GetFieldFunctions", false]], "getfieldfunctions() (pyopensn.solver.discreteordinatescurvilinearproblem method)": [[65, "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem.GetFieldFunctions", false]], "getfieldfunctions() (pyopensn.solver.discreteordinatesproblem method)": [[66, "pyopensn.solver.DiscreteOrdinatesProblem.GetFieldFunctions", false]], "getfieldfunctions() (pyopensn.solver.lbsproblem method)": [[67, "pyopensn.solver.LBSProblem.GetFieldFunctions", false]], "getperiod() (pyopensn.solver.prksolver method)": [[69, "pyopensn.solver.PRKSolver.GetPeriod", false]], "getpointvalue() (pyopensn.fieldfunc.fieldfunctioninterpolationpoint method)": [[31, "pyopensn.fieldfunc.FieldFunctionInterpolationPoint.GetPointValue", false]], "getpopulationnew() (pyopensn.solver.prksolver method)": [[69, "pyopensn.solver.PRKSolver.GetPopulationNew", false]], "getpopulationprev() (pyopensn.solver.prksolver method)": [[69, "pyopensn.solver.PRKSolver.GetPopulationPrev", false]], "getpowerfieldfunction() (pyopensn.solver.discreteordinatescurvilinearproblem method)": [[65, "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem.GetPowerFieldFunction", false]], "getpowerfieldfunction() (pyopensn.solver.discreteordinatesproblem method)": [[66, "pyopensn.solver.DiscreteOrdinatesProblem.GetPowerFieldFunction", false]], "getpowerfieldfunction() (pyopensn.solver.lbsproblem method)": [[67, "pyopensn.solver.LBSProblem.GetPowerFieldFunction", false]], "getscalarfieldfunctionlist() (pyopensn.solver.discreteordinatescurvilinearproblem method)": [[65, "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem.GetScalarFieldFunctionList", false]], "getscalarfieldfunctionlist() (pyopensn.solver.discreteordinatesproblem method)": [[66, "pyopensn.solver.DiscreteOrdinatesProblem.GetScalarFieldFunctionList", false]], "getscalarfieldfunctionlist() (pyopensn.solver.lbsproblem method)": [[67, "pyopensn.solver.LBSProblem.GetScalarFieldFunctionList", false]], "getsolutionnew() (pyopensn.solver.prksolver method)": [[69, "pyopensn.solver.PRKSolver.GetSolutionNew", false]], "getsolutionprev() (pyopensn.solver.prksolver method)": [[69, "pyopensn.solver.PRKSolver.GetSolutionPrev", false]], "gettimenew() (pyopensn.solver.prksolver method)": [[69, "pyopensn.solver.PRKSolver.GetTimeNew", false]], "gettimeprev() (pyopensn.solver.prksolver method)": [[69, "pyopensn.solver.PRKSolver.GetTimePrev", false]], "getvalue() (pyopensn.fieldfunc.fieldfunctioninterpolationvolume method)": [[32, "pyopensn.fieldfunc.FieldFunctionInterpolationVolume.GetValue", false]], "getvalue() (pyopensn.post.aggregatenodalvaluepostprocessor method)": [[58, "pyopensn.post.AggregateNodalValuePostProcessor.GetValue", false]], "getvalue() (pyopensn.post.cellvolumeintegralpostprocessor method)": [[59, "pyopensn.post.CellVolumeIntegralPostProcessor.GetValue", false]], "getvalue() (pyopensn.post.postprocessor method)": [[60, "pyopensn.post.PostProcessor.GetValue", false]], "getvalue() (pyopensn.post.solverinfopostprocessor method)": [[63, "pyopensn.post.SolverInfoPostProcessor.GetValue", false]], "glcproductquadrature2drz (class in pyopensn.aquad)": [[12, "pyopensn.aquad.GLCProductQuadrature2DRZ", false]], "glcproductquadrature2dxy (class in pyopensn.aquad)": [[13, "pyopensn.aquad.GLCProductQuadrature2DXY", false]], "glcproductquadrature3dxyz (class in pyopensn.aquad)": [[14, "pyopensn.aquad.GLCProductQuadrature3DXYZ", false]], "glproductquadrature1dslab (class in pyopensn.aquad)": [[15, "pyopensn.aquad.GLProductQuadrature1DSlab", false]], "graphpartitioner (class in pyopensn.mesh)": [[49, "pyopensn.mesh.GraphPartitioner", false]], "importfrommshfiles() (pyopensn.mesh.surfacemesh method)": [[57, "pyopensn.mesh.SurfaceMesh.ImportFromMshFiles", false]], "importfromobjfile() (pyopensn.mesh.surfacemesh method)": [[57, "pyopensn.mesh.SurfaceMesh.ImportFromOBJFile", false]], "importfromtrianglefiles() (pyopensn.mesh.surfacemesh method)": [[57, "pyopensn.mesh.SurfaceMesh.ImportFromTriangleFiles", false]], "initialize() (pyopensn.diffusion.cfemdiffusionsolver method)": [[25, "pyopensn.diffusion.CFEMDiffusionSolver.Initialize", false]], "initialize() (pyopensn.diffusion.dfemdiffusionsolver method)": [[26, "pyopensn.diffusion.DFEMDiffusionSolver.Initialize", false]], "initialize() (pyopensn.diffusion.diffusionsolverbase method)": [[27, "pyopensn.diffusion.DiffusionSolverBase.Initialize", false]], "initialize() (pyopensn.fieldfunc.fieldfunctioninterpolationline method)": [[30, "pyopensn.fieldfunc.FieldFunctionInterpolationLine.Initialize", false]], "initialize() (pyopensn.fieldfunc.fieldfunctioninterpolationpoint method)": [[31, "pyopensn.fieldfunc.FieldFunctionInterpolationPoint.Initialize", false]], "initialize() (pyopensn.fieldfunc.fieldfunctioninterpolationvolume method)": [[32, "pyopensn.fieldfunc.FieldFunctionInterpolationVolume.Initialize", false]], "initialize() (pyopensn.solver.nonlinearkeigensolver method)": [[68, "pyopensn.solver.NonLinearKEigenSolver.Initialize", false]], "initialize() (pyopensn.solver.poweriterationkeigenscdsasolver method)": [[70, "pyopensn.solver.PowerIterationKEigenSCDSASolver.Initialize", false]], "initialize() (pyopensn.solver.poweriterationkeigensmmsolver method)": [[71, "pyopensn.solver.PowerIterationKEigenSMMSolver.Initialize", false]], "initialize() (pyopensn.solver.poweriterationkeigensolver method)": [[72, "pyopensn.solver.PowerIterationKEigenSolver.Initialize", false]], "initialize() (pyopensn.solver.prksolver method)": [[69, "pyopensn.solver.PRKSolver.Initialize", false]], "initialize() (pyopensn.solver.solver method)": [[73, "pyopensn.solver.Solver.Initialize", false]], "initialize() (pyopensn.solver.steadystatesolver method)": [[74, "pyopensn.solver.SteadyStateSolver.Initialize", false]], "initializewithargv() (in module pyopensn.context)": [[21, "pyopensn.context.InitializeWithArgv", false]], "inside() (pyopensn.logvol.booleanlogicalvolume method)": [[33, "pyopensn.logvol.BooleanLogicalVolume.Inside", false]], "inside() (pyopensn.logvol.logicalvolume method)": [[34, "pyopensn.logvol.LogicalVolume.Inside", false]], "inside() (pyopensn.logvol.rcclogicalvolume method)": [[35, "pyopensn.logvol.RCCLogicalVolume.Inside", false]], "inside() (pyopensn.logvol.rpplogicalvolume method)": [[36, "pyopensn.logvol.RPPLogicalVolume.Inside", false]], "inside() (pyopensn.logvol.spherelogicalvolume method)": [[37, "pyopensn.logvol.SphereLogicalVolume.Inside", false]], "inside() (pyopensn.logvol.surfacemeshlogicalvolume method)": [[38, "pyopensn.logvol.SurfaceMeshLogicalVolume.Inside", false]], "inv_velocity (pyopensn.xs.multigroupxs property)": [[77, "pyopensn.xs.MultiGroupXS.inv_velocity", false]], "is_fissionable (pyopensn.xs.multigroupxs property)": [[77, "pyopensn.xs.MultiGroupXS.is_fissionable", false]], "kbagraphpartitioner (class in pyopensn.mesh)": [[50, "pyopensn.mesh.KBAGraphPartitioner", false]], "lbsproblem (class in pyopensn.solver)": [[67, "pyopensn.solver.LBSProblem", false]], "lineargraphpartitioner (class in pyopensn.mesh)": [[51, "pyopensn.mesh.LinearGraphPartitioner", false]], "loadfromopenmc() (pyopensn.xs.multigroupxs method)": [[77, "pyopensn.xs.MultiGroupXS.LoadFromOpenMC", false]], "loadfromopensn() (pyopensn.xs.multigroupxs method)": [[77, "pyopensn.xs.MultiGroupXS.LoadFromOpenSn", false]], "locallyrefine() (pyopensn.aquad.sldfesquadrature method)": [[17, "pyopensn.aquad.SLDFESQuadrature.LocallyRefine", false]], "logicalvolume (class in pyopensn.logvol)": [[34, "pyopensn.logvol.LogicalVolume", false]], "meshcontinuum (class in pyopensn.mesh)": [[52, "pyopensn.mesh.MeshContinuum", false]], "meshgenerator (class in pyopensn.mesh)": [[53, "pyopensn.mesh.MeshGenerator", false]], "multigroupxs (class in pyopensn.xs)": [[77, "pyopensn.xs.MultiGroupXS", false]], "nonlinearkeigensolver (class in pyopensn.solver)": [[68, "pyopensn.solver.NonLinearKEigenSolver", false]], "norm() (pyopensn.math.vector3 method)": [[43, "pyopensn.math.Vector3.Norm", false]], "nu_delayed_sigma_f (pyopensn.xs.multigroupxs property)": [[77, "pyopensn.xs.MultiGroupXS.nu_delayed_sigma_f", false]], "nu_prompt_sigma_f (pyopensn.xs.multigroupxs property)": [[77, "pyopensn.xs.MultiGroupXS.nu_prompt_sigma_f", false]], "nu_sigma_f (pyopensn.xs.multigroupxs property)": [[77, "pyopensn.xs.MultiGroupXS.nu_sigma_f", false]], "num_groups (pyopensn.xs.multigroupxs property)": [[77, "pyopensn.xs.MultiGroupXS.num_groups", false]], "num_precursors (pyopensn.xs.multigroupxs property)": [[77, "pyopensn.xs.MultiGroupXS.num_precursors", false]], "omegas (pyopensn.aquad.angularquadrature property)": [[10, "pyopensn.aquad.AngularQuadrature.omegas", false]], "omegas (pyopensn.aquad.curvilinearquadrature property)": [[11, "pyopensn.aquad.CurvilinearQuadrature.omegas", false]], "omegas (pyopensn.aquad.glcproductquadrature2drz property)": [[12, "pyopensn.aquad.GLCProductQuadrature2DRZ.omegas", false]], "omegas (pyopensn.aquad.glcproductquadrature2dxy property)": [[13, "pyopensn.aquad.GLCProductQuadrature2DXY.omegas", false]], "omegas (pyopensn.aquad.glcproductquadrature3dxyz property)": [[14, "pyopensn.aquad.GLCProductQuadrature3DXYZ.omegas", false]], "omegas (pyopensn.aquad.glproductquadrature1dslab property)": [[15, "pyopensn.aquad.GLProductQuadrature1DSlab.omegas", false]], "omegas (pyopensn.aquad.productquadrature property)": [[16, "pyopensn.aquad.ProductQuadrature.omegas", false]], "omegas (pyopensn.aquad.sldfesquadrature property)": [[17, "pyopensn.aquad.SLDFESQuadrature.omegas", false]], "orthogonalmeshgenerator (class in pyopensn.mesh)": [[54, "pyopensn.mesh.OrthogonalMeshGenerator", false]], "petscgraphpartitioner (class in pyopensn.mesh)": [[55, "pyopensn.mesh.PETScGraphPartitioner", false]], "pointsource (class in pyopensn.source)": [[75, "pyopensn.source.PointSource", false]], "postprocessor (class in pyopensn.post)": [[60, "pyopensn.post.PostProcessor", false]], "poweriterationkeigenscdsasolver (class in pyopensn.solver)": [[70, "pyopensn.solver.PowerIterationKEigenSCDSASolver", false]], "poweriterationkeigensmmsolver (class in pyopensn.solver)": [[71, "pyopensn.solver.PowerIterationKEigenSMMSolver", false]], "poweriterationkeigensolver (class in pyopensn.solver)": [[72, "pyopensn.solver.PowerIterationKEigenSolver", false]], "print() (in module pyopensn.post)": [[61, "pyopensn.post.Print", false]], "printquadraturetofile() (pyopensn.aquad.sldfesquadrature method)": [[17, "pyopensn.aquad.SLDFESQuadrature.PrintQuadratureToFile", false]], "prksolver (class in pyopensn.solver)": [[69, "pyopensn.solver.PRKSolver", false]], "productquadrature (class in pyopensn.aquad)": [[16, "pyopensn.aquad.ProductQuadrature", false]], "rcclogicalvolume (class in pyopensn.logvol)": [[35, "pyopensn.logvol.RCCLogicalVolume", false]], "readangularfluxes() (pyopensn.solver.discreteordinatescurvilinearproblem method)": [[65, "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem.ReadAngularFluxes", false]], "readangularfluxes() (pyopensn.solver.discreteordinatesproblem method)": [[66, "pyopensn.solver.DiscreteOrdinatesProblem.ReadAngularFluxes", false]], "readangularfluxes() (pyopensn.solver.lbsproblem method)": [[67, "pyopensn.solver.LBSProblem.ReadAngularFluxes", false]], "readfluxmoments() (pyopensn.solver.discreteordinatescurvilinearproblem method)": [[65, "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem.ReadFluxMoments", false]], "readfluxmoments() (pyopensn.solver.discreteordinatesproblem method)": [[66, "pyopensn.solver.DiscreteOrdinatesProblem.ReadFluxMoments", false]], "readfluxmoments() (pyopensn.solver.lbsproblem method)": [[67, "pyopensn.solver.LBSProblem.ReadFluxMoments", false]], "readfluxmomentsandmakesourcemoments() (pyopensn.solver.discreteordinatescurvilinearproblem method)": [[65, "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem.ReadFluxMomentsAndMakeSourceMoments", false]], "readfluxmomentsandmakesourcemoments() (pyopensn.solver.discreteordinatesproblem method)": [[66, "pyopensn.solver.DiscreteOrdinatesProblem.ReadFluxMomentsAndMakeSourceMoments", false]], "readfluxmomentsandmakesourcemoments() (pyopensn.solver.lbsproblem method)": [[67, "pyopensn.solver.LBSProblem.ReadFluxMomentsAndMakeSourceMoments", false]], "readsourcemoments() (pyopensn.solver.discreteordinatescurvilinearproblem method)": [[65, "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem.ReadSourceMoments", false]], "readsourcemoments() (pyopensn.solver.discreteordinatesproblem method)": [[66, "pyopensn.solver.DiscreteOrdinatesProblem.ReadSourceMoments", false]], "readsourcemoments() (pyopensn.solver.lbsproblem method)": [[67, "pyopensn.solver.LBSProblem.ReadSourceMoments", false]], "responseevaluator (class in pyopensn.response)": [[64, "pyopensn.response.ResponseEvaluator", false]], "rpplogicalvolume (class in pyopensn.logvol)": [[36, "pyopensn.logvol.RPPLogicalVolume", false]], "scalarmaterialfunction (class in pyopensn.math)": [[40, "pyopensn.math.ScalarMaterialFunction", false]], "scalarspatialfunction (class in pyopensn.math)": [[41, "pyopensn.math.ScalarSpatialFunction", false]], "scalarspatialmaterialfunction (class in pyopensn.math)": [[42, "pyopensn.math.ScalarSpatialMaterialFunction", false]], "scaling_factor (pyopensn.xs.multigroupxs property)": [[77, "pyopensn.xs.MultiGroupXS.scaling_factor", false]], "scattering_order (pyopensn.xs.multigroupxs property)": [[77, "pyopensn.xs.MultiGroupXS.scattering_order", false]], "setblockidfromfunction() (pyopensn.mesh.meshcontinuum method)": [[52, "pyopensn.mesh.MeshContinuum.SetBlockIDFromFunction", false]], "setblockidfromlogicalvolume() (pyopensn.mesh.meshcontinuum method)": [[52, "pyopensn.mesh.MeshContinuum.SetBlockIDFromLogicalVolume", false]], "setboundaryidfromlogicalvolume() (pyopensn.mesh.meshcontinuum method)": [[52, "pyopensn.mesh.MeshContinuum.SetBoundaryIDFromLogicalVolume", false]], "setbufferoptions() (pyopensn.response.responseevaluator method)": [[64, "pyopensn.response.ResponseEvaluator.SetBufferOptions", false]], "setcaliperconfig() (in module pyopensn.context)": [[22, "pyopensn.context.SetCaliperConfig", false]], "setdcoeffunction() (pyopensn.diffusion.cfemdiffusionsolver method)": [[25, "pyopensn.diffusion.CFEMDiffusionSolver.SetDCoefFunction", false]], "setdcoeffunction() (pyopensn.diffusion.dfemdiffusionsolver method)": [[26, "pyopensn.diffusion.DFEMDiffusionSolver.SetDCoefFunction", false]], "setdcoeffunction() (pyopensn.diffusion.diffusionsolverbase method)": [[27, "pyopensn.diffusion.DiffusionSolverBase.SetDCoefFunction", false]], "setfinalpoint() (pyopensn.fieldfunc.fieldfunctioninterpolationline method)": [[30, "pyopensn.fieldfunc.FieldFunctionInterpolationLine.SetFinalPoint", false]], "setinitialpoint() (pyopensn.fieldfunc.fieldfunctioninterpolationline method)": [[30, "pyopensn.fieldfunc.FieldFunctionInterpolationLine.SetInitialPoint", false]], "setlogicalvolume() (pyopensn.fieldfunc.fieldfunctioninterpolationvolume method)": [[32, "pyopensn.fieldfunc.FieldFunctionInterpolationVolume.SetLogicalVolume", false]], "setnumberofpoints() (pyopensn.fieldfunc.fieldfunctioninterpolationline method)": [[30, "pyopensn.fieldfunc.FieldFunctionInterpolationLine.SetNumberOfPoints", false]], "setoperationfunction() (pyopensn.fieldfunc.fieldfunctioninterpolationvolume method)": [[32, "pyopensn.fieldfunc.FieldFunctionInterpolationVolume.SetOperationFunction", false]], "setoperationtype() (pyopensn.fieldfunc.fieldfunctioninterpolationvolume method)": [[32, "pyopensn.fieldfunc.FieldFunctionInterpolationVolume.SetOperationType", false]], "setoptions() (pyopensn.diffusion.cfemdiffusionsolver method)": [[25, "pyopensn.diffusion.CFEMDiffusionSolver.SetOptions", false]], "setoptions() (pyopensn.diffusion.dfemdiffusionsolver method)": [[26, "pyopensn.diffusion.DFEMDiffusionSolver.SetOptions", false]], "setoptions() (pyopensn.diffusion.diffusionsolverbase method)": [[27, "pyopensn.diffusion.DiffusionSolverBase.SetOptions", false]], "setoptions() (pyopensn.response.responseevaluator method)": [[64, "pyopensn.response.ResponseEvaluator.SetOptions", false]], "setoptions() (pyopensn.solver.discreteordinatescurvilinearproblem method)": [[65, "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem.SetOptions", false]], "setoptions() (pyopensn.solver.discreteordinatesproblem method)": [[66, "pyopensn.solver.DiscreteOrdinatesProblem.SetOptions", false]], "setoptions() (pyopensn.solver.lbsproblem method)": [[67, "pyopensn.solver.LBSProblem.SetOptions", false]], "setorthogonalboundaries() (pyopensn.mesh.meshcontinuum method)": [[52, "pyopensn.mesh.MeshContinuum.SetOrthogonalBoundaries", false]], "setprinteroptions() (in module pyopensn.post)": [[62, "pyopensn.post.SetPrinterOptions", false]], "setqextfunction() (pyopensn.diffusion.cfemdiffusionsolver method)": [[25, "pyopensn.diffusion.CFEMDiffusionSolver.SetQExtFunction", false]], "setqextfunction() (pyopensn.diffusion.dfemdiffusionsolver method)": [[26, "pyopensn.diffusion.DFEMDiffusionSolver.SetQExtFunction", false]], "setqextfunction() (pyopensn.diffusion.diffusionsolverbase method)": [[27, "pyopensn.diffusion.DiffusionSolverBase.SetQExtFunction", false]], "setrho() (pyopensn.solver.prksolver method)": [[69, "pyopensn.solver.PRKSolver.SetRho", false]], "setscalingfactor() (pyopensn.xs.multigroupxs method)": [[77, "pyopensn.xs.MultiGroupXS.SetScalingFactor", false]], "setsigmaafunction() (pyopensn.diffusion.cfemdiffusionsolver method)": [[25, "pyopensn.diffusion.CFEMDiffusionSolver.SetSigmaAFunction", false]], "setsigmaafunction() (pyopensn.diffusion.dfemdiffusionsolver method)": [[26, "pyopensn.diffusion.DFEMDiffusionSolver.SetSigmaAFunction", false]], "setsigmaafunction() (pyopensn.diffusion.diffusionsolverbase method)": [[27, "pyopensn.diffusion.DiffusionSolverBase.SetSigmaAFunction", false]], "setsourceoptions() (pyopensn.response.responseevaluator method)": [[64, "pyopensn.response.ResponseEvaluator.SetSourceOptions", false]], "setuniformblockid() (pyopensn.mesh.meshcontinuum method)": [[52, "pyopensn.mesh.MeshContinuum.SetUniformBlockID", false]], "setverbositylevel() (in module pyopensn.context)": [[23, "pyopensn.context.SetVerbosityLevel", false]], "sigma_a (pyopensn.xs.multigroupxs property)": [[77, "pyopensn.xs.MultiGroupXS.sigma_a", false]], "sigma_f (pyopensn.xs.multigroupxs property)": [[77, "pyopensn.xs.MultiGroupXS.sigma_f", false]], "sigma_t (pyopensn.xs.multigroupxs property)": [[77, "pyopensn.xs.MultiGroupXS.sigma_t", false]], "sldfesquadrature (class in pyopensn.aquad)": [[17, "pyopensn.aquad.SLDFESQuadrature", false]], "solver (class in pyopensn.solver)": [[73, "pyopensn.solver.Solver", false]], "solverinfopostprocessor (class in pyopensn.post)": [[63, "pyopensn.post.SolverInfoPostProcessor", false]], "spherelogicalvolume (class in pyopensn.logvol)": [[37, "pyopensn.logvol.SphereLogicalVolume", false]], "splitfilemeshgenerator (class in pyopensn.mesh)": [[56, "pyopensn.mesh.SplitFileMeshGenerator", false]], "steadystatesolver (class in pyopensn.solver)": [[74, "pyopensn.solver.SteadyStateSolver", false]], "step() (pyopensn.diffusion.cfemdiffusionsolver method)": [[25, "pyopensn.diffusion.CFEMDiffusionSolver.Step", false]], "step() (pyopensn.diffusion.dfemdiffusionsolver method)": [[26, "pyopensn.diffusion.DFEMDiffusionSolver.Step", false]], "step() (pyopensn.diffusion.diffusionsolverbase method)": [[27, "pyopensn.diffusion.DiffusionSolverBase.Step", false]], "step() (pyopensn.solver.nonlinearkeigensolver method)": [[68, "pyopensn.solver.NonLinearKEigenSolver.Step", false]], "step() (pyopensn.solver.poweriterationkeigenscdsasolver method)": [[70, "pyopensn.solver.PowerIterationKEigenSCDSASolver.Step", false]], "step() (pyopensn.solver.poweriterationkeigensmmsolver method)": [[71, "pyopensn.solver.PowerIterationKEigenSMMSolver.Step", false]], "step() (pyopensn.solver.poweriterationkeigensolver method)": [[72, "pyopensn.solver.PowerIterationKEigenSolver.Step", false]], "step() (pyopensn.solver.prksolver method)": [[69, "pyopensn.solver.PRKSolver.Step", false]], "step() (pyopensn.solver.solver method)": [[73, "pyopensn.solver.Solver.Step", false]], "step() (pyopensn.solver.steadystatesolver method)": [[74, "pyopensn.solver.SteadyStateSolver.Step", false]], "surfacemesh (class in pyopensn.mesh)": [[57, "pyopensn.mesh.SurfaceMesh", false]], "surfacemeshlogicalvolume (class in pyopensn.logvol)": [[38, "pyopensn.logvol.SurfaceMeshLogicalVolume", false]], "updatefieldfunctions() (pyopensn.diffusion.cfemdiffusionsolver method)": [[25, "pyopensn.diffusion.CFEMDiffusionSolver.UpdateFieldFunctions", false]], "updatefieldfunctions() (pyopensn.diffusion.dfemdiffusionsolver method)": [[26, "pyopensn.diffusion.DFEMDiffusionSolver.UpdateFieldFunctions", false]], "updatefieldfunctions() (pyopensn.diffusion.diffusionsolverbase method)": [[27, "pyopensn.diffusion.DiffusionSolverBase.UpdateFieldFunctions", false]], "usecolor() (in module pyopensn.context)": [[24, "pyopensn.context.UseColor", false]], "vector3 (class in pyopensn.math)": [[43, "pyopensn.math.Vector3", false]], "vectorspatialfunction (class in pyopensn.math)": [[44, "pyopensn.math.VectorSpatialFunction", false]], "volumetricsource (class in pyopensn.source)": [[76, "pyopensn.source.VolumetricSource", false]], "weights (pyopensn.aquad.angularquadrature property)": [[10, "pyopensn.aquad.AngularQuadrature.weights", false]], "weights (pyopensn.aquad.curvilinearquadrature property)": [[11, "pyopensn.aquad.CurvilinearQuadrature.weights", false]], "weights (pyopensn.aquad.glcproductquadrature2drz property)": [[12, "pyopensn.aquad.GLCProductQuadrature2DRZ.weights", false]], "weights (pyopensn.aquad.glcproductquadrature2dxy property)": [[13, "pyopensn.aquad.GLCProductQuadrature2DXY.weights", false]], "weights (pyopensn.aquad.glcproductquadrature3dxyz property)": [[14, "pyopensn.aquad.GLCProductQuadrature3DXYZ.weights", false]], "weights (pyopensn.aquad.glproductquadrature1dslab property)": [[15, "pyopensn.aquad.GLProductQuadrature1DSlab.weights", false]], "weights (pyopensn.aquad.productquadrature property)": [[16, "pyopensn.aquad.ProductQuadrature.weights", false]], "weights (pyopensn.aquad.sldfesquadrature property)": [[17, "pyopensn.aquad.SLDFESQuadrature.weights", false]], "writeangularfluxes() (pyopensn.solver.discreteordinatescurvilinearproblem method)": [[65, "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem.WriteAngularFluxes", false]], "writeangularfluxes() (pyopensn.solver.discreteordinatesproblem method)": [[66, "pyopensn.solver.DiscreteOrdinatesProblem.WriteAngularFluxes", false]], "writeangularfluxes() (pyopensn.solver.lbsproblem method)": [[67, "pyopensn.solver.LBSProblem.WriteAngularFluxes", false]], "writefluxmoments() (pyopensn.solver.discreteordinatescurvilinearproblem method)": [[65, "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem.WriteFluxMoments", false]], "writefluxmoments() (pyopensn.solver.discreteordinatesproblem method)": [[66, "pyopensn.solver.DiscreteOrdinatesProblem.WriteFluxMoments", false]], "writefluxmoments() (pyopensn.solver.lbsproblem method)": [[67, "pyopensn.solver.LBSProblem.WriteFluxMoments", false]], "x (pyopensn.math.vector3 property)": [[43, "pyopensn.math.Vector3.x", false]], "y (pyopensn.math.vector3 property)": [[43, "pyopensn.math.Vector3.y", false]], "ylm() (in module pyopensn.math)": [[45, "pyopensn.math.Ylm", false]], "z (pyopensn.math.vector3 property)": [[43, "pyopensn.math.Vector3.z", false]]}, "objects": {"pyopensn.aquad": [[10, 0, 1, "", "AngularQuadrature"], [11, 0, 1, "", "CurvilinearQuadrature"], [12, 0, 1, "", "GLCProductQuadrature2DRZ"], [13, 0, 1, "", "GLCProductQuadrature2DXY"], [14, 0, 1, "", "GLCProductQuadrature3DXYZ"], [15, 0, 1, "", "GLProductQuadrature1DSlab"], [16, 0, 1, "", "ProductQuadrature"], [17, 0, 1, "", "SLDFESQuadrature"]], "pyopensn.aquad.AngularQuadrature": [[10, 1, 1, "", "abscissae"], [10, 1, 1, "", "omegas"], [10, 1, 1, "", "weights"]], "pyopensn.aquad.CurvilinearQuadrature": [[11, 1, 1, "", "abscissae"], [11, 1, 1, "", "omegas"], [11, 1, 1, "", "weights"]], "pyopensn.aquad.GLCProductQuadrature2DRZ": [[12, 2, 1, "", "__init__"], [12, 1, 1, "", "abscissae"], [12, 1, 1, "", "omegas"], [12, 1, 1, "", "weights"]], "pyopensn.aquad.GLCProductQuadrature2DXY": [[13, 2, 1, "", "__init__"], [13, 1, 1, "", "abscissae"], [13, 1, 1, "", "omegas"], [13, 1, 1, "", "weights"]], "pyopensn.aquad.GLCProductQuadrature3DXYZ": [[14, 2, 1, "", "__init__"], [14, 1, 1, "", "abscissae"], [14, 1, 1, "", "omegas"], [14, 1, 1, "", "weights"]], "pyopensn.aquad.GLProductQuadrature1DSlab": [[15, 2, 1, "", "__init__"], [15, 1, 1, "", "abscissae"], [15, 1, 1, "", "omegas"], [15, 1, 1, "", "weights"]], "pyopensn.aquad.ProductQuadrature": [[16, 1, 1, "", "abscissae"], [16, 1, 1, "", "omegas"], [16, 1, 1, "", "weights"]], "pyopensn.aquad.SLDFESQuadrature": [[17, 2, 1, "", "LocallyRefine"], [17, 2, 1, "", "PrintQuadratureToFile"], [17, 2, 1, "", "__init__"], [17, 1, 1, "", "abscissae"], [17, 1, 1, "", "omegas"], [17, 1, 1, "", "weights"]], "pyopensn.context": [[18, 3, 1, "", "EnableCaliper"], [19, 3, 1, "", "EnablePETScErrorHandler"], [20, 3, 1, "", "Finalize"], [21, 3, 1, "", "InitializeWithArgv"], [22, 3, 1, "", "SetCaliperConfig"], [23, 3, 1, "", "SetVerbosityLevel"], [24, 3, 1, "", "UseColor"]], "pyopensn.diffusion": [[25, 0, 1, "", "CFEMDiffusionSolver"], [26, 0, 1, "", "DFEMDiffusionSolver"], [27, 0, 1, "", "DiffusionSolverBase"]], "pyopensn.diffusion.CFEMDiffusionSolver": [[25, 2, 1, "", "Advance"], [25, 2, 1, "", "Execute"], [25, 2, 1, "", "GetFieldFunctions"], [25, 2, 1, "", "Initialize"], [25, 2, 1, "", "SetDCoefFunction"], [25, 2, 1, "", "SetOptions"], [25, 2, 1, "", "SetQExtFunction"], [25, 2, 1, "", "SetSigmaAFunction"], [25, 2, 1, "", "Step"], [25, 2, 1, "", "UpdateFieldFunctions"], [25, 2, 1, "", "__init__"]], "pyopensn.diffusion.DFEMDiffusionSolver": [[26, 2, 1, "", "Advance"], [26, 2, 1, "", "Execute"], [26, 2, 1, "", "GetFieldFunctions"], [26, 2, 1, "", "Initialize"], [26, 2, 1, "", "SetDCoefFunction"], [26, 2, 1, "", "SetOptions"], [26, 2, 1, "", "SetQExtFunction"], [26, 2, 1, "", "SetSigmaAFunction"], [26, 2, 1, "", "Step"], [26, 2, 1, "", "UpdateFieldFunctions"], [26, 2, 1, "", "__init__"]], "pyopensn.diffusion.DiffusionSolverBase": [[27, 2, 1, "", "Advance"], [27, 2, 1, "", "Execute"], [27, 2, 1, "", "GetFieldFunctions"], [27, 2, 1, "", "Initialize"], [27, 2, 1, "", "SetDCoefFunction"], [27, 2, 1, "", "SetOptions"], [27, 2, 1, "", "SetQExtFunction"], [27, 2, 1, "", "SetSigmaAFunction"], [27, 2, 1, "", "Step"], [27, 2, 1, "", "UpdateFieldFunctions"]], "pyopensn.fieldfunc": [[28, 0, 1, "", "FieldFunction"], [29, 0, 1, "", "FieldFunctionGridBased"], [30, 0, 1, "", "FieldFunctionInterpolationLine"], [31, 0, 1, "", "FieldFunctionInterpolationPoint"], [32, 0, 1, "", "FieldFunctionInterpolationVolume"]], "pyopensn.fieldfunc.FieldFunctionGridBased": [[29, 2, 1, "", "ExportMultipleToVTK"]], "pyopensn.fieldfunc.FieldFunctionInterpolationLine": [[30, 2, 1, "", "AddFieldFunction"], [30, 2, 1, "", "Execute"], [30, 2, 1, "", "ExportToCSV"], [30, 2, 1, "", "GetFieldFunctionByName"], [30, 2, 1, "", "Initialize"], [30, 2, 1, "", "SetFinalPoint"], [30, 2, 1, "", "SetInitialPoint"], [30, 2, 1, "", "SetNumberOfPoints"], [30, 2, 1, "", "__init__"]], "pyopensn.fieldfunc.FieldFunctionInterpolationPoint": [[31, 2, 1, "", "AddFieldFunction"], [31, 2, 1, "", "Execute"], [31, 2, 1, "", "ExportToCSV"], [31, 2, 1, "", "GetFieldFunctionByName"], [31, 2, 1, "", "GetPointValue"], [31, 2, 1, "", "Initialize"], [31, 2, 1, "", "__init__"]], "pyopensn.fieldfunc.FieldFunctionInterpolationVolume": [[32, 2, 1, "", "AddFieldFunction"], [32, 2, 1, "", "Execute"], [32, 2, 1, "", "ExportToCSV"], [32, 2, 1, "", "GetFieldFunctionByName"], [32, 2, 1, "", "GetValue"], [32, 2, 1, "", "Initialize"], [32, 2, 1, "", "SetLogicalVolume"], [32, 2, 1, "", "SetOperationFunction"], [32, 2, 1, "", "SetOperationType"], [32, 2, 1, "", "__init__"]], "pyopensn.logvol": [[33, 0, 1, "", "BooleanLogicalVolume"], [34, 0, 1, "", "LogicalVolume"], [35, 0, 1, "", "RCCLogicalVolume"], [36, 0, 1, "", "RPPLogicalVolume"], [37, 0, 1, "", "SphereLogicalVolume"], [38, 0, 1, "", "SurfaceMeshLogicalVolume"]], "pyopensn.logvol.BooleanLogicalVolume": [[33, 2, 1, "", "Inside"], [33, 2, 1, "", "__init__"]], "pyopensn.logvol.LogicalVolume": [[34, 2, 1, "", "Inside"]], "pyopensn.logvol.RCCLogicalVolume": [[35, 2, 1, "", "Inside"], [35, 2, 1, "", "__init__"]], "pyopensn.logvol.RPPLogicalVolume": [[36, 2, 1, "", "Inside"], [36, 2, 1, "", "__init__"]], "pyopensn.logvol.SphereLogicalVolume": [[37, 2, 1, "", "Inside"], [37, 2, 1, "", "__init__"]], "pyopensn.logvol.SurfaceMeshLogicalVolume": [[38, 2, 1, "", "Inside"], [38, 2, 1, "", "__init__"]], "pyopensn.math": [[39, 0, 1, "", "Function"], [40, 0, 1, "", "ScalarMaterialFunction"], [41, 0, 1, "", "ScalarSpatialFunction"], [42, 0, 1, "", "ScalarSpatialMaterialFunction"], [43, 0, 1, "", "Vector3"], [44, 0, 1, "", "VectorSpatialFunction"], [45, 3, 1, "", "Ylm"]], "pyopensn.math.Function": [[39, 2, 1, "", "__init__"]], "pyopensn.math.ScalarMaterialFunction": [[40, 2, 1, "", "__call__"], [40, 2, 1, "", "__init__"]], "pyopensn.math.ScalarSpatialFunction": [[41, 2, 1, "", "__call__"], [41, 2, 1, "", "__init__"]], "pyopensn.math.ScalarSpatialMaterialFunction": [[42, 2, 1, "", "__call__"], [42, 2, 1, "", "__init__"]], "pyopensn.math.Vector3": [[43, 2, 1, "", "Norm"], [43, 2, 1, "", "__init__"], [43, 1, 1, "", "x"], [43, 1, 1, "", "y"], [43, 1, 1, "", "z"]], "pyopensn.math.VectorSpatialFunction": [[44, 2, 1, "", "__call__"], [44, 2, 1, "", "__init__"]], "pyopensn.mesh": [[46, 0, 1, "", "DistributedMeshGenerator"], [47, 0, 1, "", "ExtruderMeshGenerator"], [48, 0, 1, "", "FromFileMeshGenerator"], [49, 0, 1, "", "GraphPartitioner"], [50, 0, 1, "", "KBAGraphPartitioner"], [51, 0, 1, "", "LinearGraphPartitioner"], [52, 0, 1, "", "MeshContinuum"], [53, 0, 1, "", "MeshGenerator"], [54, 0, 1, "", "OrthogonalMeshGenerator"], [55, 0, 1, "", "PETScGraphPartitioner"], [56, 0, 1, "", "SplitFileMeshGenerator"], [57, 0, 1, "", "SurfaceMesh"]], "pyopensn.mesh.DistributedMeshGenerator": [[46, 2, 1, "", "Execute"], [46, 2, 1, "", "__init__"]], "pyopensn.mesh.ExtruderMeshGenerator": [[47, 2, 1, "", "Execute"], [47, 2, 1, "", "__init__"]], "pyopensn.mesh.FromFileMeshGenerator": [[48, 2, 1, "", "Execute"], [48, 2, 1, "", "__init__"]], "pyopensn.mesh.KBAGraphPartitioner": [[50, 2, 1, "", "__init__"]], "pyopensn.mesh.LinearGraphPartitioner": [[51, 2, 1, "", "__init__"]], "pyopensn.mesh.MeshContinuum": [[52, 2, 1, "", "ComputeVolumePerBlockID"], [52, 2, 1, "", "ExportToPVTU"], [52, 2, 1, "", "SetBlockIDFromFunction"], [52, 2, 1, "", "SetBlockIDFromLogicalVolume"], [52, 2, 1, "", "SetBoundaryIDFromLogicalVolume"], [52, 2, 1, "", "SetOrthogonalBoundaries"], [52, 2, 1, "", "SetUniformBlockID"], [52, 1, 1, "", "dimension"]], "pyopensn.mesh.MeshGenerator": [[53, 2, 1, "", "Execute"]], "pyopensn.mesh.OrthogonalMeshGenerator": [[54, 2, 1, "", "Execute"], [54, 2, 1, "", "__init__"]], "pyopensn.mesh.PETScGraphPartitioner": [[55, 2, 1, "", "__init__"]], "pyopensn.mesh.SplitFileMeshGenerator": [[56, 2, 1, "", "Execute"], [56, 2, 1, "", "__init__"]], "pyopensn.mesh.SurfaceMesh": [[57, 2, 1, "", "ImportFromMshFiles"], [57, 2, 1, "", "ImportFromOBJFile"], [57, 2, 1, "", "ImportFromTriangleFiles"], [57, 2, 1, "", "__init__"]], "pyopensn.post": [[58, 0, 1, "", "AggregateNodalValuePostProcessor"], [59, 0, 1, "", "CellVolumeIntegralPostProcessor"], [60, 0, 1, "", "PostProcessor"], [61, 3, 1, "", "Print"], [62, 3, 1, "", "SetPrinterOptions"], [63, 0, 1, "", "SolverInfoPostProcessor"]], "pyopensn.post.AggregateNodalValuePostProcessor": [[58, 2, 1, "", "Execute"], [58, 2, 1, "", "GetValue"], [58, 2, 1, "", "__init__"]], "pyopensn.post.CellVolumeIntegralPostProcessor": [[59, 2, 1, "", "Execute"], [59, 2, 1, "", "GetValue"], [59, 2, 1, "", "__init__"]], "pyopensn.post.PostProcessor": [[60, 2, 1, "", "Execute"], [60, 2, 1, "", "GetValue"]], "pyopensn.post.SolverInfoPostProcessor": [[63, 2, 1, "", "Execute"], [63, 2, 1, "", "GetValue"], [63, 2, 1, "", "__init__"]], "pyopensn.response": [[64, 0, 1, "", "ResponseEvaluator"]], "pyopensn.response.ResponseEvaluator": [[64, 2, 1, "", "ClearForwardSources"], [64, 2, 1, "", "EvaluateResponse"], [64, 2, 1, "", "SetBufferOptions"], [64, 2, 1, "", "SetOptions"], [64, 2, 1, "", "SetSourceOptions"], [64, 2, 1, "", "__init__"]], "pyopensn.solver": [[65, 0, 1, "", "DiscreteOrdinatesCurvilinearProblem"], [66, 0, 1, "", "DiscreteOrdinatesProblem"], [67, 0, 1, "", "LBSProblem"], [68, 0, 1, "", "NonLinearKEigenSolver"], [69, 0, 1, "", "PRKSolver"], [70, 0, 1, "", "PowerIterationKEigenSCDSASolver"], [71, 0, 1, "", "PowerIterationKEigenSMMSolver"], [72, 0, 1, "", "PowerIterationKEigenSolver"], [73, 0, 1, "", "Solver"], [74, 0, 1, "", "SteadyStateSolver"]], "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem": [[65, 2, 1, "", "ComputeBalance"], [65, 2, 1, "", "ComputeFissionRate"], [65, 2, 1, "", "ComputeLeakage"], [65, 2, 1, "", "CreateAndWriteSourceMoments"], [65, 2, 1, "", "GetFieldFunctions"], [65, 2, 1, "", "GetPowerFieldFunction"], [65, 2, 1, "", "GetScalarFieldFunctionList"], [65, 2, 1, "", "ReadAngularFluxes"], [65, 2, 1, "", "ReadFluxMoments"], [65, 2, 1, "", "ReadFluxMomentsAndMakeSourceMoments"], [65, 2, 1, "", "ReadSourceMoments"], [65, 2, 1, "", "SetOptions"], [65, 2, 1, "", "WriteAngularFluxes"], [65, 2, 1, "", "WriteFluxMoments"], [65, 2, 1, "", "__init__"]], "pyopensn.solver.DiscreteOrdinatesProblem": [[66, 2, 1, "", "ComputeBalance"], [66, 2, 1, "", "ComputeFissionRate"], [66, 2, 1, "", "ComputeLeakage"], [66, 2, 1, "", "CreateAndWriteSourceMoments"], [66, 2, 1, "", "GetFieldFunctions"], [66, 2, 1, "", "GetPowerFieldFunction"], [66, 2, 1, "", "GetScalarFieldFunctionList"], [66, 2, 1, "", "ReadAngularFluxes"], [66, 2, 1, "", "ReadFluxMoments"], [66, 2, 1, "", "ReadFluxMomentsAndMakeSourceMoments"], [66, 2, 1, "", "ReadSourceMoments"], [66, 2, 1, "", "SetOptions"], [66, 2, 1, "", "WriteAngularFluxes"], [66, 2, 1, "", "WriteFluxMoments"], [66, 2, 1, "", "__init__"]], "pyopensn.solver.LBSProblem": [[67, 2, 1, "", "ComputeFissionRate"], [67, 2, 1, "", "CreateAndWriteSourceMoments"], [67, 2, 1, "", "GetFieldFunctions"], [67, 2, 1, "", "GetPowerFieldFunction"], [67, 2, 1, "", "GetScalarFieldFunctionList"], [67, 2, 1, "", "ReadAngularFluxes"], [67, 2, 1, "", "ReadFluxMoments"], [67, 2, 1, "", "ReadFluxMomentsAndMakeSourceMoments"], [67, 2, 1, "", "ReadSourceMoments"], [67, 2, 1, "", "SetOptions"], [67, 2, 1, "", "WriteAngularFluxes"], [67, 2, 1, "", "WriteFluxMoments"]], "pyopensn.solver.NonLinearKEigenSolver": [[68, 2, 1, "", "Advance"], [68, 2, 1, "", "Execute"], [68, 2, 1, "", "GetEigenvalue"], [68, 2, 1, "", "Initialize"], [68, 2, 1, "", "Step"], [68, 2, 1, "", "__init__"]], "pyopensn.solver.PRKSolver": [[69, 2, 1, "", "Advance"], [69, 2, 1, "", "Execute"], [69, 2, 1, "", "GetPeriod"], [69, 2, 1, "", "GetPopulationNew"], [69, 2, 1, "", "GetPopulationPrev"], [69, 2, 1, "", "GetSolutionNew"], [69, 2, 1, "", "GetSolutionPrev"], [69, 2, 1, "", "GetTimeNew"], [69, 2, 1, "", "GetTimePrev"], [69, 2, 1, "", "Initialize"], [69, 2, 1, "", "SetRho"], [69, 2, 1, "", "Step"], [69, 2, 1, "", "__init__"]], "pyopensn.solver.PowerIterationKEigenSCDSASolver": [[70, 2, 1, "", "Advance"], [70, 2, 1, "", "Execute"], [70, 2, 1, "", "GetEigenvalue"], [70, 2, 1, "", "Initialize"], [70, 2, 1, "", "Step"], [70, 2, 1, "", "__init__"]], "pyopensn.solver.PowerIterationKEigenSMMSolver": [[71, 2, 1, "", "Advance"], [71, 2, 1, "", "Execute"], [71, 2, 1, "", "GetEigenvalue"], [71, 2, 1, "", "Initialize"], [71, 2, 1, "", "Step"], [71, 2, 1, "", "__init__"]], "pyopensn.solver.PowerIterationKEigenSolver": [[72, 2, 1, "", "Advance"], [72, 2, 1, "", "Execute"], [72, 2, 1, "", "GetEigenvalue"], [72, 2, 1, "", "Initialize"], [72, 2, 1, "", "Step"], [72, 2, 1, "", "__init__"]], "pyopensn.solver.Solver": [[73, 2, 1, "", "Advance"], [73, 2, 1, "", "Execute"], [73, 2, 1, "", "Initialize"], [73, 2, 1, "", "Step"]], "pyopensn.solver.SteadyStateSolver": [[74, 2, 1, "", "Advance"], [74, 2, 1, "", "Execute"], [74, 2, 1, "", "Initialize"], [74, 2, 1, "", "Step"], [74, 2, 1, "", "__init__"]], "pyopensn.source": [[75, 0, 1, "", "PointSource"], [76, 0, 1, "", "VolumetricSource"]], "pyopensn.source.PointSource": [[75, 2, 1, "", "__init__"]], "pyopensn.source.VolumetricSource": [[76, 2, 1, "", "__init__"]], "pyopensn.xs": [[77, 0, 1, "", "MultiGroupXS"]], "pyopensn.xs.MultiGroupXS": [[77, 2, 1, "", "CreateSimpleOneGroup"], [77, 2, 1, "", "LoadFromOpenMC"], [77, 2, 1, "", "LoadFromOpenSn"], [77, 2, 1, "", "SetScalingFactor"], [77, 2, 1, "", "__init__"], [77, 1, 1, "", "chi"], [77, 1, 1, "", "inv_velocity"], [77, 1, 1, "", "is_fissionable"], [77, 1, 1, "", "nu_delayed_sigma_f"], [77, 1, 1, "", "nu_prompt_sigma_f"], [77, 1, 1, "", "nu_sigma_f"], [77, 1, 1, "", "num_groups"], [77, 1, 1, "", "num_precursors"], [77, 1, 1, "", "scaling_factor"], [77, 1, 1, "", "scattering_order"], [77, 1, 1, "", "sigma_a"], [77, 1, 1, "", "sigma_f"], [77, 1, 1, "", "sigma_t"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "property", "Python property"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "objtypes": {"0": "py:class", "1": "py:property", "2": "py:method", "3": "py:function"}, "terms": {"": [2, 4, 6, 9, 52, 56, 57, 63, 69, 70, 71, 79, 80, 81, 82, 84, 85, 86, 89, 90, 92, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "0": [0, 4, 5, 9, 23, 35, 36, 37, 40, 41, 42, 43, 44, 46, 47, 48, 52, 54, 56, 57, 65, 66, 67, 68, 69, 70, 71, 72, 77, 79, 80, 81, 82, 84, 85, 89, 90, 92, 96, 99, 100, 101, 102, 108, 112], "000": 6, "00021": 69, "00027": 69, "00075": 69, "00127": 69, "00142": 69, "00257": 69, "00295639": 84, "00411458408211656": 84, "01": 69, "0124": 69, "013": 82, "0304": 69, "04": 9, "044": 84, "05": 84, "09": 82, "0ac": 80, "0e": [0, 25, 26, 65, 66, 67, 68, 69, 70, 71, 72, 92], "0e6": 68, "0n": 81, "1": [0, 3, 7, 9, 25, 26, 35, 36, 37, 40, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 54, 56, 65, 66, 67, 68, 69, 70, 71, 72, 77, 79, 80, 81, 82, 84, 85, 86, 89, 91, 92, 96, 99, 100, 101, 102, 109], "10": [0, 4, 9, 56, 70, 71, 72, 82, 84, 89, 90, 92, 100, 101, 102], "100": [4, 5, 6, 65, 66, 67, 70, 71, 89], "1000": [62, 70, 71, 72], "100k": 5, "101": 82, "1016": [82, 84], "102": 84, "107": [84, 86], "1080": 84, "108848": 84, "109892": 86, "11": [9, 65, 66, 67, 86], "111": [69, 86, 89], "115": 84, "12": [0, 7, 9, 43, 82, 86, 89], "120": 62, "123": 82, "1234": 0, "126": 84, "129": 82, "13": [4, 84, 86], "13182": 82, "133": 82, "136": 86, "137": 82, "138": 82, "14": 69, "140": 86, "144": 82, "145": 84, "147": 84, "14th": 86, "15": [0, 62, 86, 90], "150": 89, "151": 82, "154": 82, "155": 84, "157": 82, "158": 82, "159": 84, "16": 4, "160": 82, "163": 82, "166": [82, 84], "167": 82, "169": 82, "17": [7, 9, 86], "172": 5, "174": 84, "1767436": 84, "18": 5, "180": 90, "185": 82, "19": [4, 84], "194": 84, "195": 82, "1958": 82, "1961": 82, "1964": 82, "1965": 82, "1968": 82, "1969": 82, "197": 84, "1971": [82, 84], "1973": 82, "1974": 82, "1975": 82, "1976": 80, "1977": 82, "1978": 82, "1979": 80, "198": 86, "1982": [80, 84], "1984": [80, 84], "1986": 84, "1989": 82, "199": 86, "1992": 86, "1993": 84, "1996": 84, "1998": [84, 86], "1999": [84, 86], "1d": [15, 80, 82, 98], "1n": 81, "2": [9, 25, 26, 40, 41, 42, 43, 44, 47, 56, 65, 79, 80, 81, 82, 84, 86, 89, 92, 96, 99, 100, 101, 108], "200": [5, 65, 66, 67, 86], "2000": 86, "2001": 82, "2002": [84, 86], "2003": [82, 84], "2004": [84, 86], "2005": 82, "2008": 82, "2009": [82, 84, 86], "2010": [80, 82, 84], "2011": 82, "2012": 86, "2013": 86, "2014": [82, 84], "2015": 82, "2017": 82, "2019": 84, "2020": [5, 84], "2021": 86, "2022": 84, "2023": 84, "2024": [5, 84], "20435e": [65, 66, 67], "20684": 80, "2123205": 84, "213": 82, "218": 84, "22": [9, 82, 84], "228": 84, "23": 9, "230": 82, "2303107": 84, "233": 82, "24": 89, "245": 84, "248": 84, "253": 84, "255": [82, 86], "256": 82, "2573": 82, "263": 86, "264": 84, "268": 82, "274": 84, "28": [82, 84], "280": 82, "294": 112, "298": 82, "2d": [12, 13, 47, 80, 82, 84, 86, 89, 91, 92, 97, 98, 101], "2d_c5g7_coars": 103, "2n": 81, "2r": [79, 85], "3": [7, 9, 23, 41, 42, 43, 44, 65, 66, 67, 69, 81, 82, 84, 86, 89, 90, 96, 99, 110], "30": [68, 86, 89, 90, 92], "300": 92, "3000": 5, "301": 69, "31": 82, "3178": 82, "3188": 82, "32": [4, 82], "32768": [65, 66, 67], "33": 84, "333": 82, "34": 84, "348": 82, "356": 84, "357": 82, "36": 82, "369": [82, 84], "37": 4, "38": 4, "384": 84, "385": 82, "390": 82, "391": 82, "398": 84, "3d": [5, 14, 41, 80, 82, 89, 91, 96, 97, 98], "3n": 81, "3r": [79, 85], "3rd": 0, "4": [4, 9, 41, 43, 79, 80, 81, 82, 84, 89, 90, 92, 96, 100, 102, 104, 105, 106], "40": 84, "400": 82, "411": 82, "425": 86, "442": 80, "45": [82, 84], "452": 80, "454": 5, "46": 84, "477": 86, "479": 82, "481": 86, "491": 5, "4imnyvpq": 80, "4x4": 86, "5": [4, 43, 47, 69, 86, 89, 96, 102, 108], "50": [68, 70, 71, 96], "500": [25, 26], "500k": 5, "517": 84, "52": 82, "533": 84, "55": 102, "56": 82, "584": 5, "5990": 82, "6": [5, 42, 43, 44, 58, 59, 63, 65, 66, 67, 82, 86, 92, 99], "62": 82, "64": 9, "65": 86, "7": [5, 41, 43, 82, 84, 92, 96, 102], "70": [4, 89], "72": 82, "73": 82, "75": 89, "763": 82, "788": 82, "8": [68, 96, 101, 103], "80": [22, 62], "82": 84, "83": 84, "8413": 84, "8426": 84, "856": 84, "86": 9, "869": 84, "87": 82, "873": 84, "89": 82, "893": 84, "89448": 80, "9": [7, 9, 41, 84, 96, 102], "931": 82, "939": 82, "978": 80, "9789048134113": 80, "99": 86, "A": [0, 4, 6, 7, 9, 32, 46, 47, 48, 54, 56, 62, 64, 65, 66, 67, 80, 82, 84, 86, 88, 91, 93, 95, 96], "As": [79, 86], "At": [4, 84, 86], "By": [3, 9, 65, 66, 67], "For": [0, 2, 80, 82, 84, 85, 86, 98], "If": [0, 2, 4, 7, 9, 17, 52, 56, 62, 65, 66, 67, 68, 70, 71, 72, 80, 81, 86, 102], "In": [0, 3, 4, 7, 9, 20, 80, 81, 82, 84, 86, 89, 90, 92, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "It": [4, 6, 7, 9, 51, 78, 80, 81, 82, 102], "NOT": 4, "ON": [3, 7, 9], "Of": 81, "On": [4, 82, 85, 100, 101], "One": [69, 79, 110], "The": [0, 2, 3, 4, 7, 9, 30, 31, 32, 40, 41, 42, 44, 46, 47, 48, 54, 56, 58, 62, 64, 65, 66, 67, 79, 81, 82, 83, 84, 85, 86, 89, 90, 92, 96, 99, 100, 101, 102, 103, 104, 105, 106], "Their": 82, "Then": [4, 7, 9, 64, 82, 84, 96, 105], "There": 0, "These": [3, 9, 82, 84, 102], "To": [2, 4, 5, 7, 9, 64, 84, 89, 90, 92, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "With": [64, 80, 85, 86], "_": [0, 4, 79, 80, 81, 82, 84, 85, 110], "_0": 79, "__call__": [40, 41, 42, 44], "__init__": [3, 12, 13, 14, 15, 17, 25, 26, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 50, 51, 54, 55, 56, 57, 58, 59, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 89], "__main__": [7, 9], "_c": 82, "_d": 82, "_f": 82, "_g": 84, "_j": 82, "_power_gener": [65, 66, 67], "_r": 80, "_t": 79, "_verts3d": 89, "_x": 85, "_y": 85, "_z": [80, 85], "aah": [65, 66, 86], "abov": [80, 81, 82], "abscissa": [10, 11, 12, 13, 14, 15, 16, 17], "absolut": [68, 70, 71], "absorpt": [77, 81, 84], "accel_pi_k_tol": [70, 71], "accel_pi_max_it": [70, 71], "accel_pi_verbos": [70, 71], "acceler": [5, 6, 70, 71, 83], "accept": [40, 41, 42, 44], "access": [3, 4, 6, 100, 101, 105], "accord": 4, "account": [81, 82], "accuraci": 82, "achiev": [7, 9, 82], "acm": 86, "across": [6, 9, 65, 66, 67, 85], "act": 80, "action": [4, 84], "activ": [4, 9], "actual": [51, 79], "ad": [3, 64, 84, 88, 98], "ada01": 82, "adam": [82, 84, 86], "adapt": [6, 82], "add": [2, 4, 30, 31, 32, 64, 77, 81, 90], "add_artist": 89, "add_subplot": 89, "addfieldfunct": [30, 31, 32], "addfunct": 2, "addit": [3, 63, 65, 66, 67, 70, 71, 80, 82, 98], "addition": [7, 9], "addparamet": 2, "addproperti": 2, "addstaticfunct": 2, "addvari": 2, "adequ": 82, "adjoint": [6, 64, 65, 66, 67, 83], "adjust": [9, 79], "administr": 9, "advanc": [6, 25, 26, 27, 68, 69, 70, 71, 72, 73, 74], "advantag": 86, "affect": 86, "after": [0, 9, 46, 47, 48, 54, 56, 58, 59, 63, 81], "ag": [65, 66, 67], "against": 64, "aggreg": [6, 58, 83, 92], "ags_convergence_check": [65, 66, 67], "ags_toler": [65, 66, 67], "aka": 105, "akin": 84, "al": [82, 84, 86], "al02": 84, "alamo": 82, "albedo": 80, "alcouff": [50, 86], "algebra": 81, "algorithm": [6, 66, 68, 83, 86], "alias": 4, "align": [80, 82, 84], "all": [2, 3, 4, 5, 7, 9, 46, 51, 52, 56, 60, 62, 64, 65, 66, 67, 73, 81, 82, 84, 86, 90, 92, 96, 100, 101, 102], "all_to_rank": 51, "allow": [5, 19, 20, 57, 70, 71, 72, 86, 88, 110], "along": [88, 89, 100, 101], "alongsid": 3, "alpha": [81, 89], "alreadi": 84, "also": [2, 3, 4, 21, 58, 59, 63, 79, 80, 82, 84, 85, 86, 92, 98, 103, 104, 105, 106], "altern": 4, "alwai": 82, "am93": 84, "amato": 86, "amend": [4, 80, 81, 82], "american": 86, "among": [58, 86], "amort": 86, "amount": [62, 84], "amplitud": 84, "an": [2, 4, 6, 7, 9, 17, 20, 25, 26, 27, 35, 36, 47, 50, 54, 58, 64, 76, 77, 79, 80, 81, 82, 84, 86, 92, 96, 98, 105, 110, 112], "analys": 84, "analysi": [80, 82, 86], "analyt": [79, 96], "ang_quad_plot": 90, "angl": [10, 11, 12, 13, 14, 15, 16, 17, 45, 83, 88, 89, 92], "angle_aggregation_num_subset": 92, "angular": [2, 3, 6, 10, 65, 66, 67, 80, 82, 84, 85, 86, 89, 90, 91], "angular_quadratur": 92, "ani": [0, 4, 7, 9, 57, 82, 84, 85, 90], "anil": 84, "anisotrop": 84, "anisotropi": [80, 81], "anl": 9, "annal": 82, "anoth": [82, 102], "another_fil": 0, "another_member_variable_": 0, "answer": 84, "anthoni": 84, "api": [3, 6, 7, 9], "appear": [46, 47, 48, 54, 56, 82], "append": [3, 89, 90, 92, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "appli": [6, 46, 47, 48, 54, 56, 82, 84, 86, 92, 102], "applic": [3, 82, 84, 86], "approach": [3, 7, 9, 20, 82, 85], "appropri": [84, 89], "approx": 80, "approxim": [6, 80, 82, 84], "apt": [7, 9], "aquad": [2, 3, 89, 90, 92], "ar": [0, 2, 3, 4, 6, 7, 9, 33, 47, 51, 52, 58, 59, 62, 63, 64, 65, 66, 67, 70, 79, 80, 81, 82, 84, 86, 88, 89, 92, 100, 101, 102, 106, 107, 108, 110, 111, 112], "arbitrari": [5, 6, 77, 82, 84, 86], "arbitrarili": 6, "archiv": 9, "arg": [3, 89], "argument": [3, 21, 30, 31, 32, 57, 90, 102], "argument_nam": 0, "argv": 21, "arithmet": 92, "around": 90, "arrai": [25, 26, 27, 65, 66, 76, 81, 92, 107, 108, 111, 112], "arriv": 77, "arrow": 89, "arrow3d": 89, "arrowstyl": 89, "articl": [4, 80, 82, 84], "as10": 80, "as_poli": 57, "ascii": [91, 109, 110], "aspect": [82, 92], "asset": [105, 106], "assign": [52, 86, 92, 95, 96, 100, 101, 102], "associ": [25, 26, 27, 38, 40, 41, 42, 44, 45, 47, 80, 82], "assum": [4, 9, 80, 82, 92], "assumpt": 80, "atexit": 20, "atom": 82, "attempt": [7, 9], "auhtor": 6, "author": 4, "auto": 3, "automat": [20, 47, 56, 62, 89, 90, 92, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "autosquash": 4, "avail": [3, 6, 7, 9, 64, 65, 66, 86], "averag": [59, 79, 82, 84], "avg": [32, 58], "avg_func": 32, "avoid": [7, 9, 63, 84, 92], "ax": [84, 89], "axi": 92, "azimuth": [10, 11, 12, 13, 14, 15, 16, 17, 45, 80, 82, 88, 89, 92], "azmi": 80, "b": [0, 3, 4, 43, 82, 84, 86, 89], "b2": 9, "b_": 82, "b_j": 82, "ba23": 84, "background": [6, 83], "bacw08": 82, "bad": 51, "bai08": 82, "bailei": [82, 86], "baker": [50, 86], "balanc": [65, 66, 81], "band": 90, "barbu": 84, "base": [17, 27, 29, 30, 31, 32, 35, 39, 50, 51, 52, 55, 60, 65, 66, 67, 73, 82, 84, 92, 95], "base_nam": [29, 30, 31, 32], "baseclassifbind": 3, "basenam": [65, 66, 67, 89, 90, 96, 99, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "bash": 9, "basi": [82, 86], "basic": [2, 51, 63, 86], "bcd": 86, "bchw00": 86, "becaus": 79, "becom": [6, 65, 66, 67, 84], "been": [7, 9, 79, 84, 85, 86, 105], "befor": [2, 9, 22, 68, 82, 84, 89, 90, 92, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "begin": [0, 18, 64, 79, 80, 82, 84, 85, 86], "beginclass": 2, "beginnamespac": 2, "behavior": 85, "being": 86, "bell": [80, 82], "below": [4, 86, 92, 96, 99, 100, 101, 102, 103, 104, 105], "bengt": 82, "better": [4, 86], "between": [3, 5, 84, 89, 99, 102], "bf09": 86, "bg": 82, "bg79": 80, "big": [4, 79, 80], "bigcup": 82, "bilinear": 82, "bin": [9, 79], "binari": [0, 56, 84], "bind": [1, 6], "bison": [7, 9], "bit": 9, "bk98": 86, "bla": [7, 9], "block": [0, 2, 48, 52, 65, 66, 76, 91, 92, 96, 97, 98], "block_id": [52, 76, 92], "block_id_fieldnam": 48, "block_id_sett": 52, "blockid": [48, 95, 96], "blv": 33, "bmatrix": [80, 85], "bnd_name": [65, 66], "boi": 85, "boltzmann": [2, 6, 67, 82, 83, 85, 86, 91], "book": 80, "bool": [12, 13, 15, 17, 24, 33, 34, 35, 36, 37, 38, 46, 47, 48, 52, 54, 56, 57, 59, 62, 64, 65, 66, 67, 68, 70, 71, 72], "bool_mesh": 96, "boolean": [33, 90], "booleanlogicalvolum": 96, "boost_1_86_0": 9, "boost_root": 9, "bootstrap": 9, "bosler": 82, "both": [0, 4, 7, 9, 47, 82, 92, 100, 101], "bottom": [47, 86], "bottom_boundary_nam": 47, "bound": 2, "boundari": [25, 26, 27, 47, 48, 52, 65, 66, 67, 79, 82, 83, 85, 92, 95, 96, 98, 103, 104, 105], "boundary_condit": [25, 26, 27, 65, 66, 67], "boundary_id_fieldnam": 48, "boundary_nam": 52, "box": 5, "brace": 0, "branch": 1, "breakdown": 68, "breviti": [82, 84], "brew": [7, 9], "brian": 84, "brief": 86, "brinklei": 82, "britton": 86, "broadcast": 56, "broken": 82, "brown": 86, "browser": [7, 9], "bruce": 84, "bruno": 84, "bt": 84, "buffer": 64, "buffer_nam": 64, "build": 3, "build_arg": 3, "build_dep": 7, "build_ext": 3, "builder": 3, "built": [6, 8, 82, 91, 92, 109, 110], "bw": 84, "c": [1, 4, 6, 7, 9, 77, 81, 82, 84, 86, 89, 90, 92, 108], "c5g7": 103, "c5g7_mesh_onli": 103, "c_i": 80, "c_include_path": 9, "cach": 86, "calc": 22, "calcul": [65, 66, 67, 79, 81, 84, 86], "california": 82, "calip": [18, 22], "caliper_dir": 9, "call": [0, 2, 4, 20, 22, 41, 42, 44, 58, 59, 63, 89, 90, 92, 96, 99, 100, 101, 102, 103, 104, 105, 106], "callabl": [40, 41, 42, 44, 52], "can": [2, 3, 4, 6, 7, 9, 20, 22, 47, 51, 64, 79, 80, 81, 82, 84, 85, 86, 95, 98], "cannot": 86, "capabl": 98, "captur": 81, "car71": 82, "carlson": 82, "carol": 86, "cartesian": [46, 48, 54, 66, 83, 92, 100], "case": [0, 4, 9, 20, 80, 82, 84, 86], "caus": [62, 82], "cb58": 82, "cbc": [65, 66], "cc": [0, 2, 9], "ccm": 5, "cd": [7, 9], "cdot": [17, 79, 80, 82, 85, 90], "cel": 9, "cell": [5, 6, 17, 40, 42, 48, 51, 52, 56, 59, 82, 85, 86, 92, 95, 96, 100, 101, 102], "cell_centroid": 52, "center": [5, 92, 100], "centroid": [52, 82, 90, 95], "centuri": 80, "cert": 5, "certain": 85, "cfem": 25, "cfem_diffus": 0, "cfem_diffusion_solv": 0, "chang": [2, 3, 4, 9, 52, 80, 82, 86, 92, 96], "char": 4, "charg": 82, "chebyshev": [12, 13, 14, 82, 88, 89, 92], "check": [4, 33, 34, 35, 36, 37, 38, 65, 66, 67, 77, 82, 84, 102], "checkout": 4, "cheuk": 82, "chi": [77, 81], "chi_": 80, "chi_p": 80, "choic": [4, 70, 86, 88], "chosen": [81, 82, 84, 105], "circa": 5, "circular": 35, "cl61": 82, "cl65": 82, "clang": [3, 4, 7, 9], "clang_format": 4, "clarenc": 82, "clariti": 0, "class": [1, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 89, 92], "class_": 3, "clean": 4, "clear": [64, 65, 66, 67, 79], "clear_boundary_condit": [65, 66, 67], "clear_point_sourc": [65, 66, 67], "clear_sourc": 64, "clear_volumetric_sourc": [65, 66, 67], "clearforwardsourc": 64, "click": 105, "clone": 4, "close": 84, "closest": 82, "closeup": 5, "clr": 89, "cls_name": 2, "cm": 86, "cmake": [3, 6, 8, 9], "cmake_arg": 3, "cmake_prefix_path": 9, "co": [17, 80, 89, 90], "coars": 84, "code": [1, 2, 3, 4, 7, 9, 79, 82, 86, 88, 89, 90, 92, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "collect": [86, 95], "collid": 84, "collis": [80, 84, 86], "colloc": [6, 82], "color": [5, 24, 89], "column": [62, 86], "columnar": 86, "com": [4, 7, 9, 80, 82, 84], "combin": [84, 86], "combinatori": 33, "comm_world": 92, "comma": 62, "command": [1, 3, 4, 9, 21], "comment": [4, 77], "commiss": 82, "commit": 1, "common": [4, 86], "commun": [3, 7, 9, 86], "compani": 80, "compar": 5, "compat": [6, 7, 9], "compil": [0, 1, 6, 7, 9], "complet": [4, 5, 7, 9, 56, 92], "complex": 86, "compon": [7, 9, 35, 84, 86], "compress": 4, "compris": 86, "comput": [3, 6, 45, 47, 52, 59, 64, 65, 66, 67, 69, 79, 80, 81, 82, 84, 85, 86, 88, 102], "computation": 80, "compute_volume_averag": 59, "computebal": [65, 66], "computefissionr": [65, 66, 67], "computeleakag": [65, 66], "computevolumeperblockid": 52, "concav": 5, "concentr": 80, "concept": [86, 92], "concis": 82, "concurr": 86, "condit": [65, 66, 67, 79, 82, 83, 90, 92, 102], "cone": [17, 90], "cone_s": 17, "confer": [82, 86], "config": [22, 24], "configur": [3, 4, 22, 64, 65, 66, 84], "conflict": [4, 7, 9], "connect": 82, "connor": 84, "consequ": 79, "conserv": [79, 80, 81], "consid": [82, 86], "consist": [7, 9, 82, 84], "consol": [2, 3, 20, 21, 89, 90, 92, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "const": [0, 3], "constant": 69, "construct": [2, 12, 13, 14, 15, 25, 26, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 46, 47, 48, 50, 51, 54, 55, 56, 57, 58, 59, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 82], "constructor": [3, 30, 31, 32, 39], "consult": [9, 80, 82], "contain": [25, 26, 27, 30, 31, 32, 56, 57, 64, 65, 66, 67, 80, 81, 82, 84, 86], "content": 86, "context": [89, 90, 92, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "continu": [4, 25, 70, 71, 82], "continuum": 52, "contribut": [7, 9, 82, 84], "control": [7, 9, 56, 58, 59, 62, 63, 65, 66, 67], "contruct": 2, "convent": [1, 82], "converg": [65, 66, 67, 70, 71, 82, 84, 85, 86], "convert": [89, 90, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "convolv": 64, "coord_si": [46, 48, 54], "coord_system": 65, "coordin": [30, 35, 41, 42, 43, 44, 46, 48, 54, 65, 75, 83, 89], "coptflag": 9, "corner": 86, "correct": [2, 84], "correspond": [0, 65, 66, 67, 84], "cosin": [80, 89, 92], "cost": 86, "could": 86, "count": [4, 86], "coupl": 82, "cours": 81, "cover": 82, "cpp": [0, 3], "crank_nicolson": 69, "creat": [1, 2, 40, 41, 42, 44, 56, 65, 66, 67, 77, 90, 92, 96, 100, 101, 102, 103, 104, 105], "createandwritesourcemo": [65, 66, 67], "createobjectptr": 2, "createsimpleonegroup": [77, 92, 108], "creation": [65, 66, 67], "crimson": 89, "critic": 6, "cross": [2, 3, 6, 65, 66, 67, 77, 79, 80, 82, 83, 85, 91], "csv": [30, 31, 32, 90], "csv_filenam": 62, "cube": 17, "cube_with_norm": 96, "cur_id": [96, 102], "current": [3, 7, 9, 64, 65, 66, 67, 68, 70, 71, 72, 80, 81, 82, 84, 85, 102], "curvilinear": [11, 65, 83], "custom": [63, 89], "customari": [80, 82], "cut": [5, 50, 100, 101], "cwm24": 84, "cxx": 9, "cxxoptflag": 9, "cycl": [5, 82, 89], "cyclic": [5, 86], "cylind": 35, "cylindr": [46, 48, 54, 65, 80, 82], "d": [4, 7, 9, 79, 80, 81, 82, 84, 85, 86, 89], "d_": 82, "d_skip": 89, "dagger": 79, "darkorang": 89, "daryl": 86, "dash": [4, 89], "data": [3, 5, 6, 25, 26, 27, 65, 66, 67, 83, 86, 89, 105, 110], "data_typ": 0, "dataset_nam": 77, "date": [4, 6], "davi": 82, "dbuild_shared_lib": 9, "dcmake_build_typ": 9, "dcmake_install_prefix": [7, 9], "de": [80, 82], "deactiv": 9, "deal": 21, "debug": [3, 9], "decad": 6, "decai": [69, 84], "decent": 51, "decim": [0, 58, 59, 63], "decompos": 86, "decomposit": [86, 92], "decreas": [82, 92], "def": [3, 20, 40, 41, 42, 44, 52, 89, 90, 92, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "def_stat": 3, "def_submodul": 3, "defauilt": 71, "default": [3, 9, 12, 13, 15, 17, 21, 22, 23, 24, 25, 26, 30, 31, 32, 35, 36, 37, 43, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72], "defin": [0, 3, 63, 64, 75, 76, 80, 81, 82, 84, 89, 98, 102], "definit": [65, 66, 81, 82, 83, 84, 86], "degener": 82, "degrad": 84, "degre": [45, 80, 90], "delai": [65, 66, 67, 69, 77, 80], "delet": 4, "delta": [4, 84], "demonstr": 102, "deng": 84, "denot": [77, 80, 81, 82, 84], "densiti": [80, 82, 84], "depart": 77, "depend": [5, 9, 65, 66, 67, 79, 80, 81, 82, 86], "depth": 89, "deriv": [79, 84], "deriveclass": 2, "describ": [0, 80, 81, 82, 84, 96], "descript": [0, 3, 4, 84, 86], "design": 6, "desir": 64, "destin": 4, "det": 79, "detail": [1, 4, 7, 9, 82, 86, 92], "detector": 79, "determin": [52, 95], "determinist": [6, 85], "dev": [7, 9], "develop": [2, 6], "devolv": [80, 82], "dfem": 26, "dgfem": [82, 84], "dh76": 80, "dialect": 9, "dict": [25, 26, 27, 33, 47, 52, 58, 59, 63, 64, 65, 66, 67], "dictat": 81, "dictionari": [25, 26, 27, 33, 47, 58, 59, 63, 64, 65, 66], "did": [4, 5], "diff": 4, "diff_accel_diffusion_l_abs_tol": 70, "diff_accel_diffusion_max_it": 70, "diff_accel_diffusion_petsc_opt": 70, "diff_accel_diffusion_verbos": 70, "diff_accel_sdm": 70, "diff_l_abs_tol": 71, "diff_l_max_it": 71, "diff_petsc_opt": 71, "diff_sdm": 71, "diff_verbos": 71, "differ": [9, 46, 63, 64, 84, 86], "differenti": [80, 82], "diffus": [3, 70, 71, 82, 84], "diffusionsolverbas": [25, 26], "digit": [58, 59, 63, 65, 66, 67], "dim": 89, "dimens": [52, 54, 81, 82, 92, 100, 101, 102], "dimension": [80, 82, 86, 89], "dir": [82, 92], "dir_as_plane_norm": 17, "direct": [2, 3, 5, 10, 11, 12, 13, 14, 15, 16, 17, 79, 80, 82, 86, 88, 102], "directli": 84, "directori": [0, 3, 7, 9, 56], "dirichlet": 79, "disabl": 24, "discontinu": [26, 70, 71, 82, 84, 87, 88, 91], "discret": [65, 66, 67, 70, 71, 80, 83, 84, 86, 88, 92], "discreteordinatesproblem": [65, 92], "discuss": [82, 86], "displai": [58, 59, 63], "distinct": 84, "distribut": [6, 46, 80, 82, 83], "diverg": 68, "divid": [82, 86], "divis": 86, "dm79": 80, "do": [4, 9, 65, 66, 67, 79, 84, 89, 90, 92, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "do_3d_project": 89, "doc": [3, 7, 9, 110], "docstr": 3, "document": [2, 3], "docuument": 31, "doe": [2, 22, 57, 63, 89, 90, 92, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "doi": [82, 84], "dollar": 69, "domain": [6, 52, 79, 80, 82, 84, 85, 86, 92, 96, 98, 100, 101, 102], "domin": 84, "don": [0, 86], "done": [2, 4, 63, 84, 92], "dont_want": 9, "dopensn_with_doc": 3, "dopensn_with_python_modul": [7, 9], "dorr": 86, "dose": 81, "dot": 79, "doubl": [0, 80, 82], "down": 4, "download": 9, "downscatt": [82, 84, 86], "downstream": 86, "doxygen": [0, 7, 9], "dpi": 89, "dragon": 110, "draw": 89, "driven": [6, 80], "dsa": 84, "dt": 79, "dualiti": 79, "duderstadt": 80, "due": [77, 79, 82, 84, 86], "dummi": 89, "dump": [65, 66, 67], "dure": [3, 65, 66, 67, 85], "dvtk_group_enable_imag": 9, "dvtk_group_enable_qt": 9, "dvtk_group_enable_rend": 9, "dvtk_group_enable_standalon": 9, "dvtk_group_enable_web": 9, "dvtk_module_use_external_vtk_hdf5": 9, "dvtk_use_mpi": 9, "dwith_gotcha": 9, "dwith_kokko": 9, "dwith_mpi": 9, "dx": [92, 96, 100, 101, 102], "dx_geo": 102, "dynam": 6, "e": [3, 4, 6, 9, 48, 65, 66, 67, 80, 81, 82, 84, 85, 86, 92, 98, 110], "e_": [80, 82], "e_g": 82, "each": [7, 9, 25, 26, 27, 33, 46, 47, 48, 54, 56, 63, 65, 66, 67, 81, 82, 84, 86, 90, 92, 100, 101], "earli": 84, "earlier": 82, "easi": [6, 8, 82], "easier": 4, "easiest": 4, "easili": 82, "eddington": 84, "edg": 82, "edit": 4, "editor": 4, "edward": 84, "ee": 86, "eff": [80, 84], "effect": [6, 81, 82, 84], "effici": [6, 84, 86], "eigen": [71, 72], "eigenproblem": 84, "eigenvalu": [6, 66, 68, 70, 71, 72, 80, 84], "either": [3, 47, 79, 80, 98], "elast": 81, "element": [6, 17, 25, 26, 30, 31, 32, 43, 82, 84, 87, 88, 91], "ell": [79, 80, 81, 82, 85], "elmer": 80, "els": 2, "elsewher": [65, 66, 67, 89], "em": 82, "email": 4, "embed": [2, 5], "emg": 47, "emploi": [6, 80, 81, 82, 84, 102], "empti": [0, 3, 4, 30, 31, 32, 39, 62, 65, 66, 67, 77], "en": 110, "enabl": [3, 24, 65, 66, 67, 70, 71], "enablecalip": 22, "enclos": 0, "encod": 82, "end": [0, 2, 20, 79, 80, 82, 84, 85, 89, 90, 92, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "endclass": 2, "endnamespac": 2, "energi": [5, 6, 65, 66, 67, 77, 79, 80, 81, 83, 84, 85, 92], "enforc": 62, "engin": [80, 82, 84, 86], "ensight": 98, "ensur": [58, 59, 63], "entir": 84, "entri": [50, 65, 66, 67, 79, 82, 92], "enum": 1, "enum_value_1": 0, "enum_value_2": 0, "enumer": 4, "environ": [3, 7, 20, 89, 90, 92, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "eq": 82, "equal": [80, 82], "equat": [3, 6, 79, 82, 83, 84, 85, 86], "equatori": 82, "equiv": 82, "equival": [51, 82], "erin": 84, "error": [7, 9, 19, 20, 82, 84], "essenti": [2, 7, 9], "estim": 84, "et": [82, 84, 86], "eta": 80, "etc": 66, "eugen": 80, "evalu": [3, 6, 40, 41, 42, 44, 45, 64, 79, 80, 82, 84], "evaluaterespons": 64, "even": 4, "evenli": [100, 101, 102], "event": [2, 20, 58, 59, 62, 63, 80, 89, 90, 92, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "event_nam": [58, 59, 60, 63], "events_on_which_to_print_postproc": 62, "everi": [4, 9, 85], "everyth": 3, "ew": 84, "exact": 84, "exampl": [0, 2, 3, 4, 33, 40, 41, 42, 43, 44, 47, 52, 79, 81, 82, 85, 86, 89, 91, 93], "exascal": 5, "except": 0, "exclud": 33, "execut": [6, 9, 20, 25, 26, 27, 30, 31, 32, 46, 47, 48, 53, 54, 56, 58, 59, 60, 63, 68, 69, 70, 71, 72, 73, 74, 86, 89, 90, 92, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "execute_on": [58, 59, 63], "exhibit": 84, "exist": [0, 2, 64, 68, 70, 71, 72, 74], "exodu": 98, "expand": 80, "expans": [65, 66, 67, 81, 83], "expect": 110, "expens": 80, "experi": 5, "explain": 2, "explanatori": 2, "explicit": [82, 89, 90, 92, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "explicit_eul": 69, "explicitli": [3, 20], "export": [7, 9, 29, 30, 31, 32, 65, 66, 67, 92, 96, 99, 103, 104, 105, 106], "exportmultipletovtk": [29, 92], "exporttocsv": [30, 31, 32], "exporttopvtu": [52, 96, 99, 100, 101, 102, 103, 104, 105, 106], "express": 80, "ext": [0, 79, 80, 82, 84], "extend": 86, "extens": 3, "extern": [79, 80, 82, 84, 92], "extra": 3, "extract": 92, "extrud": [47, 91, 97], "extruded_mesh_onli": 99, "extrudermeshgener": 99, "extrus": [35, 47], "f": [3, 4, 40, 41, 42, 44, 79, 80, 81, 82, 84, 90, 92], "f1b3ad0": 4, "f2cblaslapack": 9, "f_": 81, "f_0": [79, 80], "face": [57, 82], "facess": 52, "facet": 57, "facilit": 3, "fact": 80, "factor": [65, 66, 67, 77, 84], "factori": 102, "fail": 9, "falgout": 86, "fals": [12, 13, 15, 17, 33, 36, 46, 47, 48, 54, 56, 57, 59, 62, 64, 65, 66, 67, 70, 71, 84, 89, 90, 92, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "fancyarrowpatch": 89, "fashion": 84, "fast": 84, "faster": [4, 82], "fc": [9, 84], "featur": [3, 4, 6], "ff": [30, 31, 32], "ff_list": 29, "ff_name": [30, 31, 32], "fffea64": 4, "fflist": 92, "fichtl": 84, "fidel": [46, 47, 48, 54, 56], "field": [2, 3, 6, 25, 26, 27, 28, 29, 30, 31, 32, 40, 48, 58, 59, 65, 66, 67], "field_function_prefix": [65, 66, 67], "field_function_prefix_opt": [65, 66, 67], "fieldfunc": [2, 3, 25, 26, 27, 65, 66, 67, 92], "fieldfunct": [30, 31, 32], "fieldfunctiongridbas": [25, 26, 27, 65, 66, 67, 92], "fieldfunctioninterpol": [30, 31, 32], "fieldfunctioninterpolationlin": 31, "fig": 89, "figur": [3, 86, 89], "file": [1, 3, 4, 17, 30, 31, 32, 48, 52, 56, 57, 62, 64, 65, 66, 67, 77, 89, 90, 91, 92, 96, 97, 98, 100, 101, 102, 108, 109, 110], "file_bas": [17, 65, 66, 67], "file_base_nam": 52, "file_nam": [57, 77], "file_name1": 0, "file_name2": 0, "file_prefix": 56, "filenam": [48, 57, 96, 99, 103, 104, 105, 106], "filepath": [103, 112], "files_to_remov": 90, "filter": [58, 59, 63], "final": [30, 46, 47, 48, 53, 54, 56, 79, 80, 82], "finalize_env": [20, 89, 90, 92, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "find": 2, "fine": 84, "finish": [4, 86], "finit": [6, 17, 25, 26, 82, 84, 87, 88, 91], "first": [0, 2, 4, 7, 9, 79, 84, 85, 86, 90, 91, 93, 96, 100, 101], "first_exampl": 92, "fish": 9, "fissil": 77, "fission": [65, 66, 67, 77, 79, 80, 81, 82, 84], "fit": 0, "fix": [1, 58, 59, 63, 65, 66, 67, 82, 84], "fixup": 4, "flag": [36, 46, 47, 48, 54, 56, 59, 64, 65, 66, 67], "flake8": 4, "flat": [65, 66, 67], "flex": [7, 9], "flexibl": [3, 86], "flight": 80, "float": [17, 25, 26, 31, 32, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 54, 56, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77], "floating_point": [58, 59, 63], "flop": 86, "flux": [6, 65, 66, 67, 68, 70, 71, 72, 80, 82, 83, 85, 86, 88, 92], "focu": 82, "fold": 64, "folder": [3, 56, 90], "follow": [0, 2, 3, 4, 7, 9, 20, 77, 79, 80, 84, 86, 89, 90, 98, 99], "foo": [40, 41, 42, 44], "foptflag": 9, "foral": [79, 80], "forc": 3, "forcibli": 3, "forget": 4, "fork": [4, 7, 9], "form": [4, 5, 82, 84, 86], "formal": [6, 83, 84], "format": [0, 1, 3, 7, 9, 29, 52, 57, 58, 59, 62, 63, 77, 92, 98, 100, 101, 102, 105, 107, 111], "formul": 82, "formula": 81, "forth": 81, "forward": [64, 79], "found": [4, 6, 90], "four": [86, 92], "frac": [79, 80, 81, 82, 84, 108], "fraction": [0, 69], "framework": 0, "free": 84, "from": [2, 4, 6, 7, 9, 17, 20, 33, 40, 41, 42, 44, 48, 52, 57, 58, 59, 63, 64, 65, 66, 67, 70, 71, 75, 77, 79, 80, 81, 82, 84, 89, 90, 91, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111], "fromfilemeshgener": [96, 99, 103, 104, 105, 106], "fu": 86, "full": [46, 47, 48, 54, 56, 65, 66, 67, 86], "fulli": [6, 7, 9, 82, 84], "fun": 4, "func": [25, 26, 27, 40, 41, 42, 44, 52, 76, 102], "function": [0, 1, 3, 6, 7, 9, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 40, 41, 42, 44, 52, 57, 58, 59, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 79, 80, 82, 102], "further": 82, "futur": [1, 4, 88, 95, 98], "fuzzi": 92, "fw": 82, "fwp09": 84, "fyi": 105, "g": [3, 6, 7, 9, 40, 41, 42, 44, 65, 66, 67, 77, 79, 81, 82, 84, 85, 86, 89, 92, 110], "g_": [82, 85, 86], "g_t": 79, "gain": 80, "galerkin": 82, "gamma": [6, 79, 80, 81, 82], "gather": [79, 80, 82], "gauss": [12, 13, 14, 15, 82, 88, 89, 92], "gb": 5, "gcc": [7, 9], "gdh69": 82, "ge": [81, 82], "gelbard": 82, "gen_tim": 69, "gener": [2, 3, 5, 7, 9, 17, 20, 34, 43, 46, 47, 48, 49, 53, 54, 56, 58, 59, 63, 65, 66, 67, 69, 84, 86, 91, 97, 98, 103, 104, 105, 108, 110], "geometr": 86, "geometri": [12, 13, 14, 15, 47, 65, 66, 82, 84, 86, 89, 92, 96, 100, 102], "georg": 80, "get": [0, 4, 25, 26, 27, 30, 31, 32, 58, 65, 66, 67, 69, 77, 86, 90, 102], "get_ipython": [20, 89, 90, 92, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "get_proj": 89, "geteigenvalu": [68, 70, 71, 72], "getfieldfunct": [25, 26, 27, 65, 66, 67], "getfieldfunctionbynam": [30, 31, 32], "getglobalnamespac": 2, "getmemb": 0, "getperiod": 69, "getpointvalu": 31, "getpopulationnew": 69, "getpopulationprev": 69, "getpowerfieldfunct": [65, 66, 67], "getscalarfieldfunctionlist": [65, 66, 67, 92], "getsolutionnew": 69, "getsolutionprev": 69, "gettimenew": 69, "gettimeprev": 69, "getvalu": [32, 58, 59, 60, 63], "gfortran": [7, 9], "ghp99": 84, "gi": 82, "git": [4, 7, 9], "github": [4, 7, 9], "give": [84, 86, 92, 100, 101], "given": [30, 31, 32, 79, 80, 81, 82, 84, 86, 90, 92, 102], "glasston": 80, "glcproductquadrature2dxi": [89, 92], "glob": 90, "global": [2, 3, 82, 84, 85], "global_id": 51, "gmre": [68, 84], "gmres_restart_interv": 92, "gmsh": [57, 91, 97, 98], "gmsh_alltet": [105, 106], "go": 4, "goal": 82, "goe": 82, "gold": 98, "gone": 21, "good": [80, 84], "googl": 80, "gov": 9, "gprime": 77, "graph": [49, 50, 51, 55, 82, 86], "graphit": [5, 84], "graphpartition": [46, 47, 48, 54, 56], "greater": [56, 81], "greatli": 86, "grei": 89, "grid": [6, 29, 50, 51, 52, 65, 66, 67, 82, 84, 86, 91, 92, 96, 97, 98, 99, 103, 104, 105, 106], "grid2": [100, 101], "group": [0, 2, 5, 44, 65, 66, 67, 75, 76, 77, 79, 80, 81, 82, 83, 85, 91, 92, 109, 110], "group_strength": [76, 92], "groups_from_to": 92, "groupset": [65, 66, 67, 92], "gtrless": [79, 85], "guid": [2, 4, 6], "guidanc": 9, "guthri": 84, "gz": 9, "h": [0, 3, 47, 79, 80, 82, 84], "h5": 112, "h_t": 79, "ha": [4, 79, 82, 84, 86], "had": [2, 105], "hageman": 82, "half": 85, "hamilton": 80, "hand": 82, "handl": [6, 46, 47, 48, 54, 56, 64, 89, 90, 92, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "handler": 19, "hanebutt": 86, "hanu": 84, "happen": 90, "harbour": 84, "hard": 4, "harmon": [45, 65, 66, 67, 80], "hash": 4, "have": [0, 2, 3, 4, 7, 9, 65, 66, 67, 80, 81, 82, 84, 85, 86, 89, 92, 100, 101, 105], "hawkin": 86, "hdf5": [7, 9, 91, 109, 110], "header": 0, "heat": [81, 85], "heavi": 84, "help": [3, 4], "henc": [79, 80, 81, 82, 84, 85, 89, 90], "here": [4, 89, 90, 92, 100, 101, 105, 107, 108, 111, 112], "hereaft": 80, "heterogen": 98, "hhr": 84, "high": [5, 81, 82, 84, 86], "higher": [65, 66, 67, 82, 84], "highest": 80, "highli": [4, 84], "hil75": 82, "hill": 82, "hiromi": 82, "histori": [62, 63], "hl92": 86, "hold": 79, "hollowai": 84, "homogen": [92, 100, 101], "horizont": 62, "hous": [92, 98, 100, 101], "how": [2, 4, 92], "howev": [20, 81, 82, 84, 86, 89, 90, 92, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "hr20": 84, "hsa": 86, "html": [7, 9, 110], "http": [4, 7, 9, 80, 82, 84, 110], "hw": [7, 9], "hybrid": 82, "hypr": 9, "i": [0, 2, 3, 4, 6, 7, 9, 20, 21, 23, 24, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 46, 47, 50, 51, 52, 56, 57, 62, 63, 64, 65, 66, 67, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 89, 90, 92, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 110, 111, 112], "ic": 86, "id": [40, 42, 48, 52, 65, 66, 76, 80, 91, 95, 96, 97, 98, 103, 104, 105], "idaho": 86, "idea": 84, "identif": 82, "identifi": 4, "ignor": [3, 36, 56, 65, 66, 67, 81], "ii": [82, 98], "illustr": 86, "img": 3, "immedi": [22, 86], "implement": [7, 9, 66, 84], "implicit_eul": 69, "implicitli": [7, 9], "import": [7, 9, 20, 79, 82, 86, 89, 90, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "importfrommshfil": 57, "importfromobjfil": [57, 96], "importfromtrianglefil": 57, "impos": 80, "inc": [79, 80], "incid": [80, 86], "includ": [3, 6, 9, 33, 65, 66, 67, 79, 80, 81, 82, 86], "inclus": 22, "incom": [80, 82], "incorpor": [7, 9], "increas": [54, 80, 86, 92], "indent": 3, "index": [7, 9, 51, 65, 66, 67, 82, 84, 92, 110], "indic": [9, 57, 65, 66, 67, 82], "individu": 46, "induc": 5, "inelast": 81, "infi": [36, 96], "infinit": 84, "inflow": 82, "info": 63, "inform": [4, 63, 64, 80, 86, 105], "infx": 36, "infz": [36, 96], "inherit": 2, "inhomogen": 84, "init": 3, "initi": [25, 26, 27, 30, 31, 32, 58, 59, 63, 68, 69, 70, 71, 72, 73, 74, 79, 81, 83, 89, 90, 92, 102], "initial_popul": 69, "initial_rho": 69, "initial_sourc": 69, "initial_valu": [58, 59, 63], "inner": [65, 66, 67, 70, 79, 82, 84], "inner_linear_method": 92, "innermost": 86, "inplac": 3, "input": [4, 25, 26, 40, 41, 42, 44, 46, 47, 48, 54, 56, 65, 66, 77, 81, 99, 110], "inputparamet": 2, "ins": 1, "inscatt": 82, "inscrib": 17, "insert": 99, "insid": [0, 2, 33, 34, 35, 36, 37, 38, 52, 95], "instal": [3, 6, 92], "instanc": [66, 68, 70, 71, 72, 74], "instead": [0, 51, 56], "instruct": [3, 4, 9], "int": [0, 3, 12, 13, 14, 15, 17, 23, 25, 26, 30, 40, 42, 44, 45, 50, 51, 52, 56, 57, 58, 59, 62, 63, 65, 66, 67, 68, 70, 71, 72, 76, 80, 89], "int_": [79, 80, 82, 85], "int_0": 79, "integr": [59, 65, 66, 79, 80, 82], "intend": 86, "intens": 3, "interact": [0, 4, 80, 81, 89], "interest": [64, 79, 85], "interfac": [3, 6, 7, 9, 92, 102], "interior": [82, 84, 85, 96], "intern": [3, 50, 82, 86], "interplai": 86, "interpol": [30, 31, 32], "interpret": [17, 20, 79], "interv": [65, 66, 67, 68, 82], "introduc": [79, 80, 82, 86, 92], "introduct": [80, 83, 87, 91, 94, 97, 109], "inv_veloc": 77, "invers": [77, 84], "invok": 20, "io": 9, "ipynb": [89, 90, 92, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "ipython": [20, 89, 90, 92, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "ipython_inst": [20, 89, 90, 92, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "is_fission": 77, "isbn": 80, "isotrop": [76, 80, 81, 92, 108, 110], "issu": [4, 92], "iter": [6, 64, 65, 66, 67, 68, 70, 71, 72, 82, 83, 85, 86], "itertool": 89, "its": [3, 75, 80, 82, 84, 86], "j": [3, 7, 9, 80, 82, 84, 85], "jae": 82, "jame": [80, 82, 84], "jan": 86, "jcp": [82, 84], "je": 84, "jean": [82, 84, 86], "jim": [82, 84, 86], "job": 3, "john": [80, 82], "journal": [6, 82, 84, 86], "jp": 84, "jr": 82, "jupyt": 20, "just": 56, "k": [66, 68, 70, 71, 72, 80, 82, 84, 86, 89], "k_": [80, 84], "k_eff": 5, "k_tol": [70, 71, 72], "kappa": [65, 66, 67, 81], "kay": 82, "kba": [5, 50, 86, 98, 105], "kba92": 86, "kbagraphpartition": [92, 100, 101], "kd": 82, "kebab": 0, "keep": [86, 92], "kei": [2, 4, 33, 52], "kenneth": 86, "kept": 92, "kernel": 86, "keyword": 0, "kib": 4, "kill": 21, "kinet": 69, "known": [79, 80, 82, 84], "koch": [50, 86], "krieger": 80, "krylov": 83, "kwarg": [25, 26, 27, 33, 35, 36, 37, 38, 46, 47, 48, 50, 51, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 89], "l": [2, 45, 80, 82, 84, 85, 86, 96, 100, 101, 102], "l2": [65, 66, 67], "l_": [79, 80, 81, 82], "l_abs_tol": [68, 92], "l_div_tol": 68, "l_g": 84, "l_gmres_breakdown_tol": 68, "l_gmres_restart_intvl": 68, "l_max_it": [68, 92], "l_rel_tol": 68, "la": 82, "la17": 82, "lab": 82, "label": 82, "laboratori": 82, "lag": [82, 84], "lambda": [40, 41, 42, 44, 52, 84], "langl": 79, "laptop": 6, "lar84": 84, "larg": [6, 65, 66, 67, 84], "largest": 84, "larsen": 84, "last": [69, 90], "lat68": 82, "lat71": 82, "later": 6, "latest": [4, 25, 26, 27, 62, 65, 66, 67, 84], "lathrop": 82, "latter": 82, "lau": 82, "launch": 9, "law": 80, "lawrenc": 86, "layer": [47, 99], "layout": [96, 99, 103, 104, 105], "lb": [2, 64], "lbs_problem": [64, 68, 70, 71, 72, 92], "lbsproblem": [65, 66, 68, 70, 71, 72, 74], "lc64": 82, "ld_library_path": 9, "ldfe": [82, 87, 88, 91], "ldot": 81, "le": [79, 82, 84], "lead": [80, 81, 86, 90], "leakag": [6, 65, 66, 82, 83, 84], "leav": [4, 102], "lebedev": 88, "lee": 82, "lee61": 82, "left": [79, 80, 82, 84, 86], "leftarrow": 84, "legendr": [12, 13, 14, 15, 45, 77, 80, 82, 88, 89, 92], "len": 89, "length": [81, 92, 100, 101, 102], "lesaint": 82, "less": [5, 82], "let": [2, 4], "letter": 4, "level": [3, 17, 23, 47, 56, 65, 66, 67, 82, 84, 86, 90], "lewi": [80, 86], "li": [82, 102], "lianxiang": 86, "lib": [2, 3, 9], "libhdf5": [7, 9], "libopenmpi": [7, 9], "librari": [0, 2, 3, 9, 85, 110], "lifecycl": 20, "like": [0, 2, 4, 20], "likewis": [82, 86, 92], "limit": 62, "limits_": 82, "line": [1, 3, 4, 21, 30, 31, 32, 77, 80, 89, 92], "linear": [2, 6, 17, 51, 67, 68, 70, 71, 82, 83, 84, 85, 87, 88, 91], "linear_boltzmann_solv": [103, 112], "linearli": 82, "linestyl": 89, "linewidth": 89, "linspac": 89, "lint": 4, "linux": [7, 9], "list": [4, 21, 25, 26, 27, 29, 30, 31, 32, 33, 44, 46, 47, 48, 50, 54, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67, 69, 75, 76, 90, 107, 108, 111, 112], "llnl": 9, "lm84": 80, "lo": 82, "load": [57, 77, 91, 92, 107, 108, 109, 111], "loadfromopenmc": [77, 112], "loadfromopensn": [77, 107, 111], "local": [4, 6, 17, 56, 82, 84, 88, 90], "locallyrefin": [17, 90], "locat": [2, 3, 9, 37, 46, 50, 75, 92, 96, 100, 101], "log": [2, 3, 4, 70], "log_vol": 52, "logan": 84, "logic": [2, 3, 6, 32, 33, 34, 35, 36, 37, 38, 52, 76, 91, 92], "logical_volum": 76, "logicalvolum": [2, 32, 33, 35, 36, 37, 38, 52, 76], "logiv": 52, "logvol": [2, 3, 32, 52, 76, 96], "long": [3, 86], "longer": [78, 84, 86], "look": [2, 4], "loop": [84, 86, 90], "loss": 80, "loui": 80, "low": [82, 84], "lower": [4, 84], "lowri": 82, "lr74": 82, "lt": 9, "lua": [1, 4, 6, 92], "luabridg": 2, "luabridge3": 2, "lv": [32, 33, 96], "lv1": 96, "lv2": 96, "lv3": 96, "lv4": 96, "lv_skinmesh": 96, "lw": 89, "m": [9, 45, 79, 80, 82, 84, 85, 86, 89], "m_": [80, 82], "m_gprime_g_v": 77, "maa00": 86, "machin": [4, 86], "maco": [7, 9], "macro": 84, "macro_paramet": 0, "macrodefinit": 0, "made": [4, 82, 86], "magnitud": 80, "mai": [0, 9, 20, 30, 31, 32, 63, 84, 88, 98, 110], "main": [4, 85], "maintain": [7, 9, 86], "make": [4, 6, 7, 9, 46, 47, 48, 54, 56, 80, 92], "make_mat_id_funct": 102, "make_shar": 3, "manag": [18, 22], "mandatori": 81, "mani": 84, "manner": 6, "manual": [6, 82], "manualexecut": [58, 59, 60, 63], "map": [0, 33, 65, 66, 79, 82], "mark": [18, 86], "martin": [80, 84], "marvin": [82, 84, 86], "mass": 82, "massiv": [6, 86], "mat": 96, "mat_id": [40, 42, 52, 102], "mat_id_funct": 102, "match": [30, 31, 32, 90], "materi": [5, 40, 42, 77, 80, 81, 82, 84, 96, 98, 99, 103, 104, 105], "math": [3, 6, 17, 25, 26, 27, 30, 32, 33, 34, 35, 36, 37, 38, 52, 57, 76, 90, 96], "mathbb": 85, "mathcal": [79, 80, 82, 85], "mathemat": [82, 86], "mathi": 86, "matidfunction1": 96, "matplotlib": 89, "matric": 82, "matrix": [80, 81, 82, 84, 86, 89], "max": [32, 36, 58, 79, 80, 81, 82], "max_ags_iter": [65, 66, 67], "max_column_width": 22, "max_func": 32, "max_it": [25, 26, 70, 71, 72], "max_mpi_message_s": [65, 66, 67], "maxim": 6, "maximum": [62, 65, 66, 67, 68, 70, 71, 72, 80], "mccormick": 80, "mcghee": 82, "mean": [4, 33, 82, 84, 85, 89], "mechan": 82, "media": 84, "medium": 84, "meet": [82, 84], "member": [0, 1], "member_": 0, "memberfunctionwithanargu": 0, "memori": 5, "memoryview": [69, 107, 108, 111, 112], "mention": 4, "merg": 4, "mesh": [2, 3, 6, 25, 26, 38, 65, 66, 82, 84, 86, 91], "mesh_ortho_2d": 100, "meshcontinuum": [25, 26, 46, 47, 48, 53, 54, 56, 65, 66], "meshgen": [92, 96, 99, 100, 101, 102, 103, 104, 105, 106], "meshgen2": [100, 101], "meshgener": [46, 47, 48, 54, 56], "meshpi": 105, "messag": [3, 4, 65, 66, 67], "met": [90, 102], "method": [2, 6, 25, 26, 66, 70, 71, 80, 83, 86, 91, 92, 109, 110], "meti": 9, "mev": [65, 66, 67], "mex": 82, "mf": 84, "mf_p": 80, "mg_src": 92, "mib": 4, "michael": [84, 86], "midpoint": 82, "milan": 84, "miller": [80, 82], "milo": 86, "min": [5, 36, 58], "minim": [64, 84], "minimum": [62, 63, 92], "minu": 80, "minut": 5, "mip": 84, "mitig": [6, 82, 84], "mixtur": 47, "mjr77": 82, "mkdir": [7, 9], "ml": 84, "mo": 86, "mode": [3, 20, 21, 65, 66, 67, 84, 89, 90, 92, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112], "model": [80, 86], "modern": 6, "modif": [4, 9], "modifi": [3, 4, 84, 95, 96], "modul": [0, 3, 20, 90, 92, 103, 112], "mom": [80, 82], "moment": [65, 66, 67, 70, 71, 72, 77, 80, 82, 84, 85, 88, 92], "momentum": 80, "monoton": 54, "mor82": 84, "mor89": 82, "more": [1, 65, 66, 67, 82, 86, 92, 105], "morel": [82, 84, 86], "most": [4, 6, 9, 82, 84], "mostli": 98, "move": 4, "mpi": [6, 7, 9, 20, 46, 56, 65, 66, 67, 89, 90, 92, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "mpi4pi": [7, 9, 92], "mpicc": 9, "mpich": [7, 9], "mpicxx": 9, "mpiexec": [92, 96, 99, 100, 101, 102, 103, 104, 105, 106], "mpifort": 9, "mpl_toolkit": 89, "mplot3d": 89, "msh": [96, 98, 103, 104], "mu": [80, 82, 89], "mu_0": 80, "much": [4, 5], "multi": [0, 6, 76, 77, 84, 91, 109], "multidimension": 84, "multigrid": 84, "multigroup": [6, 79, 82, 83, 85, 86, 92, 110], "multigroupx": [92, 107, 108, 111, 112], "multipl": [0, 4, 9, 30, 31, 32, 46, 81, 86, 91, 97], "multipli": 82, "must": [3, 4, 20, 54, 65, 66, 82, 84, 89, 90, 92, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "mutation_scal": 89, "mv": 4, "mvapich": [7, 9], "mw05": 82, "mwlp03": 82, "my": [3, 4], "my_class": 3, "my_const": 0, "my_contain": 0, "my_member_vari": 0, "my_member_variable_": 0, "myclass": [0, 3], "myclassmethod": 3, "mycoolmemberfunct": 0, "myenum": 2, "myfunct": 2, "mylovelyclass": 2, "mylovelyclassptr": 2, "mymethod1": 3, "mystaticfunct": 2, "n": [3, 7, 9, 44, 47, 79, 80, 81, 82, 85, 86, 89, 92, 96, 99, 100, 101, 102, 103, 104, 105, 106], "n_": [80, 82], "n_azimuth": [12, 13, 14], "n_cell": [92, 100, 101, 102], "n_cells_geo": 102, "n_dir_per_oct": 89, "n_direct": 89, "n_f": 82, "n_group": 44, "n_octant": 89, "n_polar": [12, 13, 14, 15], "n_refin": 102, "n_v": 82, "nabla": [79, 80, 82], "name": [1, 4, 7, 9, 17, 29, 30, 31, 32, 47, 48, 52, 58, 59, 63, 65, 66, 67, 89, 90, 92, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "namespac": 1, "nanci": 86, "natur": 86, "nazimu": 92, "nbconvert": [20, 89, 90, 92, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "ncpu": [7, 9], "ndarrai": [65, 66], "ndir": 89, "ne": 90, "necessari": [64, 66, 84, 92], "need": [2, 4, 9, 63, 77, 79, 81, 84, 86, 88, 92, 100, 101], "neg": [65, 66, 67], "neighbor": [82, 86], "nest": [65, 66, 67], "net": 85, "netherland": 80, "neutral": [6, 80, 82, 86], "neutron": [3, 5, 6, 65, 66, 67, 69, 77, 80, 81, 82, 84, 86], "new": [2, 4, 9, 52, 65, 66, 67, 80, 82, 84], "next": [9, 69, 84, 86, 89], "ng": [77, 107, 108, 111, 112], "njoi": 110, "nl_abs_tol": 68, "nl_max_it": 68, "nl_rel_tol": 68, "nl_sol_tol": 68, "nm": 82, "nmom": 77, "nodal": 58, "node": [54, 96], "node_set": [54, 92, 96, 100, 101, 102], "nodes_geo": 102, "nodes_msh": 102, "nolimits_": 82, "non": [0, 3, 4, 5, 51, 68], "none": [12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 89, 90, 92, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "none_of": 0, "nonsymmetr": 84, "nor": 82, "norm": [41, 43, 52, 84], "normal": [65, 66, 67, 80, 90], "norman": 80, "notag": 82, "notat": [79, 80, 84], "note": [4, 6, 22, 65, 66, 67, 76, 79, 80, 81, 82, 84, 86, 89, 90, 92, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "noth": 4, "notif": 4, "notion": 82, "now": [4, 64, 79, 80, 82, 86, 100, 101], "np": [89, 90, 96, 107, 108, 111, 112], "npolar": 92, "nproc": [7, 9], "ns_one": 0, "nse10": 82, "nse16": 82, "nu": 81, "nu_delayed_sigma_f": 77, "nu_p": 80, "nu_prompt_sigma_f": 77, "nu_sigma_f": 77, "nuanc": 86, "nuclear": [80, 82, 84, 86], "num_group": [44, 65, 66, 77, 92, 107, 108, 111, 112], "num_initial_power_iter": 68, "num_moment": 77, "num_partit": 56, "num_precursor": 77, "number": [3, 4, 6, 12, 13, 14, 15, 17, 30, 44, 50, 52, 56, 58, 59, 63, 65, 66, 67, 68, 70, 71, 77, 80, 82, 84, 86, 89, 92], "numer": [3, 6, 58, 59, 63, 82, 89], "numpi": [3, 65, 66, 89, 90, 96, 107, 108, 111, 112], "nx": [50, 92, 100, 101], "ny": [50, 80, 86, 92, 100, 101], "nz": [50, 101], "o": [9, 84, 86, 89, 90, 92, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "o3": 9, "obj": [57, 91, 96, 97, 98, 99], "object": [4, 43, 46, 47, 48, 54, 56, 58, 59, 63, 64, 98, 105, 107, 108, 111, 112], "obtain": [65, 66, 67, 81, 82, 84, 85, 90, 103, 104, 105, 106], "oc": [89, 90], "occur": [20, 82, 89, 90, 92, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "octant": [82, 89], "od98": 84, "off": [3, 4, 9, 65, 66, 67], "often": [80, 82, 84], "old": [5, 52, 65, 66, 67], "old_id": 52, "oliveira": 84, "om": 89, "omega": [10, 11, 12, 13, 14, 15, 16, 17, 79, 80, 82, 85, 86, 89], "omega_d": 82, "omega_i": 80, "omega_x": 80, "omega_z": 80, "omit": [7, 9, 82, 84], "onc": [7, 9, 20, 21, 78, 82, 84, 85, 86], "one": [4, 7, 9, 64, 65, 66, 67, 77, 79, 81, 82, 84, 85, 86, 92, 108, 110], "ones": [52, 89, 102], "ones_lik": 89, "onetran": 82, "onli": [3, 4, 5, 20, 22, 48, 51, 56, 57, 58, 59, 62, 63, 65, 66, 67, 76, 79, 80, 82, 84, 85, 86, 98], "only_scalar_flux": [65, 66, 67, 92], "op": [33, 90, 96], "op_typ": 32, "open": [4, 6, 7, 9, 110], "openmc": [77, 91, 109, 110], "openmpi": [7, 9], "opensn": [0, 2, 3, 4, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 82, 83, 84, 85, 86, 90, 92, 107, 110, 111], "opensn_env": 9, "opensnlua": 2, "oper": [2, 32, 58, 80, 84], "oppos": 57, "optic": 84, "optim": [3, 86], "option": [4, 9, 62, 64, 65, 66, 67, 70, 71, 82, 89], "order": [0, 45, 65, 66, 67, 77, 79, 80, 81, 82, 84, 85, 86], "ordin": [65, 66, 82, 84, 86, 88], "org": [82, 84, 110], "organ": 3, "orient": 82, "origin": [4, 84, 90, 92, 100], "original_mesh": 96, "ortho": 50, "ortho_2d_kba": 100, "ortho_2d_parmeti": 100, "ortho_3d_blockid": 102, "ortho_3d_kba": 101, "ortho_3d_parmeti": 101, "orthogon": [51, 54, 86, 91, 96, 97, 98], "orthogonalmeshgener": [92, 96, 100, 101, 102], "other": [0, 4, 7, 9, 46, 56, 81, 82, 84, 86, 92, 110], "otherwis": [4, 17, 20, 51, 52, 82, 102], "our": [2, 4, 86, 92, 102], "ourenumtyp": 0, "out": 79, "outcom": [6, 83], "outer": [84, 89, 96], "outermost": 86, "outflow": 82, "outgo": [65, 66, 79, 80, 86], "output": [24, 52, 70, 71, 85], "outsid": [2, 33, 34, 35, 36, 37, 38, 52], "outward": 80, "over": [0, 5, 64, 65, 66, 79, 80, 82, 84, 85], "overlai": 50, "overwrit": 21, "own": [2, 80, 82, 86, 110], "p": [4, 41, 42, 44, 80, 81, 82, 84, 86, 90], "p_": 80, "p_f": 80, "p_p": 80, "pa": 82, "packag": [2, 3, 7, 9], "pad": [65, 66, 67], "page": [0, 6, 82], "pair": [66, 82], "paper": 84, "paragraph": [3, 4], "parallel": [3, 6, 36, 46, 47, 48, 54, 56, 83, 84, 92, 98], "parallelpip": 52, "param": 0, "paramet": [1, 3, 12, 13, 14, 15, 17, 21, 22, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 92], "parameterblock": 78, "parent": 2, "parenthes": 0, "parmeti": [5, 9, 46, 47, 48, 54, 55, 56, 98, 99, 102, 103, 104, 105, 106], "pars": 2, "parse_t": 2, "parson": 82, "part": [0, 2, 33, 46, 56, 96], "parti": 0, "partial": [79, 80, 82, 84, 85], "partial_": 80, "partial_i": 80, "partial_r": 80, "partial_x": 80, "partial_z": 80, "particip": 4, "particl": [6, 65, 66, 69, 80, 82, 83, 84, 86], "partit": [5, 6, 46, 47, 48, 50, 51, 54, 55, 56, 83, 91, 92], "partition": [46, 47, 48, 49, 50, 51, 54, 55, 56, 92, 98, 99, 100, 101, 102, 103, 104, 105, 106], "pascal": 0, "pass": [3, 63, 70, 71, 86, 92, 100, 101, 103, 104, 105, 106], "patch": [4, 89], "path": [7, 9, 48, 56, 65, 66, 67, 84, 89, 90, 92, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "pattern": [81, 90], "patton": 84, "pau02": 86, "pautz": [82, 86], "pcm": 5, "penalti": 84, "pentagon": 82, "per": [4, 44, 52, 54, 65, 66, 67, 82, 89, 92, 100, 101], "per_column_size_scalar": 62, "per_column_size_vector": 62, "perform": [4, 6, 57, 58, 79, 80, 81, 84, 86, 89, 90], "period": 69, "person": 4, "peter": 86, "petsc": [0, 7, 19, 55, 70, 71, 98], "petsc_dir": 9, "petsc_gmr": 92, "petsc_root": 9, "petscgraphpartition": [46, 47, 48, 54, 56, 99, 100, 101, 102, 103, 104, 105, 106], "ph96": 84, "phase": [6, 80, 83, 86], "phd": 82, "phi": [79, 80, 82, 84, 85], "phi_": [80, 81, 82, 84, 85], "phi_gxxx_myyi": [65, 66, 67], "phy": 92, "physic": [81, 82, 84, 86, 92], "pi": [79, 80, 81, 82, 84, 89, 90], "pic": 9, "pick": [4, 89], "piec": 82, "piecewis": [17, 70, 71, 82], "pii": [82, 84], "pile": 5, "pip": [3, 7, 9, 92], "pipe": 36, "pipelin": 86, "plai": [81, 84], "plain": [107, 111], "planar": [82, 90], "plane": [86, 100, 101], "platform": [6, 9], "pleas": [9, 82], "plot": 3, "plot3d": 89, "plot_sldfe_quadratur": 90, "plot_surfac": 89, "plotter": 90, "plt": 89, "plug": 1, "pm": [79, 85], "pn": 86, "point": [3, 4, 30, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 58, 59, 63, 65, 66, 67, 69, 75, 80, 82, 89, 90, 102], "point_sourc": [65, 66, 67], "pointer": 2, "pointsourc": [65, 66, 67], "pointwis": [65, 66, 67, 84], "polar": [10, 11, 12, 13, 14, 15, 16, 17, 45, 80, 82, 88, 89, 92], "polar_level": 89, "pole": 82, "polygon": [57, 82, 84], "polyhedr": [6, 82], "polyhedra": 82, "polyhedron": 82, "polynomi": [45, 80], "popul": 69, "portion": [85, 96], "posit": [80, 82], "possibl": [4, 82, 86, 88, 95], "possibli": [4, 81, 84], "post": [2, 3, 6, 81, 85, 95], "post_execut": [20, 89, 90, 92, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "postprocessor": [58, 59, 61, 63], "potenti": 86, "power": [65, 66, 67, 68, 70, 71, 72, 81, 83], "power_default_kappa": [65, 66, 67], "power_field_function_on": [65, 66, 67], "power_norm": [65, 66, 67], "poweriterationkeigensolv": [70, 71], "pp_list": 61, "pquad": [89, 92], "precis": 82, "precondit": [6, 84], "precursor": [65, 66, 67, 69, 77, 80], "precursor_beta": 69, "precursor_lambda": 69, "prefer": [0, 7, 9], "prefix": [0, 7, 9, 56, 65, 66, 67], "prefix_phi_gxxx_myyi": [65, 66, 67], "preprocessor": 0, "presenc": 82, "present": [65, 66, 76, 79, 81, 82, 84, 85], "pretti": 51, "prevent": [7, 9], "previou": [65, 66, 67, 69, 84, 86, 99, 101, 102], "previous": [79, 81], "principl": 79, "prinja": 84, "print": [3, 17, 56, 58, 59, 62, 63, 65, 66, 89, 90, 92, 107, 108, 111, 112], "print_numeric_format": [58, 59, 63], "print_on": [58, 59, 63], "print_precis": [58, 59, 63], "print_scalar_time_histori": 62, "print_vector_time_histori": 62, "printer": [58, 59, 62, 63], "printquadraturetofil": [17, 90], "privat": 0, "privileg": 9, "problem": [4, 6, 64, 65, 66, 67, 79, 80, 82, 84, 86], "proc": [82, 86], "proce": 84, "procedur": 84, "proceed": [82, 84, 86], "process": [2, 3, 6, 7, 9, 20, 46, 47, 48, 54, 56, 81, 83, 85, 86, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106], "processor": [3, 6, 58, 59, 60, 61, 62, 63, 86, 92, 99], "produc": [51, 82, 86], "product": [12, 13, 14, 15, 16, 43, 77, 79, 80, 81, 82, 84, 87, 88, 91, 92], "profoundli": 86, "program": [3, 18, 58, 59, 63], "programexecut": [58, 59, 62, 63], "progress": 84, "proj3d": 89, "proj_transform": 89, "project": [9, 89], "promin": 6, "prompt": [9, 77, 80], "pronounc": 82, "proper": 82, "properli": 20, "properti": [2, 10, 11, 12, 13, 14, 15, 16, 17, 43, 52, 65, 66, 77, 84, 98, 107, 108, 111, 112], "protect": [0, 84], "prototyp": 86, "provabl": 86, "provid": [2, 3, 7, 9, 56, 65, 66, 76, 84, 92, 98], "psi": [79, 80, 82, 84, 85, 86], "psi_": [79, 80], "psi_d": 82, "psi_g": 84, "pt": [96, 102], "ptscotch": [7, 9, 55], "public": [0, 2], "public_member_var": 0, "publish": 80, "pull": 1, "pure": 1, "purpos": [82, 95], "push": 4, "put": 3, "pvtu": [48, 52], "pwd": 9, "pwl": 82, "pwlc": [70, 71], "pwld": [65, 66, 67, 70, 71], "py": [3, 89, 90, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "py_aquad": 3, "pybind11": 3, "pyopensn": [3, 7, 9, 89, 90, 92, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "pyplot": 89, "python": [1, 4, 6, 7, 9, 20, 33, 40, 41, 42, 44, 47, 89, 90, 92, 99, 100, 101, 102, 103, 104, 105, 106], "python3": [7, 9], "q": [79, 82, 84], "q_": [79, 80, 84], "q_d": 82, "q_g": 84, "qoi": 79, "qquad": [79, 80, 82], "quad": 80, "quadrangl": 90, "quadrant": [82, 92], "quadrat": 82, "quadratur": [2, 3, 6, 10, 11, 12, 13, 14, 15, 16, 17, 80, 82, 86, 91], "quadrilater": [17, 82], "quantiti": [79, 80, 85, 86], "queri": 86, "quest": 86, "quick": 6, "quit": [4, 84], "r": [3, 7, 9, 17, 35, 37, 79, 80, 82, 84, 85, 86, 89, 96], "radian": 17, "radiat": [5, 6, 80, 82, 84], "radiu": [35, 37, 84], "rag15": 82, "ragusa": [82, 84, 86], "rai": [6, 82, 84], "rais": [65, 66, 67], "ran": 5, "randal": 86, "rang": [6, 80, 84, 85, 89, 92, 96, 100, 101, 102], "rangl": 79, "rangle_": 79, "rank": [6, 46, 51, 56, 92, 103, 104, 105, 106], "rapidli": [65, 66, 67], "rate": [6, 65, 66, 67, 79, 80, 83], "rather": [4, 9, 79, 84], "ratio": [77, 84], "rauchwerg": 86, "raviart": 82, "raw": 0, "raymond": 86, "rcc": [35, 96], "rcc_mesh": 96, "rcclogicalvolum": 96, "re": [80, 86], "reach": [62, 82], "reaction": [6, 79, 81, 83], "reactiv": 69, "reactor": [5, 69, 80, 82, 86], "read": [46, 47, 48, 54, 56, 64, 65, 66, 67, 91, 96, 97, 108, 109, 110], "read_3d_gmsh": 104, "read_3d_vtu": [105, 106], "read_onli": 56, "read_restart_path": [65, 66, 67], "readangularflux": [65, 66, 67], "reader": 86, "readfluxmo": [65, 66, 67], "readfluxmomentsandmakesourcemo": [65, 66, 67], "readi": 86, "readsourcemo": [65, 66, 67], "real": 80, "realiz": 84, "realli": [48, 63], "rebas": 4, "recal": 92, "recast": 84, "recent": [7, 9], "recogn": 79, "recommend": [3, 4, 7, 9, 86, 98], "recreat": 56, "rectangular": [36, 82, 86], "red": 81, "redefin": [7, 9], "redistribut": [82, 83], "reduc": 81, "ree71": 84, "reed": [82, 84], "ref": [9, 82], "ref_dir": 17, "refer": [1, 4, 7, 9, 17, 83], "referenc": [40, 41, 42, 44], "refin": [6, 17, 82, 84, 88, 90], "region": [84, 85, 95], "regist": [20, 89, 90, 92, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "regular": [86, 100, 101], "reiniti": [68, 70, 71, 72], "rel": [25, 26, 68, 81, 84], "relat": [2, 3], "releas": [9, 65, 66, 67], "relev": [4, 63], "remaind": 82, "remedi": [82, 84], "remot": 4, "remov": [4, 78, 90], "render": 89, "repeat": 86, "rephras": 63, "replac": [80, 84], "replicated_mesh": [46, 47, 48, 54, 56], "repo": 4, "report": [22, 56, 82], "repositori": [2, 4, 7, 9], "repres": [2, 5, 33, 47, 65, 66, 67, 79, 80, 82, 86], "request": 1, "requir": [3, 7, 9, 50, 58, 63, 78, 79, 81, 84, 86, 89, 90, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "research": 6, "reserv": 79, "reset": 96, "reset_phi0": [68, 70, 71, 72], "reset_solut": [70, 71, 72], "residu": [70, 71, 84], "residual_toler": [25, 26], "resolut": 92, "resolv": [4, 84], "respect": [82, 92], "respons": [3, 6, 46, 79, 86], "restart": [65, 66, 67, 68], "restart_writes_en": [65, 66, 67], "restrict": [51, 82], "result": [5, 6, 7, 9, 65, 66, 67, 82, 84, 92, 96, 99, 100, 101, 102, 103, 104, 105], "retrain": 80, "retriev": 63, "return": [0, 3, 30, 31, 32, 40, 41, 42, 44, 52, 65, 66, 67, 68, 70, 71, 72, 89, 96, 102], "reus": 4, "revers": 79, "review": [4, 80, 84], "rf": 7, "rh73": 82, "rhbl73": 82, "rho": 69, "richard": 82, "right": [4, 35, 52, 79, 80, 82, 84], "rise": 84, "rm": [4, 7], "road": 4, "robert": 86, "robust": 6, "roi": 85, "role": [81, 84], "root": 4, "routin": 90, "rpp": [36, 96], "rpp_mesh": 96, "rpplogicalvolum": 96, "rr": 85, "rule": [0, 6, 80, 82], "run": [4, 89, 90, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "run_test": [7, 9], "runtim": [20, 22], "runtimeerror": [65, 66], "russel": 80, "rz": [12, 82], "s0021999114004100": 84, "s0021999114006494": 82, "s_": 80, "s_f": [81, 84], "s_n": [79, 82, 84, 86], "sa03": 82, "saa03": 84, "saad": 84, "safe": 20, "sai": 2, "said": 82, "sake": 84, "same": [3, 7, 9, 31, 62, 92, 100, 101], "samuel": 80, "sanchez": [80, 82], "saratoga": 86, "sartori": 80, "satisfi": [80, 84], "save": 4, "save_angular_flux": [65, 66, 67], "sca_ord": [107, 108, 111, 112], "scalar": [40, 41, 42, 43, 62, 65, 66, 67, 68, 70, 71, 72, 84, 92], "scalar_flux_iter": [65, 66, 67], "scalar_pp_table_format": 62, "scalarmaterialfunct": 32, "scalarspatialmaterialfunct": [25, 26, 27], "scale": [6, 46, 47, 48, 54, 56, 77, 86], "scaling_factor": 77, "scatter": [65, 66, 67, 77, 79, 80, 81, 82, 84], "scattering_ord": [65, 66, 67, 77, 107, 108, 111, 112], "scdsa": 70, "scenario": 6, "schedul": 83, "scheme": [82, 84], "schultz": 84, "scienc": [80, 82, 84, 86], "sciencedirect": [82, 84], "scientif": [58, 59, 63, 82, 84], "scotch": 98, "scratch": 9, "script": [0, 2, 6, 8, 9, 20, 89, 90, 92, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "seamless": 3, "seamlessli": 6, "search": 9, "second": [2, 65, 66, 67, 71, 82, 84, 90, 92, 96], "section": [2, 3, 6, 65, 66, 67, 77, 79, 80, 82, 83, 85, 91], "see": [2, 4, 65, 66, 82, 92, 99], "seed": 82, "select": [7, 9, 52, 65, 66, 67, 88, 95], "self": [2, 12, 13, 14, 15, 17, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 89], "send": 1, "sensit": 79, "separ": [0, 86], "seper": 62, "sequenc": [61, 82], "seri": 4, "serial": 46, "set": [0, 2, 3, 4, 6, 21, 22, 23, 30, 32, 46, 47, 48, 52, 54, 56, 58, 59, 62, 63, 64, 65, 66, 67, 69, 82, 84, 88, 89, 90, 96, 102], "set1": 112, "set_posit": 89, "setblockidfromfunct": [52, 96, 102], "setblockidfromlogicalvolum": [52, 96], "setblockparam": 2, "setboundaryidfromlogicalvolum": 52, "setbufferopt": 64, "setdcoeffunct": [25, 26, 27], "setfinalpoint": 30, "setinitialpoint": 30, "setlogicalvolum": 32, "setmemb": 0, "setnumberofpoint": 30, "setoperationfunct": 32, "setoperationtyp": 32, "setopt": [25, 26, 27, 64, 65, 66, 67], "setorthogonalboundari": 52, "setqextfunct": [25, 26, 27], "setrho": 69, "setscalingfactor": 77, "setsigmaafunct": [25, 26, 27], "setsourceopt": 64, "setuniformblockid": [52, 92, 96, 100, 101, 102], "setup": [3, 9, 65, 66, 102], "sever": [2, 3, 82, 84, 88, 96, 102], "sh": 9, "sha1": 4, "shape": 84, "share": [0, 2, 7, 9, 86, 92], "shared_ptr": [2, 3], "shawn": [82, 86], "shell": 9, "shield": 84, "short": [3, 4, 83], "should": [0, 2, 3, 4, 7, 9, 64, 65, 66, 79, 81, 84, 90, 95], "show": [2, 62, 86, 89], "shown": [86, 92, 96, 99, 100, 101, 102, 103, 104, 105, 106], "si": 84, "siam": 84, "side": [82, 92, 100], "siga": [107, 108, 111, 112], "sigma": [79, 80, 81, 82, 84, 85], "sigma_": [79, 80, 81, 82, 84, 108], "sigma_0": 84, "sigma_a": [77, 107, 108, 111, 112], "sigma_a_begin": 77, "sigma_a_end": 77, "sigma_f": [77, 80, 81], "sigma_t": [77, 79, 80, 81, 82, 92, 107, 108, 111, 112], "sigma_t_begin": 77, "sigma_t_end": 77, "sign": 79, "signific": [84, 86], "sigt": [107, 108, 111, 112], "simeq": 82, "similar": [9, 79, 82, 84, 86, 101, 102], "simpl": [6, 86, 92, 100, 101], "simple_cube_fin": 96, "simpli": [0, 84, 85, 89, 90, 92, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "simplifi": [87, 91], "simplifiedldfesq": 17, "simul": [6, 83, 92, 98], "simultan": 86, "sin": [17, 80, 89, 90], "sinc": [4, 92], "singl": [0, 51, 65, 66, 67, 82, 84, 86, 92], "single_file_flag": [65, 66, 67], "site": [7, 9], "situat": [81, 82], "six": 80, "size": [17, 62, 65, 66, 67, 89, 92], "skin": 96, "slab": [15, 84], "sldfe_data": 90, "sldfe_data1": 90, "sldfe_data2": 90, "sldfesquadratur": 90, "slice": 5, "slight": 9, "slow": 84, "slowest": 84, "slowli": 84, "sm82": 80, "small": [4, 82, 84], "smaller": [82, 84], "smallest": 82, "smb78": 82, "smith": 86, "smjbj77": 82, "smm": 71, "sn": [4, 7, 9, 79, 83, 84], "snake": 0, "snapshot": 9, "so": [2, 4, 80, 81, 82, 84, 86, 89, 90, 92, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "societi": 86, "softwar": 110, "soi": 85, "solut": [5, 6, 21, 64, 65, 66, 67, 68, 69, 79, 82, 83, 85, 86], "solv": [6, 66, 68, 70, 81, 82, 83, 84, 85, 86], "solver": [2, 3, 6, 25, 26, 27, 58, 59, 63, 64, 83, 86, 91], "solver_nam": [65, 66, 67], "solveradvanc": [58, 59, 62, 63], "solverexecut": [58, 59, 62, 63], "solveriniti": [58, 59, 62, 63], "solvername_filt": [58, 59, 63], "some": [4, 5, 9, 81, 82, 84, 96], "some_directori": 0, "some_other_directori": 0, "somememberfunct": 0, "someon": 4, "somewher": 4, "son": 80, "soon": 82, "sourc": [3, 4, 5, 6, 9, 64, 65, 66, 67, 69, 79, 80, 82, 83, 98, 110], "space": [0, 6, 80, 83, 85, 86, 100, 101, 102], "span": 0, "spars": [81, 84], "sparsiti": 81, "spatial": [6, 41, 42, 44, 65, 66, 67, 70, 71, 79, 80, 83, 84, 85, 86, 92, 100, 101, 102], "spatial_discret": [65, 66, 67], "specif": [9, 25, 26, 27, 64, 65, 66, 67, 86], "specifi": [47, 52, 58, 59, 63, 64, 65, 66, 67, 77, 86, 100, 101, 102], "spectral": 84, "spectrum": [77, 80, 81, 84], "sphere": [5, 35, 37, 52, 80, 82, 89, 90], "sphere2_mesh": 96, "sphere_mesh": 96, "spherelogicalvolum": 96, "spheric": [17, 37, 45, 46, 48, 54, 80, 82, 90], "split": [17, 56, 82, 84, 92, 98], "split_mesh": 56, "split_mesh_dir_path": 56, "spread": [90, 92], "spring": [5, 86], "springer": 80, "sq": 17, "sqrt": [80, 89, 90, 96], "squar": [82, 92, 100], "squash": 1, "sr11": 82, "ss86": 84, "ss_solver": 92, "ssh": 4, "ssl": 9, "ssss": 70, "stabl": 110, "stage": [4, 84, 85, 86], "stai": 4, "standard": [1, 6, 20, 79, 81, 82, 84, 102], "star": 5, "start": [4, 18, 22, 84, 86, 89, 92, 99], "startup": [7, 9], "state": [6, 66, 74, 79, 80, 82, 84], "statement": [0, 79, 80, 81], "static": [2, 29, 30, 31, 32], "statist": 84, "statu": 4, "std": [0, 2, 3], "steadi": [6, 66, 74, 79, 80, 82], "steadystatesolv": 92, "stem": 80, "step": [3, 9, 25, 26, 27, 46, 47, 48, 53, 54, 56, 68, 69, 70, 71, 72, 73, 74, 84, 85], "stone": 82, "store": [48, 65, 66, 67, 82], "str": [3, 17, 21, 22, 29, 30, 31, 32, 47, 48, 52, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 69, 70, 71, 77], "straightforwardli": 84, "strategi": 84, "stream": [79, 83, 84], "strength": [69, 75, 76, 92], "string": [0, 3], "strongli": [7, 9], "structur": [5, 43, 65, 66, 67, 81, 82, 84, 86], "style": [0, 4, 5, 7, 9], "stylua": 4, "sub": 95, "subcrit": 80, "subdivid": 82, "subdivis": [17, 92], "subdomain": [92, 100, 101, 103, 104, 105, 106], "submodul": [3, 7, 9], "subset": 85, "subtract": 81, "success": [9, 82, 84], "succinct": 80, "sudo": [7, 9], "sueli": 84, "suitabl": 9, "sum": [32, 81, 82], "sum_": [79, 80, 81, 82, 84, 85], "sum_func": 32, "sum_g": 79, "sum_i": 80, "summari": [81, 83], "summat": 82, "super": 89, "supercomput": [6, 86], "superlu_dist": 9, "superscript": [82, 84], "suppli": [65, 66, 67, 79, 80, 81, 82, 84, 90, 92, 98, 110], "support": [6, 7, 9, 65, 66, 67, 86, 98], "suppos": 79, "sure": [4, 92], "surfac": [38, 57, 65, 66, 82, 85, 89, 96], "surface_mesh": [38, 96], "surfacemesh": [38, 96], "surfacemeshlogicalvolum": 96, "surfmesh": 96, "swap": 86, "sweep": [6, 65, 66, 67, 82, 83, 84, 88], "sweep_typ": [65, 66], "swept": 86, "switch": 4, "sy": [9, 21, 89, 90, 92, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "symmetr": 82, "symmetri": 80, "syntax": 2, "synthet": [6, 84], "sys_argv": 21, "sysctl": [7, 9], "system": [0, 6, 7, 9, 46, 48, 54, 65, 71, 82, 83, 84], "t": [0, 79, 80, 81, 82, 85, 86], "t_": 82, "t_c": 82, "t_f": 82, "t_j": 82, "tabl": [2, 62, 65, 66, 67], "table_column_limit": 62, "tackl": 6, "tag": 9, "take": [4, 57, 80, 81, 82], "taken": 82, "tar": 9, "target": [3, 63], "target_block": 102, "task": [7, 9, 82, 86], "tau": 79, "tdg": 82, "teach": 2, "team": 3, "technic": 82, "techniqu": [5, 6, 82, 84, 86], "tell": 86, "temperatur": 77, "tempor": 79, "temporari": [21, 78], "tensor": [82, 84], "tera": 86, "teresa": [82, 86], "term": [79, 81, 82, 83, 84], "termin": [3, 9, 20, 89, 90, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "tesser": 45, "test": [51, 82, 103, 105, 106, 112], "tetrahedr": [82, 96], "tetrahedra": 82, "tetrahedron": 82, "texa": 82, "text": [4, 79, 80, 81, 82, 84, 85, 92, 107, 110, 111], "textbook": 80, "texttt": 84, "tg": 84, "th": [82, 84], "than": [4, 5, 9, 65, 66, 67, 79, 81, 84], "thei": [4, 79, 82, 86], "them": 64, "theori": [6, 80, 82, 84], "therefor": [4, 7, 9, 82, 84], "thermal": 83, "thesi": 82, "theta": [17, 45, 80, 90], "thi": [0, 2, 3, 4, 5, 7, 9, 20, 21, 22, 30, 31, 32, 46, 47, 48, 50, 51, 54, 56, 57, 63, 64, 65, 66, 67, 76, 78, 79, 80, 81, 82, 84, 85, 86, 89, 90, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "thick": [82, 84], "thing": 4, "think": 4, "this_is_snake_styl": 0, "thisisaclassnam": 0, "thisisastructnam": 0, "thisispascalstyl": 0, "thor": 4, "those": [4, 82, 86], "though": 4, "thought": 82, "thread": [3, 4], "three": [82, 85, 86], "through": [3, 82, 86, 90, 98, 100, 101], "throughout": [7, 9, 58, 59, 63], "thu": [3, 80, 84, 92, 100], "time": [4, 9, 25, 26, 27, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 79, 80, 81, 82, 85, 89, 92, 100], "time_history_limit": 62, "time_integr": 69, "timestamp": 3, "timmi": 86, "tip": 4, "titl": 6, "tj": 82, "todai": 5, "todd": [82, 84], "togeth": [2, 86], "toggl": [65, 66, 67], "tol": 84, "told": 4, "toler": [25, 26, 65, 66, 67, 68, 70, 71, 72, 84, 92], "took": 5, "tool": 90, "toolset": 9, "top": [4, 47], "top_boundary_nam": 47, "topic": [4, 82, 84], "total": [4, 65, 66, 67, 77, 80, 81, 82, 85, 89, 92], "tr": 82, "tr14": 84, "trace": 84, "track": 4, "tradit": [6, 82], "trail": 0, "transact": 86, "transfer": [77, 79, 81, 84], "transfer_moments_begin": 77, "transfer_moments_end": 77, "transform": 57, "transient": [66, 69], "translat": 57, "transpar": 89, "transport": [5, 6, 79, 82, 83, 84, 85, 86, 92], "transport_keigen": [103, 112], "transpos": 79, "travers": 82, "treatment": [6, 83], "tree": 4, "tri_2mat_bc_1542": 99, "triangl": [57, 82, 105], "triangular": [57, 82, 84, 88, 105], "trident": 82, "triplet": [82, 102], "true": [17, 22, 24, 33, 36, 52, 59, 62, 65, 66, 67, 68, 70, 71, 72, 84, 90, 96], "try": 4, "tupl": 75, "turcksin": 84, "turn": [3, 65, 66, 67], "tutori": [6, 92, 99, 101, 102], "tutt": 84, "two": [3, 7, 9, 33, 82, 84, 89, 96, 101, 102], "two_spheres_smal": 104, "txt": [7, 9], "type": [0, 2, 32, 51, 52, 55, 63, 65, 66, 67, 79, 80, 84, 85, 86, 89, 90, 92, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "typic": [2, 4, 6, 80, 84], "u": [4, 82, 84, 86, 89], "ubuntu": [7, 9], "ulf": 86, "unchang": 102, "unclear": 63, "uncollid": [6, 82, 83], "uncom": 89, "unconverg": 84, "underbrac": 81, "underli": 82, "underscor": [0, 4], "understood": 82, "uniform": [17, 46, 47, 48, 54, 56, 82, 90, 92, 96, 102], "union": [65, 66, 67, 82], "uniqu": [4, 89], "unit": [0, 52, 80, 82], "uniti": [80, 82], "univers": 82, "unknown": 82, "unless": [2, 3], "unlik": [7, 9], "unset": [65, 66, 67], "unstag": 4, "unstructur": [51, 82, 84, 86, 103, 104, 105], "until": [4, 82, 84, 86], "uo2": 112, "up": [4, 6, 96], "updat": [1, 5, 25, 26, 27, 58, 59, 63, 80, 84], "updatefieldfunct": [25, 26, 27], "upon": [82, 84], "upper": 0, "upscatt": [82, 83], "upstream": [4, 86], "upwind": [82, 86], "ur": [82, 86], "url": [80, 82, 84], "us": [0, 2, 3, 4, 5, 6, 8, 9, 17, 21, 22, 25, 26, 46, 47, 48, 52, 54, 56, 58, 59, 63, 64, 65, 66, 67, 70, 76, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 110], "usa": 82, "use_precursor": [65, 66, 67], "use_source_mo": [65, 66, 67], "usecolor": [89, 90, 92, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "user": [7, 9, 20, 64, 79, 80, 81, 82, 84, 90, 92, 98, 100, 101, 110], "usernam": [4, 7, 9], "usual": 80, "util": [3, 6, 64, 98], "v": [7, 9, 80, 82, 89], "v1": 82, "v2": 9, "v3": [7, 9], "v_g": 79, "vacuum": [65, 66, 67, 79, 80, 92], "val": [0, 40], "valid": 70, "valu": [0, 2, 25, 26, 27, 40, 52, 54, 58, 59, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 79, 80, 81, 82, 84, 86, 89, 92, 100, 101, 102], "value1": 2, "value2": 2, "value3": 2, "valueerror": [65, 66, 67], "varepsilon": 84, "vari": [0, 65, 66, 67], "variabl": [0, 1, 3, 6, 9, 20, 84, 89, 90], "variant": [82, 84], "variat": 84, "varieti": 6, "variou": [6, 63, 82, 92, 95], "varphi": [45, 80, 82], "varrho": 84, "vartheta": [81, 84], "vec": [17, 79, 80, 82, 85, 86, 90], "vec3_omega": 89, "vector": [10, 11, 12, 13, 14, 15, 16, 17, 21, 35, 41, 43, 44, 62, 65, 66, 67, 75, 80, 81, 90], "vector3": [2, 17, 30, 33, 34, 35, 36, 37, 38, 41, 42, 44, 52, 57, 90, 96], "vectorspatialfunct": 76, "veloc": [77, 80], "venv": 9, "verbos": [12, 13, 15, 23, 56, 65, 66, 67, 70, 71], "verbose_ags_iter": [65, 66, 67], "verbose_inner_iter": [65, 66, 67], "verbose_outer_iter": [65, 66, 67], "verbosity_level": 56, "veri": [5, 84, 86, 101, 102], "verifi": [7, 9], "vermaak": 86, "versatil": 6, "version": [7, 9, 62, 81], "vertex": 82, "vertic": [62, 82, 102], "via": 105, "view": [5, 7, 9], "view_init": 89, "virtual": 7, "visibl": 5, "visual": 3, "void": [0, 3], "volum": [2, 3, 6, 32, 33, 34, 35, 36, 37, 38, 52, 59, 76, 79, 82, 84, 86, 91], "volume1": 33, "volume2": 33, "volumetr": [3, 5, 59, 65, 66, 67, 76, 79, 82, 98], "volumetric_sourc": [65, 66, 67, 92], "volumetricsourc": [65, 66, 67, 92], "vram21": 86, "vtk": [29, 92, 96], "vtk_basenam": 92, "vtk_dir": 9, "vtu": [48, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105], "vx": [35, 96], "vy": [35, 96], "vz": [35, 96], "w": [7, 9, 84, 86], "wa": [2, 4, 65, 66, 86, 92, 103, 104], "wai": [3, 4, 47, 86], "wan09": 82, "wang": [82, 84], "want": [4, 7, 9, 79, 81, 92], "war08": 82, "ware": [82, 84], "warren": 80, "warsa": [82, 84], "water": 84, "wavefront": [57, 98, 105], "we": [2, 4, 79, 80, 81, 82, 84, 85, 86, 89, 90, 92, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112], "weak": [80, 84], "web": [7, 9], "weight": [10, 11, 12, 13, 14, 15, 16, 17, 82, 84], "well": [6, 81, 84], "went": 4, "were": [4, 86], "wf": 82, "wget": 9, "what": [4, 65, 66, 67, 80], "when": [0, 4, 7, 9, 17, 20, 36, 46, 47, 48, 54, 56, 59, 65, 66, 67, 76, 79, 81, 82, 84, 86, 89, 90, 92, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "where": [0, 4, 41, 42, 44, 65, 66, 67, 79, 80, 81, 82, 84, 86, 90, 92], "wherea": 82, "whether": [56, 62, 63, 65, 66, 67, 95, 102], "which": [2, 4, 51, 52, 58, 59, 62, 63, 65, 66, 67, 80, 81, 82, 86, 92, 96], "while": [3, 9, 79, 84, 86], "whole": [0, 96], "whose": [30, 31, 32, 52, 81, 89, 92], "wide": [6, 9], "wilei": 80, "william": [80, 86], "wise": [65, 66, 75, 82], "wish": 4, "within": [5, 7, 9, 20, 70, 76, 82, 83, 102], "without": [81, 82, 84, 86], "wm": [82, 84], "wmmp01": 82, "woodsford": 84, "woodward": 86, "work": [4, 51, 86], "workflow": [1, 6, 64], "worth": 6, "would": [2, 62, 84, 105], "wr09a": 82, "wr09b": 82, "wr10": [82, 84], "wr11": 82, "wrap": 62, "wrapmyclass": 3, "wrapper": [3, 10, 11, 12, 13, 14, 15, 16, 17, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "write": [4, 52, 65, 66, 67, 82], "write_delayed_psi_to_restart": [65, 66, 67], "write_restart_path": [65, 66, 67], "write_restart_time_interv": [65, 66, 67], "writeangularflux": [65, 66, 67], "writefluxmo": [65, 66, 67], "written": [0, 6, 56, 65, 66, 67, 80, 82, 84], "wrote": 56, "wwm04": 84, "www": [82, 84], "x": [2, 3, 35, 36, 37, 40, 42, 43, 44, 50, 81, 82, 89, 92, 96, 100, 101, 102, 107, 108, 111, 112], "x0": [35, 96], "xcut": [50, 92, 100, 101], "xi": 80, "xi_g": 84, "xmax": [36, 52, 96], "xmin": [36, 52, 92, 96], "xn": [80, 81], "xs3d": 89, "xs_1g": 107, "xs_2g": 111, "xs_map": [65, 66, 92], "xs_mat": [92, 107, 108, 111], "xs_uo2": 112, "xvzf": 9, "xxx": [65, 66, 67], "xy": [13, 86, 92], "xyz": [14, 41, 42, 44, 80, 82], "y": [2, 35, 36, 37, 42, 43, 44, 50, 80, 82, 89, 92, 96, 100, 101, 102], "y0": [35, 96], "y_": [79, 80, 82], "yaqi": [82, 84], "ycut": [50, 92, 100, 101], "year": 6, "yet": [4, 81, 82], "yield": [80, 82, 84, 85], "ymax": [36, 52, 96], "ymin": [36, 52, 96], "york": 80, "you": [2, 4, 7, 9], "youcef": 84, "your": [1, 3, 7, 9], "yourself": 4, "yousef": 84, "ys3d": 89, "yuanhua": 84, "yyi": [65, 66, 67], "z": [2, 35, 36, 37, 42, 43, 44, 47, 50, 80, 89, 96, 99, 101, 102], "z0": [35, 96], "zcut": [50, 92, 101], "zero": [51, 56, 65, 66, 67, 80, 82, 89], "zeroth": [65, 66, 67], "zeyao": 86, "zl04": 86, "zmax": [36, 47, 52, 96], "zmin": [36, 47, 52, 96], "zs3d": 89, "zsh": 9}, "titles": ["Coding Standards", "Developer\u2019s Guide", "Binding C++ classes to Lua", "Binding C++ classes to Python", "Developer Workflow", "Gallery", "The OpenSn Discrete-Ordinates Code", "Easy Install using built-in CMake script", "Quick Install Guide", "Installation guide", "pyopensn.aquad.AngularQuadrature", "pyopensn.aquad.CurvilinearQuadrature", "pyopensn.aquad.GLCProductQuadrature2DRZ", "pyopensn.aquad.GLCProductQuadrature2DXY", "pyopensn.aquad.GLCProductQuadrature3DXYZ", "pyopensn.aquad.GLProductQuadrature1DSlab", "pyopensn.aquad.ProductQuadrature", "pyopensn.aquad.SLDFESQuadrature", "pyopensn.context.EnableCaliper", "pyopensn.context.EnablePETScErrorHandler", "pyopensn.context.Finalize", "pyopensn.context.InitializeWithArgv", "pyopensn.context.SetCaliperConfig", "pyopensn.context.SetVerbosityLevel", "pyopensn.context.UseColor", "pyopensn.diffusion.CFEMDiffusionSolver", "pyopensn.diffusion.DFEMDiffusionSolver", "pyopensn.diffusion.DiffusionSolverBase", "pyopensn.fieldfunc.FieldFunction", "pyopensn.fieldfunc.FieldFunctionGridBased", "pyopensn.fieldfunc.FieldFunctionInterpolationLine", "pyopensn.fieldfunc.FieldFunctionInterpolationPoint", "pyopensn.fieldfunc.FieldFunctionInterpolationVolume", "pyopensn.logvol.BooleanLogicalVolume", "pyopensn.logvol.LogicalVolume", "pyopensn.logvol.RCCLogicalVolume", "pyopensn.logvol.RPPLogicalVolume", "pyopensn.logvol.SphereLogicalVolume", "pyopensn.logvol.SurfaceMeshLogicalVolume", "pyopensn.math.Function", "pyopensn.math.ScalarMaterialFunction", "pyopensn.math.ScalarSpatialFunction", "pyopensn.math.ScalarSpatialMaterialFunction", "pyopensn.math.Vector3", "pyopensn.math.VectorSpatialFunction", "pyopensn.math.Ylm", "pyopensn.mesh.DistributedMeshGenerator", "pyopensn.mesh.ExtruderMeshGenerator", "pyopensn.mesh.FromFileMeshGenerator", "pyopensn.mesh.GraphPartitioner", "pyopensn.mesh.KBAGraphPartitioner", "pyopensn.mesh.LinearGraphPartitioner", "pyopensn.mesh.MeshContinuum", "pyopensn.mesh.MeshGenerator", "pyopensn.mesh.OrthogonalMeshGenerator", "pyopensn.mesh.PETScGraphPartitioner", "pyopensn.mesh.SplitFileMeshGenerator", "pyopensn.mesh.SurfaceMesh", "pyopensn.post.AggregateNodalValuePostProcessor", "pyopensn.post.CellVolumeIntegralPostProcessor", "pyopensn.post.PostProcessor", "pyopensn.post.Print", "pyopensn.post.SetPrinterOptions", "pyopensn.post.SolverInfoPostProcessor", "pyopensn.response.ResponseEvaluator", "pyopensn.solver.DiscreteOrdinatesCurvilinearProblem", "pyopensn.solver.DiscreteOrdinatesProblem", "pyopensn.solver.LBSProblem", "pyopensn.solver.NonLinearKEigenSolver", "pyopensn.solver.PRKSolver", "pyopensn.solver.PowerIterationKEigenSCDSASolver", "pyopensn.solver.PowerIterationKEigenSMMSolver", "pyopensn.solver.PowerIterationKEigenSolver", "pyopensn.solver.Solver", "pyopensn.solver.SteadyStateSolver", "pyopensn.source.PointSource", "pyopensn.source.VolumetricSource", "pyopensn.xs.MultiGroupXS", "Python API", "<span class=\"section-number\">7. </span>Adjoint Flux Formalism", "<span class=\"section-number\">1. </span>Background on the Linear Boltzmann Equation", "<span class=\"section-number\">3. </span>Multigroup Cross-Section Data", "<span class=\"section-number\">2. </span>Phase-space Discretization", "Theory Manual", "<span class=\"section-number\">5. </span>Iterative Solution Algorithms", "<span class=\"section-number\">4. </span>Outcome of a Simulation: Particle Distribution, Reaction Rates, and Leakage Rates", "<span class=\"section-number\">6. </span>Parallel Sweeps", "<span class=\"section-number\">3. </span>Angular Quadrature", "<span class=\"section-number\">3.1. </span>Introduction to Angular Quadratures", "<span class=\"section-number\">3.2. </span>Product Quadrature", "<span class=\"section-number\">3.3. </span>Simplified Linear Discontinuous Finite Element (LDFE) Quadrature", "Tutorials", "<span class=\"section-number\">4.1. </span>A First Example", "<span class=\"section-number\">4. </span>Linear Boltzmann Solver", "<span class=\"section-number\">5. </span>Logical Volumes", "<span class=\"section-number\">5.1. </span>Introduction to Logical Volumes", "<span class=\"section-number\">5.2. </span>Using Logical Volumes", "<span class=\"section-number\">1. </span>Meshing and Partitioning", "<span class=\"section-number\">1.1. </span>Introduction to Meshing and Partitioning", "<span class=\"section-number\">1.8. </span>Reading a 2D mesh file and extruding it", "<span class=\"section-number\">1.2. </span>2D Orthogonal Grid Generation", "<span class=\"section-number\">1.3. </span>3D Orthogonal Grid Generation", "<span class=\"section-number\">1.9. </span>3D Orthogonal Grid Generation with multiple block IDs", "<span class=\"section-number\">1.4. </span>Reading a 2D gmsh file", "<span class=\"section-number\">1.5. </span>Reading a 3D gmsh file", "<span class=\"section-number\">1.6. </span>Reading a 2D obj file", "<span class=\"section-number\">1.7. </span>Reading a 3D VTU file", "<span class=\"section-number\">2.3. </span>Read ASCII file for 1-group cross sections", "<span class=\"section-number\">2.2. </span>Built-in method for 1-group cross sections", "<span class=\"section-number\">2. </span>Cross Sections", "<span class=\"section-number\">2.1. </span>Introduction to Cross Sections", "<span class=\"section-number\">2.4. </span>Read ASCII file for multi-group cross sections", "<span class=\"section-number\">2.5. </span>Read HDF5 file from OpenMC to load multi-group cross sections"], "titleterms": {"": 1, "1": [5, 90, 107, 108], "2": [5, 90], "2d": [99, 100, 103, 105], "3d": [101, 102, 104, 106], "768": 5, "A": 92, "The": [6, 80], "acceler": 84, "adjoint": 79, "again": [100, 101], "aggreg": 86, "aggregatenodalvaluepostprocessor": 58, "algorithm": 84, "angl": [80, 82, 86], "angular": [78, 87, 88, 92], "angularquadratur": 10, "api": 78, "applic": [7, 9], "aquad": [10, 11, 12, 13, 14, 15, 16, 17], "argument": 78, "ascii": [107, 111], "attent": 4, "background": [80, 84], "base": 78, "benchmark": 5, "bind": [2, 3], "block": 102, "boltzmann": [80, 92, 93], "boolean": [0, 96], "booleanlogicalvolum": 33, "boost": 9, "boundari": 80, "branch": 4, "build": [7, 9], "built": [7, 108], "c": [0, 2, 3], "c5g7": 5, "calip": [9, 78], "call": [107, 108, 111, 112], "can": [107, 108, 111, 112], "capabl": 5, "cartesian": 80, "cellvolumeintegralpostprocessor": 59, "cfemdiffusionsolv": 25, "circular": 96, "cite": 6, "class": [0, 2, 3, 78], "clone": [7, 9], "cmake": 7, "code": [0, 6], "command": 0, "comment": 0, "commit": 4, "compil": 3, "condit": [0, 80], "configur": [7, 9, 78], "consol": [7, 9], "constant": 0, "content": 6, "context": [18, 19, 20, 21, 22, 23, 24], "convent": 0, "convert": 92, "coordin": 80, "creat": [4, 9, 89], "critic": 5, "cross": [78, 81, 92, 107, 108, 109, 110, 111, 112], "curvilinear": [78, 80], "curvilinearquadratur": 11, "cylind": 96, "data": [81, 107, 108, 111, 112], "definit": 80, "depend": 7, "detail": 2, "develop": [1, 3, 4, 7, 9], "dfemdiffusionsolv": 26, "diffus": [25, 26, 27, 78], "diffusionsolverbas": 27, "direct": [0, 89], "discontinu": 90, "discret": [6, 78, 82], "discreteordinatescurvilinearproblem": 65, "discreteordinatesproblem": 66, "distribut": 85, "distributedmeshgener": 46, "document": [7, 9], "each": 102, "easi": 7, "eigen": 78, "element": 90, "enablecalip": 18, "enablepetscerrorhandl": 19, "energi": 82, "entri": 102, "enum": [0, 2], "environ": 9, "equat": 80, "evalu": 78, "exampl": [90, 92, 102], "expans": 80, "export": [100, 101, 102], "extens": 92, "extrud": 99, "extrudermeshgener": 47, "field": [78, 92], "fieldfunc": [28, 29, 30, 31, 32], "fieldfunct": 28, "fieldfunctiongridbas": 29, "fieldfunctioninterpolationlin": 30, "fieldfunctioninterpolationpoint": 31, "fieldfunctioninterpolationvolum": 32, "file": [0, 99, 103, 104, 105, 106, 107, 111, 112], "final": [20, 89, 90, 92, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "finit": 90, "first": 92, "fix": 4, "flux": [79, 84], "formal": 79, "format": 4, "from": [92, 112], "fromfilemeshgener": 48, "function": [2, 39, 78, 89, 92, 96], "futur": 3, "galleri": 5, "gener": [78, 92, 100, 101, 102], "getter": 0, "ggener": 102, "glcproductquadrature2drz": 12, "glcproductquadrature2dxi": 13, "glcproductquadrature3dxyz": 14, "glproductquadrature1dslab": 15, "gmsh": [103, 104], "graph": 78, "graphpartition": 49, "grid": [78, 100, 101, 102], "group": [84, 86, 107, 108, 111, 112], "guid": [1, 8, 9], "harmon": 78, "hdf5": 112, "i": 102, "id": [92, 100, 101, 102], "import": 92, "includ": 0, "initi": 80, "initializewithargv": 21, "ins": 3, "instal": [7, 8, 9], "instead": 96, "interpol": 78, "introduct": [86, 88, 95, 98, 110], "iter": [78, 84], "j": 102, "jupyt": [89, 90, 92, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "k": [78, 102], "kba": [100, 101], "kbagraphpartition": 50, "kinet": 78, "krylov": 84, "lb": 92, "lbsproblem": 67, "ldfe": [78, 90], "leakag": 85, "line": 0, "linear": [78, 80, 90, 92, 93], "lineargraphpartition": 51, "list": [92, 100, 101, 102], "load": [96, 112], "log": 78, "logic": [78, 94, 95, 96], "logicalvolum": 34, "logvol": [33, 34, 35, 36, 37, 38], "lua": 2, "macro": 0, "manual": 83, "materi": [92, 100, 101, 102], "material_id": 102, "math": [39, 40, 41, 42, 43, 44, 45, 78], "member": 2, "mesh": [5, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 78, 92, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106], "meshcontinuum": 52, "meshgener": 53, "method": [82, 84, 108], "modul": [7, 9], "more": 2, "multi": [111, 112], "multigroup": [81, 84], "multigroupx": 77, "multipl": 102, "name": 0, "namespac": [0, 2, 3], "node": [92, 100, 101, 102], "non": 78, "nonlinearkeigensolv": 68, "notebook": [89, 90, 92, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "number": 0, "obj": 105, "onli": [89, 90, 92, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "openmc": 112, "opensn": [6, 7, 9, 80], "oper": [0, 96], "option": 92, "ordin": [6, 78], "origin": 96, "orthogon": [92, 100, 101, 102], "orthogonalmeshgener": 54, "outcom": 85, "parallel": 86, "parallelepip": 96, "paramet": [0, 2, 89, 90], "parmeti": [100, 101], "particl": 85, "partit": [86, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106], "partition": 78, "petsc": 9, "petscgraphpartition": 55, "phase": 82, "plot": [89, 90], "plug": 3, "point": 78, "pointer": 0, "pointsourc": 75, "polyhedr": 5, "possibl": 92, "post": [58, 59, 60, 61, 62, 63, 78, 92], "postprocessor": 60, "power": [78, 84], "poweriterationkeigenscdsasolv": 70, "poweriterationkeigensmmsolv": 71, "poweriterationkeigensolv": 72, "print": 61, "printer": 78, "prksolver": 69, "problem": [78, 92], "process": [84, 92], "processor": [5, 78], "product": [78, 89], "productquadratur": 16, "public": 6, "pull": 4, "pure": 3, "put": 92, "pyopensn": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "python": [3, 78, 96, 107, 108, 111, 112], "quadratur": [78, 87, 88, 89, 90, 92], "quick": 8, "rate": 85, "rcclogicalvolum": 35, "reaction": 85, "read": [99, 103, 104, 105, 106, 107, 111, 112], "reader": [107, 111, 112], "real": 5, "recommend": 6, "rectangular": 96, "redistribut": 80, "refer": [0, 80, 82, 84, 86], "regress": [7, 9], "request": 4, "requir": 92, "respons": [64, 78], "responseevalu": 64, "result": 90, "retriev": [89, 107, 108, 111, 112], "right": 96, "rpplogicalvolum": 36, "run": [7, 9, 92], "scalarmaterialfunct": 40, "scalarspatialfunct": 41, "scalarspatialmaterialfunct": 42, "schedul": 86, "script": 7, "section": [78, 81, 92, 107, 108, 109, 110, 111, 112], "send": 4, "set": [78, 86], "setcaliperconfig": 22, "setprinteropt": 62, "setter": 0, "setverbositylevel": 23, "short": 80, "simplifi": [78, 90], "simul": [5, 85], "skinmesh": 96, "sldfe": 90, "sldfesquadratur": 17, "sn": 82, "solut": 84, "solv": 80, "solver": [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 78, 84, 92, 93], "solverinfopostprocessor": 63, "some": [107, 108, 111, 112], "sourc": [75, 76, 78, 84, 92], "space": 82, "spatial": 82, "sphere": 96, "spherelogicalvolum": 37, "spheric": 78, "splitfilemeshgener": 56, "squash": 4, "standard": 0, "state": 78, "static": 0, "steadi": 78, "steadystatesolv": 74, "stream": 80, "struct": 0, "subspac": 84, "summari": 80, "surfac": 78, "surfacemesh": 57, "surfacemeshlogicalvolum": 38, "sweep": [5, 86], "system": 80, "target": 102, "term": 80, "termin": 92, "test": [7, 9], "theori": 83, "thermal": 84, "thi": 92, "togeth": 92, "tool": [7, 9], "transient": 78, "transport": 80, "treatment": 84, "tupl": 102, "tutori": 91, "type": 78, "uncollid": 84, "updat": 4, "upscatt": 84, "us": [7, 92, 96], "usecolor": 24, "variabl": 2, "vector": 78, "vector3": 43, "vectorspatialfunct": 44, "via": 92, "virtual": 9, "visual": [96, 99, 103, 104, 105, 106], "volum": [78, 94, 95, 96], "volumetr": 92, "volumetricsourc": 76, "vtk": 9, "vtu": 106, "where": 102, "within": 84, "workflow": 4, "world": 5, "wrapper": 78, "x": 77, "ylm": 45, "your": 4}})